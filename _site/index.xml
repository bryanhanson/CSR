<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Chemometrics and Spectroscopy Using R</title>
<link>http://chemospec.org/index.html</link>
<atom:link href="http://chemospec.org/index.xml" rel="self" type="application/rss+xml"/>
<description>Applying chemometrics to spectroscopy using R</description>
<generator>quarto-0.9.312</generator>
<lastBuildDate>Thu, 24 Mar 2022 07:00:00 GMT</lastBuildDate>
<item>
  <title>Metabolic Phenotyping Protocol Part 2</title>
  <link>http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2.html</link>
  <description><![CDATA[ 



<div class="cell">

</div>
<p>Part 1 of this series is <a href="https://chemospec.org/posts/2022-02-01-Protocol-Pt1/">here</a>.</p>
<p>If you aren’t familiar with <code>ChemoSpec</code>, you might wish to look at the introductory <a href="https://bryanhanson.github.io/ChemoSpec/articles/ChemoSpec.html">vignette</a> first.</p>
<p><strong>In this series of posts we are following the protocol as described in the printed publication closely <span class="citation" data-cites="Blaise2021">(Blaise et al. 2021)</span>. The authors have also provided a <a href="https://github.com/Gscorreia89/chemometrics-tutorials">Jupyter notebook</a>. This is well worth your time, even if Python is not your preferred lanaguage, as there are additional examples and discussion for study.</strong></p>
<section id="read-in-the-data" class="level1">
<h1>Read in the Data</h1>
<p>I saved the <code>Spectra</code> object we created in Part 1 so we can read it and remind ourselves of what’s in it. Due to the compression in R’s <code>save</code> function the data takes up 4.9 Mb on disk. The original csv files total about 62 Mb.</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/getData_5c76d8f7c10699917b5f7feda26b160b">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"ChemoSpec"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">load</span>(<span class="st" style="color: #20794D;">"Worms.Rdata"</span>)  <span class="co" style="color: #5E5E5E;"># restores the 'Worms' Spectra object</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">sumSpectra</span>(Worms)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
 C. elegans metabolic phenotyping study (Blaise 2007) 

    There are 139 spectra in this set.
    The y-axis unit is intensity.

    The frequency scale runs from
    8.9995 to 5e-04 ppm
    There are 8600 frequency values.
    The frequency resolution is
    0.001 ppm/point.

    This data set is not continuous
    along the frequency axis.
    Here are the data chunks:

  beg.freq end.freq   size beg.indx end.indx
1   8.9995   5.0005 -3.999        1     4000
2   4.5995   0.0005 -4.599     4001     8600

    The spectra are divided into 4 groups: 

   group no.     color symbol alt.sym
1 Mut_L2  32 #FB0D16FF      0      m2
2 Mut_L4  33 #FFC0CBFF     15      m4
3  WT_L2  34 #511CFCFF      1      w2
4  WT_L4  40 #2E94E9FF     16      w4


*** Note: this is an S3 object
of class 'Spectra'</code></pre>
</div>
</div>
</section>
<section id="exploratory-data-analysis" class="level1">
<h1>Exploratory Data Analysis</h1>
<p>We will follow the steps described in the published protocol closely.</p>
<section id="normalization-scaling" class="level2">
<h2 class="anchored" data-anchor-id="normalization-scaling">Normalization &amp; Scaling</h2>
<p>Apply PQN normalization; scaling in <code>ChemoSpec</code> is applied at the PCA stage (next).</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/norm_56aa7b023a689faf5f4672ad1706bd85">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">Worms <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">normSpectra</span>(Worms)  <span class="co" style="color: #5E5E5E;"># PQN is the default</span></span></code></pre></div>
</div>
</section>
<section id="pca" class="level2">
<h2 class="anchored" data-anchor-id="pca">PCA</h2>
<p>Conduct classical PCA using autoscaling.<sup>1</sup> Note that <code>ChemoSpec</code> includes several different variants of PCA, each with scaling options. See the introductory vignette for more details. For more about what PCA is and how it works, please see the <a href="https://bryanhanson.github.io/LearnPCA/">LearnPCA</a> package.</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/pca_1a1da64fbdebcc58e9e3bb45e7af0a25">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1">c_pca <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c_pcaSpectra</span>(Worms, <span class="at" style="color: #657422;">choice =</span> <span class="st" style="color: #20794D;">"autoscale"</span>)  <span class="co" style="color: #5E5E5E;"># no scaling is the default</span></span></code></pre></div>
</div>
<section id="components-to-retain" class="level3">
<h3 class="anchored" data-anchor-id="components-to-retain">Components to Retain</h3>
<p>A key question at this stage is how many components are needed to describe the data set. Keep in mind that this depends on the choice of scaling. Figures @ref(fig:screeAlt) and @ref(fig:screeTrad) are two different types of scree plots, which show the residual variance. This is the R<sup>2</sup><sub>x</sub> value in the protocol (see protocol Figure 7a). Another approach to answering this question is to do a cross-validated PCA.<sup>2</sup> The results are shown in Figure @ref(fig:cv-pca). These are the Q<sup>2</sup><sub>x</sub> values in protocol Figure 7a. All of these ways of looking at the variance explained suggest that retaining three or possibly four PCs is adequate.</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/screeAlt_369e9c60f38afa2078046b1347182bbf">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;">plotScree</span>(c_pca)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/screeAlt-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<p></p><p></p>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/screeTrad_225c8fd5d79364a56ef15efa04fe1f2f">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">plotScree</span>(c_pca, <span class="at" style="color: #657422;">style =</span> <span class="st" style="color: #20794D;">"trad"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/screeTrad-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<p></p><p></p>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/cv-pca_6ae9110fe4d82a3790f82fc73c2a7a86">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">cv_pcaSpectra</span>(Worms, <span class="at" style="color: #657422;">choice =</span> <span class="st" style="color: #20794D;">"autoscale"</span>, <span class="at" style="color: #657422;">pcs =</span> <span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/cv-pca-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<p></p><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="score-plots" class="level3">
<h3 class="anchored" data-anchor-id="score-plots">Score Plots</h3>
<p>Next, examine the score plots (Figures @ref(fig:scores12), @ref(fig:scores23)). In these plots, each data point is colored by its group membership (keep in mind this is completely independent of the PCA calculation). In addition, robust confidence ellipses are shown for each group. Inspection of these plots is one way to identify potential outliers. The other use is of course to see if the sample classes separate, and by how much.</p>
<p>Examination of these plots shows that separation by classes has not really been achieved using autoscaling. In Figure @ref(fig:scores12) we see four clear outlier candidates (samples 37, 101, 107, and 118). In Figure @ref(fig:scores23) we see some of these samples and should probably add sample 114 for a total of five candidates.</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/scores12_37d56700349b4a02d183774d55fa77ac">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb8-1">p <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">plotScores</span>(Worms, c_pca, <span class="at" style="color: #657422;">pcs =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">2</span>, <span class="at" style="color: #657422;">ellipse =</span> <span class="st" style="color: #20794D;">"rob"</span>, <span class="at" style="color: #657422;">tol =</span> <span class="fl" style="color: #AD0000;">0.02</span>)</span>
<span id="cb8-2">p</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/scores12-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<p></p><p></p>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/scores23_db4b144372bcf165e6b5df22c17c3b69">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1">p <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">plotScores</span>(Worms, c_pca, <span class="at" style="color: #657422;">pcs =</span> <span class="dv" style="color: #AD0000;">2</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">3</span>, <span class="at" style="color: #657422;">ellipse =</span> <span class="st" style="color: #20794D;">"rob"</span>, <span class="at" style="color: #657422;">leg.loc =</span> <span class="st" style="color: #20794D;">"topright"</span>, <span class="at" style="color: #657422;">tol =</span> <span class="fl" style="color: #AD0000;">0.02</span>)</span>
<span id="cb9-2">p</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/scores23-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<p></p><p></p>
</figure>
</div>
</div>
</div>
<p>To label more sample points, you can increase the value of the argument <code>tol</code>.</p>
</section>
<section id="outliers" class="level3">
<h3 class="anchored" data-anchor-id="outliers">Outliers</h3>
<p>The protocol recommends plotting Hotelling’s <em>T</em><sup>2</sup> ellipse for the entire data set; this is not implemented in <code>ChemoSpec</code> but we can easily do it if we are using <code>ggplot2</code> plots (which is the default in <code>ChemoSpec</code>). We need the <code>ellipseCoord</code> function from the <code>HotellingsEllipse</code> package.<sup>3</sup></p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/hotelling1_62a6c0411cd441951152933b0a1302d2">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">source</span>(<span class="st" style="color: #20794D;">"ellipseCoord.R"</span>)</span>
<span id="cb10-2">xy_coord <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ellipseCoord</span>(<span class="fu" style="color: #4758AB;">as.data.frame</span>(c_pca<span class="sc" style="color: #5E5E5E;">$</span>x), <span class="at" style="color: #657422;">pcx =</span> <span class="dv" style="color: #AD0000;">1</span>, <span class="at" style="color: #657422;">pcy =</span> <span class="dv" style="color: #AD0000;">2</span>, <span class="at" style="color: #657422;">conf.limit =</span> <span class="fl" style="color: #AD0000;">0.95</span>,</span>
<span id="cb10-3">    <span class="at" style="color: #657422;">pts =</span> <span class="dv" style="color: #AD0000;">500</span>)</span>
<span id="cb10-4">p <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">plotScores</span>(Worms, c_pca, <span class="at" style="color: #657422;">which =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">2</span>, <span class="at" style="color: #657422;">ellipse =</span> <span class="st" style="color: #20794D;">"none"</span>, <span class="at" style="color: #657422;">tol =</span> <span class="fl" style="color: #AD0000;">0.02</span>)</span>
<span id="cb10-5">p <span class="ot" style="color: #003B4F;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;">+</span> <span class="fu" style="color: #4758AB;">geom_path</span>(<span class="at" style="color: #657422;">data =</span> xy_coord, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> x, <span class="at" style="color: #657422;">y =</span> y)) <span class="sc" style="color: #5E5E5E;">+</span> <span class="fu" style="color: #4758AB;">scale_color_manual</span>(<span class="at" style="color: #657422;">values =</span> <span class="st" style="color: #20794D;">"black"</span>)</span>
<span id="cb10-6">p</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/hotelling1-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<p></p><p></p>
</figure>
</div>
</div>
</div>
<p>We can see many of the same outliers by this approach as we saw in Figures @ref(fig:scores12) and @ref(fig:scores23).</p>
<p>Another way to identify outliers is to use the approach described in <span class="citation" data-cites="Filzmoser2009">Varmuza and Filzmoser (2009)</span> section 3.7.3. Figures @ref(fig:diagOD) and @ref(fig:diagSD) give the plots. Please see Filzmoser for the details, but any samples that are above the plotted threshold line are candidate outliers, and any samples above the threshold in <em>both</em> plots should be looked at very carefully. Though we are using classical PCA, Filzmoser recommends using these plots with robust PCA. These plots are a better approach than “eye balling it” on the score plots.</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/diagOD_38dfefcc084f8429e4cecf83f91f3842">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">p <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">pcaDiag</span>(Worms, c_pca, <span class="at" style="color: #657422;">plot =</span> <span class="st" style="color: #20794D;">"OD"</span>)</span>
<span id="cb11-2">p</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/diagOD-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<p></p><p></p>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/diagSD_d9be7a1ce1108a36a805702fa51e9339">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb12-1">p <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">pcaDiag</span>(Worms, c_pca, <span class="at" style="color: #657422;">plot =</span> <span class="st" style="color: #20794D;">"SD"</span>)</span>
<span id="cb12-2">p</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/diagSD-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<p></p><p></p>
</figure>
</div>
</div>
</div>
<p>Comparison of these plots suggest that samples 37, 101, 107, 114 and 118 are likely outliers. These spectra should be examined to see if the reason for their outlyingness can be deduced. If good reason can be found, they can be removed as follows.<sup>4</sup></p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/removeOutliers_7e075fd15a434d1645e31807799fe6c2">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1">Worms2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">removeSample</span>(Worms, <span class="at" style="color: #657422;">rem.sam =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"37_"</span>, <span class="st" style="color: #20794D;">"101_"</span>, <span class="st" style="color: #20794D;">"107_"</span>, <span class="st" style="color: #20794D;">"114_"</span>, <span class="st" style="color: #20794D;">"118_"</span>))</span></code></pre></div>
</div>
<p>At this point one should repeat the PCA, score plots and diagnostic plots to get a good look at how removing these samples affected the results. Those tasks are left to the reader.</p>
<!-- One thing the protocol does not explicitly discuss is an inspection of the loadings.  This is useful in order to see if any particular frequencies are driving the separation of the samples in the score plot. For the sake of completeness, we'll go ahead and plot the loadings. See Figure \@ref(fig:loadings). From this plot it is clear that the peaks above $\delta$ 5.0 are not contributing much to differentiating the samples.  One could consider removing these peaks from the analysis, but we'll leave them for now. -->
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/loadings_d6ef35bf4c5ea40a24116c5a0a75157b">

</div>
<p>We will continue in the next post with a discussion of loadings.</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/saveResults_aaa0bfc31d5d7bfe5377174c43f0014f">

</div>
<hr>
<p>This post was created using <code>ChemoSpec</code> version 6.1.3 and <code>ChemoSpecUtils</code> version 1.0.0.</p>



</section>
</section>
</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Blaise2021" class="csl-entry">
Blaise, Benjamin J., Gonçalo D. S. Correia, Gordon A. Haggart, Izabella Surowiec, Caroline Sands, Matthew R. Lewis, Jake T. M. Pearce, et al. 2021. <span>“Statistical Analysis in Metabolic Phenotyping.”</span> <em>Nature Protocols</em> 16: 4299–4326. <a href="https://doi.org/10.1038/s41596-021-00579-1">https://doi.org/10.1038/s41596-021-00579-1</a>.
</div>
<div id="ref-Filzmoser2009" class="csl-entry">
Varmuza, K., and P. Filzmoser. 2009. <em>Introduction to Multivariate Statistical Analysis in Chemometrics</em>. CRC Press.
</div>
</div></section><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Without scaling, the largest peaks will drive the separation in the scores plot.↩︎</p></li>
<li id="fn2"><p>Be sure you have <code>ChemoSpec</code> 6.1.3 or higher, as <code>cv_pcaSpectra</code> had a bug in it! One benefit of writing these posts is finding lame bugs…↩︎</p></li>
<li id="fn3"><p>We are sourcing in a corrected version of the function, as the CRAN version has a small <a href="https://github.com/ChristianGoueguel/HotellingEllipse/issues/2">error</a> in it.↩︎</p></li>
<li id="fn4"><p>The <a href="https://github.com/Gscorreia89/chemometrics-tutorials">Jupyter notebook</a> has details about this.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Bryan Hanson},
  title = {Metabolic {Phenotyping} {Protocol} {Part} 2},
  date = {2022-03-24},
  url = {http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2022. <span>“Metabolic Phenotyping Protocol Part
2.”</span> March 24, 2022. <a href="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2.html">http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpec</category>
  <category>Metabolomics</category>
  <guid>http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2.html</guid>
  <pubDate>Thu, 24 Mar 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Chemometrics in Spectroscopy: Key References</title>
  <link>http://chemospec.org/posts/2022-02-18-Key-References/2022-02-18-Key-References.html</link>
  <description><![CDATA[ 



<p>Jerome Workman Jr.&nbsp;and Howard Mark have published a very useful series of articles in <a href="https://www.spectroscopyonline.com">Spectroscopy Online</a>, summarizing common chemometric methods in spectroscopy, and giving the key publications on each. These are a great resource if one is learning about a technique, or if one wants to check out the fundamentals of a method you think you already know. Posting here for convenience!</p>
<p><em>Protip: These pages load slowly in some browsers. I had the best luck with Chrome. Try the reader view for a user-friendly version that prints well (if you are in to that).</em></p>
<ul>
<li><a href="https://www.spectroscopyonline.com/view/a-survey-of-chemometric-methods-used-in-spectroscopy">Survey of Chemometric Methods in Spectroscopy</a></li>
<li><a href="https://www.spectroscopyonline.com/view/survey-of-key-descriptive-references-for-chemometric-methods-used-for-spectroscopy-part-i">Key References Part 1</a></li>
<li><a href="https://www.spectroscopyonline.com/view/survey-of-key-descriptive-references-for-chemometric-methods-used-for-spectroscopy-part-ii">Key References Part 2</a></li>
</ul>



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Bryan Hanson},
  title = {Chemometrics in {Spectroscopy:} {Key} {References}},
  date = {2022-02-18},
  url = {http://chemospec.org/posts/2022-02-18-Key-References/2022-02-18-Key-References.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2022. <span>“Chemometrics in Spectroscopy: Key
References.”</span> February 18, 2022. <a href="http://chemospec.org/posts/2022-02-18-Key-References/2022-02-18-Key-References.html">http://chemospec.org/posts/2022-02-18-Key-References/2022-02-18-Key-References.html</a>.
</div></div></section></div> ]]></description>
  <category>Literature</category>
  <guid>http://chemospec.org/posts/2022-02-18-Key-References/2022-02-18-Key-References.html</guid>
  <pubDate>Fri, 18 Feb 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Do You have Stale Imports or Suggests?</title>
  <link>http://chemospec.org/posts/2022-02-09-Imports-Suggests/2022-02-09-Imports-Suggests.html</link>
  <description><![CDATA[ 



<div class="cell">

</div>
<p>I’ve been developing packages in <code>R</code> for over a decade now. When adding new features to a package, I often import functions from another package, and of course that package goes in the <code>Imports:</code> field of the <code>DESCRIPTION</code> file. Later, I might change my approach entirely and no longer need that package. Do I remember to remove it from <code>DESCRIPTION</code>? Generally not. The same thing happens when writing a new vignette, and it can happen with the <code>Suggests:</code> field as well. It can also happen when one splits a packages into several smaller packages. If one forgets to delete a package from the <code>DESCRIPTION</code> file, the dependencies become bloated, because all the imported and suggested packages have to be available to install the package. This adds overhead to the project, and increases the possibility of a namespace conflict.</p>
<p>In fact this just happened to me <em>again!</em> The author of a package I had in <code>Suggests:</code> wrote to me and let me know their package would be archived. It was an easy enough fix for me, as it was a “stale” package in that I was no longer using it. I had added it for a vignette which I later deleted, as I decided a series of blog posts was a better approach.</p>
<p>So I decided to write a little function to check for such stale <code>Suggests:</code> and <code>Import:</code> entries. This post is about that function. As far as I can tell there is no built-in function for this purpose, and CRAN does not check for stale entries. So it was worth my time to automate the process.<sup>1</sup></p>
<p>The first step is to read in the <code>DESCRIPTION</code> file for the package (so we want our working directory to be the top level of the package). There is a built in function for this. We’ll use the <code>DESCRIPTION</code> file from the <code>ChemoSpec</code> package as a demonstration.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;"># setwd("...") # set to the top level of the package</span></span>
<span id="cb1-2">desc <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read.dcf</span>(<span class="st" style="color: #20794D;">"DESCRIPTION"</span>, <span class="at" style="color: #657422;">all =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
</div>
<p>The argument <code>all = TRUE</code> is a bit odd in that it has a particular purpose (see <code>?read.dcf</code>) which isn’t really important here, but has the side effect of returning a data frame, which makes our job simpler. Let’s look at what is returned.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">str</span>(desc)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   1 obs. of  18 variables:
 $ Package         : chr "ChemoSpec"
 $ Type            : chr "Package"
 $ Title           : chr "Exploratory Chemometrics for Spectroscopy"
 $ Version         : chr "6.1.2"
 $ Date            : chr "2022-02-08"
 $ Authors@R       : chr "c(\nperson(\"Bryan A.\", \"Hanson\",\nrole = c(\"aut\", \"cre\"), email =\n\"hanson@depauw.edu\",\ncomment = c("| __truncated__
 $ Description     : chr "A collection of functions for top-down exploratory data analysis\nof spectral data including nuclear magnetic r"| __truncated__
 $ License         : chr "GPL-3"
 $ Depends         : chr "R (&gt;= 3.5),\nChemoSpecUtils (&gt;= 1.0)"
 $ Imports         : chr "plyr,\nstats,\nutils,\ngrDevices,\nreshape2,\nreadJDX (&gt;= 0.6),\npatchwork,\nggplot2,\nplotly,\nmagrittr"
 $ Suggests        : chr "IDPmisc,\nknitr,\njs,\nNbClust,\nlattice,\nbaseline,\nmclust,\npls,\nclusterCrit,\nR.utils,\nRColorBrewer,\nser"| __truncated__
 $ URL             : chr "https://bryanhanson.github.io/ChemoSpec/"
 $ BugReports      : chr "https://github.com/bryanhanson/ChemoSpec/issues"
 $ ByteCompile     : chr "TRUE"
 $ VignetteBuilder : chr "knitr"
 $ Encoding        : chr "UTF-8"
 $ RoxygenNote     : chr "7.1.2"
 $ NeedsCompilation: chr "no"</code></pre>
</div>
</div>
<p>We are interested in the <code>Imports</code> and <code>Suggests</code> elements. Let’s look more closely.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;">head</span>(desc<span class="sc" style="color: #5E5E5E;">$</span>Imports)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "plyr,\nstats,\nutils,\ngrDevices,\nreshape2,\nreadJDX (&gt;= 0.6),\npatchwork,\nggplot2,\nplotly,\nmagrittr"</code></pre>
</div>
</div>
<p>You can see there are a bunch of newlines in there (<code>\n</code>), along with some version specifications, in parentheses. We need to clean this up so we have a simple list of the packages as a vector. For clean up we’ll use the following helper function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1">clean_up <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(string) {</span>
<span id="cb6-2">  string <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">gsub</span>(<span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\n</span><span class="st" style="color: #20794D;">"</span>, <span class="st" style="color: #20794D;">""</span>, string) <span class="co" style="color: #5E5E5E;"># remove newlines</span></span>
<span id="cb6-3">  string <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">gsub</span>(<span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">(.+</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">)"</span>, <span class="st" style="color: #20794D;">""</span>, string) <span class="co" style="color: #5E5E5E;"># remove parens &amp; anything within them</span></span>
<span id="cb6-4">  string <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">unlist</span>(<span class="fu" style="color: #4758AB;">strsplit</span>(string, <span class="st" style="color: #20794D;">","</span>)) <span class="co" style="color: #5E5E5E;"># split the long string into pieces</span></span>
<span id="cb6-5">  string <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">trimws</span>(string) <span class="co" style="color: #5E5E5E;"># remove any white space around words</span></span>
<span id="cb6-6">}</span></code></pre></div>
</div>
<p>After we apply this to the raw results, we have what we are after, a clean list of imported packages.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">imp <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">clean_up</span>(desc<span class="sc" style="color: #5E5E5E;">$</span>Imports)</span>
<span id="cb7-2">imp</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] "plyr"      "stats"     "utils"     "grDevices" "reshape2"  "readJDX"  
 [7] "patchwork" "ggplot2"   "plotly"    "magrittr" </code></pre>
</div>
</div>
<p>Next, we can search the entire package looking for these package names to see if they are used in the package. They might appear in import statements, vignettes, code and so forth, so it’s not sufficient to just look at code. This is a job for <code>grep</code>, but we’ll call <code>grep</code> from within <code>R</code> so that we don’t have to use the command line and transfer the results to <code>R</code>, that gets messy and is error-prone.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="cf" style="color: #003B4F;">if</span> (<span class="fu" style="color: #4758AB;">length</span>(imp) <span class="sc" style="color: #5E5E5E;">&gt;=</span> <span class="dv" style="color: #AD0000;">1</span>) { <span class="co" style="color: #5E5E5E;"># Note 1</span></span>
<span id="cb9-2">  imp_res <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="st" style="color: #20794D;">"FALSE"</span>, <span class="fu" style="color: #4758AB;">length</span>(imp)) <span class="co" style="color: #5E5E5E;"># Boolean to keep track of whether we found a package or not</span></span>
<span id="cb9-3">  <span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">length</span>(imp)) {</span>
<span id="cb9-4">    args <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">paste</span>(<span class="st" style="color: #20794D;">"-r -e '"</span>, imp[i], <span class="st" style="color: #20794D;">"' *"</span>, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">""</span>) <span class="co" style="color: #5E5E5E;"># assemble arguments for grep</span></span>
<span id="cb9-5">    g_imp <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">system2</span>(<span class="st" style="color: #20794D;">"grep"</span>, args, <span class="at" style="color: #657422;">stdout =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb9-6">    <span class="cf" style="color: #003B4F;">if</span> (<span class="fu" style="color: #4758AB;">length</span>(g_imp) <span class="sc" style="color: #5E5E5E;">&gt;</span> 1L) imp_res[i] <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cn" style="color: #8f5902;">TRUE</span> <span class="co" style="color: #5E5E5E;"># Note 2</span></span>
<span id="cb9-7">  }</span>
<span id="cb9-8">}</span></code></pre></div>
</div>
<ul>
<li>Note 1: We ought to check if there are any imports at all. It would be a bit unusual, but it’s possible to have zero imports.</li>
<li>Note 2: <code>g_imp</code> contains the results of the grep process. If there <em>are</em> imports in the package, each imported package name will be found by grep in the <code>DESCRIPTION</code> file. That’s not so interesting, so we don’t count it. For a package to be stale, it will be found in <code>DESCRIPTION</code> <em>but no where else</em>.</li>
</ul>
<p>We can do the same process for the <code>Suggests:</code> field of <code>DESCRIPTION</code>. And then it would be nice to present the results in a more useable form. At this point we can put it all togther in an easy-to-use function.<sup>2</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;"># run from the package top level</span></span>
<span id="cb10-2">check_stale_imports_suggests <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>() {</span>
<span id="cb10-3"></span>
<span id="cb10-4">  <span class="co" style="color: #5E5E5E;"># helper function: removes extra characters</span></span>
<span id="cb10-5">  <span class="co" style="color: #5E5E5E;"># from strings read by read.dcf</span></span>
<span id="cb10-6">  clean_up <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(string) {</span>
<span id="cb10-7">    string <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">gsub</span>(<span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\n</span><span class="st" style="color: #20794D;">"</span>, <span class="st" style="color: #20794D;">""</span>, string)</span>
<span id="cb10-8">    string <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">gsub</span>(<span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">(.+</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">)"</span>, <span class="st" style="color: #20794D;">""</span>, string)</span>
<span id="cb10-9">    string <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">unlist</span>(<span class="fu" style="color: #4758AB;">strsplit</span>(string, <span class="st" style="color: #20794D;">","</span>))</span>
<span id="cb10-10">    string <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">trimws</span>(string)</span>
<span id="cb10-11">  }</span>
<span id="cb10-12"></span>
<span id="cb10-13">  desc <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read.dcf</span>(<span class="st" style="color: #20794D;">"DESCRIPTION"</span>, <span class="at" style="color: #657422;">all =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb10-14"></span>
<span id="cb10-15">  <span class="co" style="color: #5E5E5E;"># look for use of imported packages</span></span>
<span id="cb10-16">  imp <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">clean_up</span>(desc<span class="sc" style="color: #5E5E5E;">$</span>Imports)</span>
<span id="cb10-17">  <span class="cf" style="color: #003B4F;">if</span> (<span class="fu" style="color: #4758AB;">length</span>(imp) <span class="sc" style="color: #5E5E5E;">==</span> 0L) <span class="fu" style="color: #4758AB;">message</span>(<span class="st" style="color: #20794D;">"No Imports: entries found"</span>)</span>
<span id="cb10-18">  <span class="cf" style="color: #003B4F;">if</span> (<span class="fu" style="color: #4758AB;">length</span>(imp) <span class="sc" style="color: #5E5E5E;">&gt;=</span> <span class="dv" style="color: #AD0000;">1</span>) {</span>
<span id="cb10-19">    imp_res <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="st" style="color: #20794D;">"FALSE"</span>, <span class="fu" style="color: #4758AB;">length</span>(imp))</span>
<span id="cb10-20">    <span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">length</span>(imp)) {</span>
<span id="cb10-21">      args <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">paste</span>(<span class="st" style="color: #20794D;">"-r -e '"</span>, imp[i], <span class="st" style="color: #20794D;">"' *"</span>, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">""</span>)</span>
<span id="cb10-22">      g_imp <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">system2</span>(<span class="st" style="color: #20794D;">"grep"</span>, args, <span class="at" style="color: #657422;">stdout =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb10-23">      <span class="co" style="color: #5E5E5E;"># always found once in DESCRIPTION, hence &gt; 1</span></span>
<span id="cb10-24">      <span class="cf" style="color: #003B4F;">if</span> (<span class="fu" style="color: #4758AB;">length</span>(g_imp) <span class="sc" style="color: #5E5E5E;">&gt;</span> 1L) imp_res[i] <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb10-25">    }</span>
<span id="cb10-26">  }</span>
<span id="cb10-27"></span>
<span id="cb10-28">  <span class="co" style="color: #5E5E5E;"># look for use of suggested packages</span></span>
<span id="cb10-29">  sug <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">clean_up</span>(desc<span class="sc" style="color: #5E5E5E;">$</span>Suggests)</span>
<span id="cb10-30">  <span class="cf" style="color: #003B4F;">if</span> (<span class="fu" style="color: #4758AB;">length</span>(sug) <span class="sc" style="color: #5E5E5E;">==</span> 0L) <span class="fu" style="color: #4758AB;">message</span>(<span class="st" style="color: #20794D;">"No Suggests: entries found"</span>)</span>
<span id="cb10-31">  <span class="cf" style="color: #003B4F;">if</span> (<span class="fu" style="color: #4758AB;">length</span>(sug) <span class="sc" style="color: #5E5E5E;">&gt;=</span> <span class="dv" style="color: #AD0000;">1</span>) {</span>
<span id="cb10-32">    sug_res <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="st" style="color: #20794D;">"FALSE"</span>, <span class="fu" style="color: #4758AB;">length</span>(sug))</span>
<span id="cb10-33">    <span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">length</span>(sug)) {</span>
<span id="cb10-34">      args <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">paste</span>(<span class="st" style="color: #20794D;">"-r -e '"</span>, sug[i], <span class="st" style="color: #20794D;">"' *"</span>, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">""</span>)</span>
<span id="cb10-35">      g_sug <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">system2</span>(<span class="st" style="color: #20794D;">"grep"</span>, args, <span class="at" style="color: #657422;">stdout =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb10-36">      <span class="co" style="color: #5E5E5E;"># always found once in DESCRIPTION, hence &gt; 1</span></span>
<span id="cb10-37">      <span class="cf" style="color: #003B4F;">if</span> (<span class="fu" style="color: #4758AB;">length</span>(g_sug) <span class="sc" style="color: #5E5E5E;">&gt;</span> 1L) sug_res[i] <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb10-38">    }</span>
<span id="cb10-39">  }</span>
<span id="cb10-40"></span>
<span id="cb10-41">  <span class="co" style="color: #5E5E5E;"># arrange output in easy to read format</span></span>
<span id="cb10-42">  role <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fu" style="color: #4758AB;">rep</span>(<span class="st" style="color: #20794D;">"Imports"</span>, <span class="fu" style="color: #4758AB;">length</span>(imp)), <span class="fu" style="color: #4758AB;">rep</span>(<span class="st" style="color: #20794D;">"Suggests"</span>, <span class="fu" style="color: #4758AB;">length</span>(sug)))</span>
<span id="cb10-43"></span>
<span id="cb10-44">  <span class="fu" style="color: #4758AB;">return</span>(<span class="fu" style="color: #4758AB;">data.frame</span>(</span>
<span id="cb10-45">    <span class="at" style="color: #657422;">pkg =</span> <span class="fu" style="color: #4758AB;">c</span>(imp, sug),</span>
<span id="cb10-46">    <span class="at" style="color: #657422;">role =</span> role,</span>
<span id="cb10-47">    <span class="at" style="color: #657422;">found =</span> <span class="fu" style="color: #4758AB;">c</span>(imp_res, sug_res)))</span>
<span id="cb10-48">}</span></code></pre></div>
</div>
<p>Applying this function to my <code>ChemoSpec2D</code> package (as of the date of this post), we see the following output. You can see a bunch of packages are imported but never used, so I have some work to do. This was the result of copying the <code>DESCRIPTION</code> file from <code>ChemoSpec</code> when I started <code>ChemoSpec2D</code> and obviously I never went back and cleaned things up.</p>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">            pkg     role found</span>
<span id="cb11-2"><span class="dv" style="color: #AD0000;">1</span>          plyr  Imports  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-3"><span class="dv" style="color: #AD0000;">2</span>         stats  Imports  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-4"><span class="dv" style="color: #AD0000;">3</span>         utils  Imports  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-5"><span class="dv" style="color: #AD0000;">4</span>     grDevices  Imports  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-6"><span class="dv" style="color: #AD0000;">5</span>      reshape2  Imports  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-7"><span class="dv" style="color: #AD0000;">6</span>       readJDX  Imports  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-8"><span class="dv" style="color: #AD0000;">7</span>     patchwork  Imports  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-9"><span class="dv" style="color: #AD0000;">8</span>       ggplot2  Imports  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-10"><span class="dv" style="color: #AD0000;">9</span>        plotly  Imports  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-11"><span class="dv" style="color: #AD0000;">10</span>     magrittr  Imports  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-12"><span class="dv" style="color: #AD0000;">11</span>      IDPmisc Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-13"><span class="dv" style="color: #AD0000;">12</span>        knitr Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-14"><span class="dv" style="color: #AD0000;">13</span>           js Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-15"><span class="dv" style="color: #AD0000;">14</span>      NbClust Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-16"><span class="dv" style="color: #AD0000;">15</span>      lattice Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-17"><span class="dv" style="color: #AD0000;">16</span>     baseline Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-18"><span class="dv" style="color: #AD0000;">17</span>       mclust Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-19"><span class="dv" style="color: #AD0000;">18</span>          pls Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-20"><span class="dv" style="color: #AD0000;">19</span>  clusterCrit Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-21"><span class="dv" style="color: #AD0000;">20</span>      R.utils Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-22"><span class="dv" style="color: #AD0000;">21</span> RColorBrewer Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-23"><span class="dv" style="color: #AD0000;">22</span>    seriation Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-24"><span class="dv" style="color: #AD0000;">23</span>         MASS Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-25"><span class="dv" style="color: #AD0000;">24</span>   robustbase Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-26"><span class="dv" style="color: #AD0000;">25</span>         grid Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-27"><span class="dv" style="color: #AD0000;">26</span>        pcaPP Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-28"><span class="dv" style="color: #AD0000;">27</span>     jsonlite Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-29"><span class="dv" style="color: #AD0000;">28</span>       gsubfn Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-30"><span class="dv" style="color: #AD0000;">29</span>       signal Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-31"><span class="dv" style="color: #AD0000;">30</span>        speaq Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-32"><span class="dv" style="color: #AD0000;">31</span>     tinytest Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-33"><span class="dv" style="color: #AD0000;">32</span>   elasticnet Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-34"><span class="dv" style="color: #AD0000;">33</span>        irlba Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-35"><span class="dv" style="color: #AD0000;">34</span>         amap Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-36"><span class="dv" style="color: #AD0000;">35</span>    rmarkdown Suggests  <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb11-37"><span class="dv" style="color: #AD0000;">36</span>     bookdown Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-38"><span class="dv" style="color: #AD0000;">37</span> chemometrics Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span>
<span id="cb11-39"><span class="dv" style="color: #AD0000;">38</span>    hyperSpec Suggests <span class="cn" style="color: #8f5902;">FALSE</span></span></code></pre></div>




<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>As you will see in a moment, during testing I found a bunch of stale entries I need to remove from several packages!↩︎</p></li>
<li id="fn2"><p>In easy to use form as a <a href="https://gist.github.com/bryanhanson/4c8ac99903df65af9c7e11a972447bc5">Gist</a>.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Bryan Hanson},
  title = {Do {You} Have {Stale} {Imports} or {Suggests?}},
  date = {2022-02-09},
  url = {http://chemospec.org/posts/2022-02-09-Imports-Suggests/2022-02-09-Imports-Suggests.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2022. <span>“Do You Have Stale Imports or
Suggests?”</span> February 9, 2022. <a href="http://chemospec.org/posts/2022-02-09-Imports-Suggests/2022-02-09-Imports-Suggests.html">http://chemospec.org/posts/2022-02-09-Imports-Suggests/2022-02-09-Imports-Suggests.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Utilities</category>
  <category>Developers</category>
  <guid>http://chemospec.org/posts/2022-02-09-Imports-Suggests/2022-02-09-Imports-Suggests.html</guid>
  <pubDate>Wed, 09 Feb 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Metabolic Phenotyping Protocol Part 1</title>
  <link>http://chemospec.org/posts/2022-02-01-Protocol-Pt1/2022-02-01-Protocol-Pt1.html</link>
  <description><![CDATA[ 



<div class="cell">

</div>
<div class="cell" data-layout-align="center">

</div>
<p>If you aren’t familiar with <code>ChemoSpec</code>, you might wish to look at the introductory <a href="https://bryanhanson.github.io/ChemoSpec/articles/ChemoSpec.html">vignette</a> first.</p>
<section id="background" class="level1">
<h1>Background</h1>
<p><span class="citation" data-cites="Blaise2021">Blaise et al. (2021)</span> have published a detailed protocol for metabolomic phenotyping. They illustrate the protocol using a data set composed of 139 <sup>1</sup>H HR-MAS SS-NMR spectra <span class="citation" data-cites="Blaise2007">(Blaise et al. 2007)</span> of the model organism <em>Caenorhabditis elegans</em>. There are two genotypes, wild type and a mutant, and worms from two life stages.</p>
<p><strong>This series of posts follows the published protocol closely in order to illustrate how to implement the protocol using <code>ChemoSpec</code>. As in any chemometric analysis, there are decisions to be made about how to process the data. In these posts we are interested in which functions to use, and how to examine the results. We are not exploring all possible data processing choices, and argument choices are not necessarily optimized. </strong></p>
</section>
<section id="import-the-data" class="level1">
<h1>Import the Data</h1>
<p>The data set is large, over 30 Mb, so we will grab it directly from the Github repo where it is stored. We will use a custom function to grab the data (you can see the function in the source for this document if interested). The URLs given below point to the frequency scale, the raw data matrix and the variables that describe the sample classification by genotype and life stage (L2 are gravid adults, L4 are larvae).</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1">urls <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"https://raw.githubusercontent.com/Gscorreia89/chemometrics-tutorials/master/data/ppm.csv"</span>,</span>
<span id="cb1-2">    <span class="st" style="color: #20794D;">"https://raw.githubusercontent.com/Gscorreia89/chemometrics-tutorials/master/data/X_spectra.csv"</span>,</span>
<span id="cb1-3">    <span class="st" style="color: #20794D;">"https://raw.githubusercontent.com/Gscorreia89/chemometrics-tutorials/master/data/worm_yvars.csv"</span>)</span>
<span id="cb1-4">raw <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">get_csvs_from_github</span>(urls, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">","</span>)  <span class="co" style="color: #5E5E5E;"># a list of data sets</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">names</span>(raw)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "ppm.csv"        "X_spectra.csv"  "worm_yvars.csv"</code></pre>
</div>
</div>
<div class="cell" data-layout-align="center">

</div>
</section>
<section id="construct-the-spectra-object" class="level1">
<h1>Construct the Spectra Object</h1>
<p>The format of the data as provided in Github is not really suited to using either of the built-in import functions in <code>ChemoSpec</code>. Therefore we will construct the <code>Spectra</code> object by hand, a useful exercise in its own right. The requirements for a <code>Spectra</code> object are described in <code>?Spectra</code>.</p>
<section id="process-the-raw-data" class="level2">
<h2 class="anchored" data-anchor-id="process-the-raw-data">Process the Raw Data</h2>
<p>First, we’ll take the results in <code>raw</code> and convert them to the proper form. Each element of <code>raw</code> is a data frame.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># frequencies are in the 1st list element</span></span>
<span id="cb3-2">freq <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">unlist</span>(raw[[<span class="dv" style="color: #AD0000;">1</span>]], <span class="at" style="color: #657422;">use.names =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;"># intensities are in the 2nd list element</span></span>
<span id="cb3-5">data <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.matrix</span>(raw[[<span class="dv" style="color: #AD0000;">2</span>]])</span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;">dimnames</span>(data) <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cn" style="color: #8f5902;">NULL</span>  <span class="co" style="color: #5E5E5E;"># remove the default data frame col names</span></span>
<span id="cb3-7">ns <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">nrow</span>(data)  <span class="co" style="color: #5E5E5E;"># ns = number of samples - used later</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;"># get genotype &amp; lifestage, recode into something more readible</span></span>
<span id="cb3-10">yvars <span class="ot" style="color: #003B4F;">&lt;-</span> raw[[<span class="dv" style="color: #AD0000;">3</span>]]</span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;">names</span>(yvars) <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"genotype"</span>, <span class="st" style="color: #20794D;">"stage"</span>)</span>
<span id="cb3-12">yvars<span class="sc" style="color: #5E5E5E;">$</span>genotype <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(yvars<span class="sc" style="color: #5E5E5E;">$</span>genotype <span class="sc" style="color: #5E5E5E;">==</span> 1L, <span class="st" style="color: #20794D;">"WT"</span>, <span class="st" style="color: #20794D;">"Mut"</span>)</span>
<span id="cb3-13">yvars<span class="sc" style="color: #5E5E5E;">$</span>stage <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(yvars<span class="sc" style="color: #5E5E5E;">$</span>stage <span class="sc" style="color: #5E5E5E;">==</span> 1L, <span class="st" style="color: #20794D;">"L2"</span>, <span class="st" style="color: #20794D;">"L4"</span>)</span>
<span id="cb3-14"><span class="fu" style="color: #4758AB;">table</span>(yvars)  <span class="co" style="color: #5E5E5E;"># quick look at how many in each group</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>        stage
genotype L2 L4
     Mut 32 33
     WT  34 40</code></pre>
</div>
</div>
</section>
<section id="assemble-the-spectra-object-by-hand" class="level2">
<h2 class="anchored" data-anchor-id="assemble-the-spectra-object-by-hand">Assemble the Spectra Object by Hand</h2>
<p>Next we’ll construct some useful sample names, create the groups vector, assign the colors and symbols, and finally put it all together into a <code>Spectra</code> object.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;"># build up sample names to include the group membership</span></span>
<span id="cb5-2">sample_names <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.character</span>(<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span>ns)</span>
<span id="cb5-3">sample_names <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">paste</span>(sample_names, yvars<span class="sc" style="color: #5E5E5E;">$</span>genotype, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">"_"</span>)</span>
<span id="cb5-4">sample_names <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">paste</span>(sample_names, yvars<span class="sc" style="color: #5E5E5E;">$</span>stage, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">"_"</span>)</span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;">head</span>(sample_names)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "1_WT_L4"  "2_Mut_L4" "3_Mut_L4" "4_WT_L4"  "5_Mut_L4" "6_WT_L4" </code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;"># use the sample names to create the groups vector</span></span>
<span id="cb7-2">grp <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">gsub</span>(<span class="st" style="color: #20794D;">"[0-9]+_"</span>, <span class="st" style="color: #20794D;">""</span>, sample_names)  <span class="co" style="color: #5E5E5E;"># remove 1_ etc, leaving WT_L2 etc</span></span>
<span id="cb7-3">groups <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.factor</span>(grp)</span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;">levels</span>(groups)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Mut_L2" "Mut_L4" "WT_L2"  "WT_L4" </code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;"># set up the colors based on group membership</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;">data</span>(Col12)  <span class="co" style="color: #5E5E5E;"># see ?colorSymbol for a swatch</span></span>
<span id="cb9-3">colors <span class="ot" style="color: #003B4F;">&lt;-</span> grp</span>
<span id="cb9-4">colors <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(colors <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"WT_L2"</span>, Col12[<span class="dv" style="color: #AD0000;">1</span>], colors)</span>
<span id="cb9-5">colors <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(colors <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"WT_L4"</span>, Col12[<span class="dv" style="color: #AD0000;">2</span>], colors)</span>
<span id="cb9-6">colors <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(colors <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Mut_L2"</span>, Col12[<span class="dv" style="color: #AD0000;">3</span>], colors)</span>
<span id="cb9-7">colors <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(colors <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Mut_L4"</span>, Col12[<span class="dv" style="color: #AD0000;">4</span>], colors)</span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;"># set up the symbols based on group membership</span></span>
<span id="cb9-10">sym <span class="ot" style="color: #003B4F;">&lt;-</span> grp  <span class="co" style="color: #5E5E5E;"># see ?points for the symbol codes</span></span>
<span id="cb9-11">sym <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(sym <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"WT_L2"</span>, <span class="dv" style="color: #AD0000;">1</span>, sym)</span>
<span id="cb9-12">sym <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(sym <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"WT_L4"</span>, <span class="dv" style="color: #AD0000;">16</span>, sym)</span>
<span id="cb9-13">sym <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(sym <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Mut_L2"</span>, <span class="dv" style="color: #AD0000;">0</span>, sym)</span>
<span id="cb9-14">sym <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(sym <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Mut_L4"</span>, <span class="dv" style="color: #AD0000;">15</span>, sym)</span>
<span id="cb9-15">sym <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.integer</span>(sym)</span>
<span id="cb9-16"></span>
<span id="cb9-17"><span class="co" style="color: #5E5E5E;"># set up the alt symbols based on group membership</span></span>
<span id="cb9-18">alt.sym <span class="ot" style="color: #003B4F;">&lt;-</span> grp</span>
<span id="cb9-19">alt.sym <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(alt.sym <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"WT_L2"</span>, <span class="st" style="color: #20794D;">"w2"</span>, alt.sym)</span>
<span id="cb9-20">alt.sym <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(alt.sym <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"WT_L4"</span>, <span class="st" style="color: #20794D;">"w4"</span>, alt.sym)</span>
<span id="cb9-21">alt.sym <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(alt.sym <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Mut_L2"</span>, <span class="st" style="color: #20794D;">"m2"</span>, alt.sym)</span>
<span id="cb9-22">alt.sym <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">ifelse</span>(alt.sym <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Mut_L4"</span>, <span class="st" style="color: #20794D;">"m4"</span>, alt.sym)</span>
<span id="cb9-23"></span>
<span id="cb9-24"><span class="co" style="color: #5E5E5E;"># put it all together; see ?Spectra for requirements</span></span>
<span id="cb9-25">Worms <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>()</span>
<span id="cb9-26">Worms<span class="sc" style="color: #5E5E5E;">$</span>freq <span class="ot" style="color: #003B4F;">&lt;-</span> freq</span>
<span id="cb9-27">Worms<span class="sc" style="color: #5E5E5E;">$</span>data <span class="ot" style="color: #003B4F;">&lt;-</span> data</span>
<span id="cb9-28">Worms<span class="sc" style="color: #5E5E5E;">$</span>names <span class="ot" style="color: #003B4F;">&lt;-</span> sample_names</span>
<span id="cb9-29">Worms<span class="sc" style="color: #5E5E5E;">$</span>groups <span class="ot" style="color: #003B4F;">&lt;-</span> groups</span>
<span id="cb9-30">Worms<span class="sc" style="color: #5E5E5E;">$</span>colors <span class="ot" style="color: #003B4F;">&lt;-</span> colors</span>
<span id="cb9-31">Worms<span class="sc" style="color: #5E5E5E;">$</span>sym <span class="ot" style="color: #003B4F;">&lt;-</span> sym</span>
<span id="cb9-32">Worms<span class="sc" style="color: #5E5E5E;">$</span>alt.sym <span class="ot" style="color: #003B4F;">&lt;-</span> alt.sym</span>
<span id="cb9-33">Worms<span class="sc" style="color: #5E5E5E;">$</span>unit <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"ppm"</span>, <span class="st" style="color: #20794D;">"intensity"</span>)</span>
<span id="cb9-34">Worms<span class="sc" style="color: #5E5E5E;">$</span>desc <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"C. elegans metabolic phenotyping study (Blaise 2007)"</span></span>
<span id="cb9-35"><span class="fu" style="color: #4758AB;">class</span>(Worms) <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">"Spectra"</span></span>
<span id="cb9-36"><span class="fu" style="color: #4758AB;">chkSpectra</span>(Worms)  <span class="co" style="color: #5E5E5E;"># verify we have everything correct</span></span>
<span id="cb9-37"><span class="fu" style="color: #4758AB;">sumSpectra</span>(Worms)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
 C. elegans metabolic phenotyping study (Blaise 2007) 

    There are 139 spectra in this set.
    The y-axis unit is intensity.

    The frequency scale runs from
    8.9995 to 5e-04 ppm
    There are 8600 frequency values.
    The frequency resolution is
    0.001 ppm/point.

    This data set is not continuous
    along the frequency axis.
    Here are the data chunks:

  beg.freq end.freq   size beg.indx end.indx
1   8.9995   5.0005 -3.999        1     4000
2   4.5995   0.0005 -4.599     4001     8600

    The spectra are divided into 4 groups: 

   group no.     color symbol alt.sym
1 Mut_L2  32 #FB0D16FF      0      m2
2 Mut_L4  33 #FFC0CBFF     15      m4
3  WT_L2  34 #511CFCFF      1      w2
4  WT_L4  40 #2E94E9FF     16      w4


*** Note: this is an S3 object
of class 'Spectra'</code></pre>
</div>
</div>
</section>
<section id="plot-it-to-check-it" class="level2">
<h2 class="anchored" data-anchor-id="plot-it-to-check-it">Plot it to check it</h2>
<p>Let’s look at one sample from each group to make sure everything looks reasonable (Figure @ref(fig:samplePlot)). At least these four spectra look good. Note that we are using the latest <code>ChemoSpec</code> that uses <code>ggplot2</code> graphics by default (announced <a href="https://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/">here</a>).</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">p <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">plotSpectra</span>(Worms, <span class="at" style="color: #657422;">which =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">35</span>, <span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">34</span>, <span class="dv" style="color: #AD0000;">2</span>), <span class="at" style="color: #657422;">lab.pos =</span> <span class="fl" style="color: #AD0000;">7.5</span>, <span class="at" style="color: #657422;">offset =</span> <span class="fl" style="color: #AD0000;">0.008</span>, <span class="at" style="color: #657422;">amplify =</span> <span class="dv" style="color: #AD0000;">35</span>,</span>
<span id="cb11-2">    <span class="at" style="color: #657422;">yrange =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="fl" style="color: #AD0000;">0.05</span>, <span class="fl" style="color: #AD0000;">1.1</span>))</span>
<span id="cb11-3">p</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-02-01-Protocol-Pt1/2022-02-01-Protocol-Pt1_files/figure-html/samplePlot-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<p></p><p></p>
</figure>
</div>
</div>
</div>
<p>In the next post we’ll continue with some basic exploratory data analysis.</p>
<hr>
<p>This post was created using <code>ChemoSpec</code> version 6.1.3 and <code>ChemoSpecUtils</code> version 1.0.0.</p>



</section>
</section>

<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Blaise2021" class="csl-entry">
Blaise, Benjamin J., Gonçalo D. S. Correia, Gordon A. Haggart, Izabella Surowiec, Caroline Sands, Matthew R. Lewis, Jake T. M. Pearce, et al. 2021. <span>“Statistical Analysis in Metabolic Phenotyping.”</span> <em>Nature Protocols</em> 16: 4299–4326. <a href="https://doi.org/10.1038/s41596-021-00579-1">https://doi.org/10.1038/s41596-021-00579-1</a>.
</div>
<div id="ref-Blaise2007" class="csl-entry">
Blaise, Benjamin J., Jean Giacomotto, Bénédicte Elena, Marc-Emmanuel Dumas, Pierre Toulhoat, Laurent Ségalat, and Lyndon Emsley. 2007. <span>“Metabotyping of Caenorhabditis Elegans Reveals Latent Phenotypes.”</span> <em>Proceedings of the National Academy of Sciences</em> 104 (50): 19808–12. <a href="https://doi.org/10.1073/pnas.0707393104">https://doi.org/10.1073/pnas.0707393104</a>.
</div>
</div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Bryan Hanson},
  title = {Metabolic {Phenotyping} {Protocol} {Part} 1},
  date = {2022-02-01},
  url = {http://chemospec.org/posts/2022-02-01-Protocol-Pt1/2022-02-01-Protocol-Pt1.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2022. <span>“Metabolic Phenotyping Protocol Part
1.”</span> February 1, 2022. <a href="http://chemospec.org/posts/2022-02-01-Protocol-Pt1/2022-02-01-Protocol-Pt1.html">http://chemospec.org/posts/2022-02-01-Protocol-Pt1/2022-02-01-Protocol-Pt1.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpec</category>
  <category>Metabolomics</category>
  <guid>http://chemospec.org/posts/2022-02-01-Protocol-Pt1/2022-02-01-Protocol-Pt1.html</guid>
  <pubDate>Tue, 01 Feb 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>GSOC 2021: New Graphics for ChemoSpec</title>
  <link>http://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/2021-10-13-GSOC-CS-Graphics.html</link>
  <description><![CDATA[ 



<table>
<tbody><tr>
<td>
<img src="http://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/og-image.png" alt="GSOC_logo" style="width:100px;">
</td>
<td>
It’s been quiet around this blog because supervising two students for <a href="https://summerofcode.withgoogle.com/">Google Summer of Code</a> has kept me pretty busy! But we have some news…
</td>
</tr>
</tbody></table>
<p>Thanks to Mr.&nbsp;Tejasvi Gupta and the support of GSOC, <a href="https://bryanhanson.github.io/ChemoSpec/"><code>ChemoSpec</code></a> and <a href="https://bryanhanson.github.io/ChemoSpec2D/"><code>ChemoSpec2D</code></a> were extended to produce <code>ggplot2</code> graphics and <code>plotly</code> graphics! <code>ggplot2</code> is now the default output, and the <code>ggplot2</code> object is returned, so if one doesn’t like the choice of theme or any other aspect, one can customize the object to one’s desire. The <code>ggplot2</code> graphics output are generally similar in layout and spirit to the <code>base</code> graphics output, but significant improvements have been made in labeling data points using the <code>ggrepel</code> package. The original <code>base</code> graphics are still available as well. Much of this work required changes in <code>ChemoSpecUtils</code> which supports the common needs of both packages.</p>
<p>Tejasvi did a really great job with this project, and I think users of these packages will really like the results. We have greatly expanded the pre-release testing of the graphics, and as far as we can see every thing works as intended. Of course, please file an issue if you see any problems or unexpected behavior.</p>
<p>To see more about how the new graphics options work, take a look at <a href="https://rdrr.io/cran/ChemoSpecUtils/man/GraphicsOptions.html">GraphicsOptions</a>. Here are the functions that were updated:</p>
<ul>
<li><code>plotSpectra</code></li>
<li><code>surveySpectra</code></li>
<li><code>surveySpectra2</code></li>
<li><code>reviewAllSpectra</code> (formerly <code>loopThruSpectra</code>)</li>
<li><code>plotScree</code> (resides in <code>ChemoSpecUtils</code>)</li>
<li><code>plotScores</code> (resides in <code>ChemoSpecUtils</code>)</li>
<li><code>plotLoadings</code> (uses <code>patchwork</code> and hence <code>plotly</code> isn’t available)</li>
<li><code>plot2Loadings</code></li>
<li><code>sPlotSpectra</code></li>
<li><code>pcaDiag</code></li>
<li><code>plotSampleDist</code></li>
<li><code>aovPCAscores</code></li>
<li><code>aovPCAloadings</code> (uses <code>patchwork</code> and hence <code>plotly</code> isn’t available)</li>
</ul>
<p>Tejasvi and I are looking forward to your feedback. There are many other smaller changes that we’ll let users discover as they work. And there’s more work to be done, but other projects need attention and I need a little rest!</p>



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2021,
  author = {Bryan Hanson},
  title = {GSOC 2021: {New} {Graphics} for {ChemoSpec}},
  date = {2021-10-13},
  url = {http://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/2021-10-13-GSOC-CS-Graphics.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2021" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2021. <span>“GSOC 2021: New Graphics for
ChemoSpec.”</span> October 13, 2021. <a href="http://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/2021-10-13-GSOC-CS-Graphics.html">http://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/2021-10-13-GSOC-CS-Graphics.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpec</category>
  <category>ChemoSpecUtils</category>
  <category>ChemoSpec2D</category>
  <category>GSOC</category>
  <guid>http://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/2021-10-13-GSOC-CS-Graphics.html</guid>
  <pubDate>Wed, 13 Oct 2021 07:00:00 GMT</pubDate>
</item>
<item>
  <title>GSOC 2021: hyperSpec and ChemoSpec!</title>
  <link>http://chemospec.org/posts/2021-05-22-GSOC-hyperSpec-ChemoSpec/2021-05-22-GSOC-hyperSpec-ChemoSpec.html</link>
  <description><![CDATA[ 



<p>I’m really happy to announce that this summer I’ll be a co-mentor on two <a href="https://summerofcode.withgoogle.com/">Google Summer of Code</a> spectroscopy projects:</p>
<ul>
<li>Once again, I’ll co-mentor with Claudia and Vilmantas to continue the work Erick started last summer on <a href="https://cran.r-project.org/web/packages/hyperSpec/index.html"><code>hyperSpec</code></a> (see <a href="https://chemospec.org/posts/2020-09-08-GSOC-hyperSpec/">here</a> for Erick’s wrap up blog post at the end of last year). <a href="https://github.com/sangttruong">Sang Truong</a> is the very talented student who will be joining us. Sang’s project is described <a href="https://github.com/rstats-gsoc/gsoc2021/wiki/hyperSpec">here</a>.</li>
<li>New this year: <a href="https://bryanhanson.github.io/ChemoSpec/"><code>ChemoSpec</code></a> will be upgraded to use <code>ggplot2</code> graphics along with interactive graphics for many of the plots that are currently rendered in <a href="https://github.com/rstats-gsoc/gsoc2021/wiki/Interactive-Graphics-for-ChemoSpec">base graphics</a>. Erick, who was the student working on <code>hyperSpec</code> last summer, will be my co-mentor on this project. We are looking forward to having <a href="https://github.com/Tejasvigupta">Tejasvi Gupta</a> as the student on this project.</li>
</ul>



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2021,
  author = {Bryan Hanson},
  title = {GSOC 2021: {hyperSpec} and {ChemoSpec!}},
  date = {2021-05-22},
  url = {http://chemospec.org/posts/2021-05-22-GSOC-hyperSpec-ChemoSpec/2021-05-22-GSOC-hyperSpec-ChemoSpec.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2021" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2021. <span>“GSOC 2021: hyperSpec and ChemoSpec!”</span>
May 22, 2021. <a href="http://chemospec.org/posts/2021-05-22-GSOC-hyperSpec-ChemoSpec/2021-05-22-GSOC-hyperSpec-ChemoSpec.html">http://chemospec.org/posts/2021-05-22-GSOC-hyperSpec-ChemoSpec/2021-05-22-GSOC-hyperSpec-ChemoSpec.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>hyperSpec</category>
  <category>ChemoSpec</category>
  <category>GSOC</category>
  <guid>http://chemospec.org/posts/2021-05-22-GSOC-hyperSpec-ChemoSpec/2021-05-22-GSOC-hyperSpec-ChemoSpec.html</guid>
  <pubDate>Sat, 22 May 2021 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Automatically Searching Github Repos by Topic</title>
  <link>http://chemospec.org/posts/2021-04-19-Search-GH-Topics/2021-04-19-Search-GH-Topics.html</link>
  <description><![CDATA[ 



<div class="cell">

</div>
<p>One of the projects I maintain is the <a href="https://bryanhanson.github.io/FOSS4Spectroscopy/">FOSS for Spectroscopy web site</a>. The table at that site lists various software for use in spectroscopy. Historically, I have used the Github or Python Package Index search engines to manually search by topic such as “NMR” to find repositories of interest. Recently, I decided to try to automate at least some of this process. In this post I’ll present the code and steps I developed to search Github by topics. Fortunately, I wasn’t starting from scratch, as I had learned some basic web-scraping techniques when I wrote the functions that get the date of the most recent repository update. All the code for this website and project can be viewed <a href="https://github.com/bryanhanson/FOSS4Spectroscopy">here</a>. The steps reported here are current as of the publication of this post, but are subject to change in the future.<sup>1</sup></p>
<p>First off, did you know Github allows repository owners to tag their repositories using topical keywords? I didn’t know this for a long time. So add topics to your repositories if you don’t have them already. By the way, <em>the Achilles heel of this project is that good pieces of software may not have any topical tags at all</em>. If you run into this, perhaps you would consider creating an issue to ask the owner to add tags.</p>
<section id="the-overall-approach" class="level2">
<h2 class="anchored" data-anchor-id="the-overall-approach">The Overall Approach</h2>
<p>If you look at the <code>Utilities</code> directory of the project, you’ll see the scripts and functions that power this search process.</p>
<ul>
<li><code>Search Repos for Topics Script.R</code> supervises the whole process. It sources:</li>
<li><code>searchRepos.R</code> (a function)</li>
<li><code>searchTopic.R</code> (a function)</li>
</ul>
<p>First let’s look at the supervising script. First, the necessary preliminaries:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"jsonlite"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"httr"</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"stringr"</span>)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"readxl"</span>)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"WriteXLS"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;">source</span>(<span class="st" style="color: #20794D;">"Utilities/searchTopic.R"</span>)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;">source</span>(<span class="st" style="color: #20794D;">"Utilities/searchRepos.R"</span>)</span></code></pre></div>
</div>
<p>Note that this assumes one has the top level directory, <code>FOSS4Spectroscopy</code>, as the working directory (this is a bit easier than constantly jumping around).</p>
<p>Next, we pull in the Excel spreadsheet that contains all the basic data about the repositories that we already know about, so we can eventually remove those from the search results.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1">known <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.data.frame</span>(<span class="fu" style="color: #4758AB;">read_xlsx</span>(<span class="st" style="color: #20794D;">"FOSS4Spec.xlsx"</span>))</span>
<span id="cb2-2">known <span class="ot" style="color: #003B4F;">&lt;-</span> known<span class="sc" style="color: #5E5E5E;">$</span>name</span></code></pre></div>
</div>
<p>Now we define some topics and run the search (more on the search functions in a moment):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">topics <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"NMR"</span>, <span class="st" style="color: #20794D;">"EPR"</span>, <span class="st" style="color: #20794D;">"ESR"</span>)</span>
<span id="cb3-2">res <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">searchRepos</span>(topics, <span class="st" style="color: #20794D;">"github_token"</span>, <span class="at" style="color: #657422;">known.repos =</span> known)</span></code></pre></div>
</div>
<p>We’ll also talk about that <code>github_token</code> in a moment. With the search results in hand, we have a few steps to make a useful file name and save it in the <code>Searches</code> folder for future use.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1">file_name <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">paste</span>(topics, <span class="at" style="color: #657422;">collapse =</span> <span class="st" style="color: #20794D;">"_"</span>)</span>
<span id="cb4-2">file_name <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">paste</span>(<span class="st" style="color: #20794D;">"Search"</span>, file_name, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">"_"</span>)</span>
<span id="cb4-3">file_name <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">paste</span>(file_name, <span class="st" style="color: #20794D;">"xlsx"</span>, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">"."</span>)</span>
<span id="cb4-4">file_name <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">paste</span>(<span class="st" style="color: #20794D;">"Searches"</span>, file_name, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">"/"</span>)</span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;">WriteXLS</span>(res, file_name,</span>
<span id="cb4-6">      <span class="at" style="color: #657422;">row.names =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">col.names =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">na =</span> <span class="st" style="color: #20794D;">"NA"</span>)</span></code></pre></div>
</div>
<p>At this point, one can open the spreadsheet in Excel and check each URL (the links are live in the spreadsheet). After vetting each site,<sup>2</sup> one can append the new results to the existing <code>FOSS4Spec.xlsx</code> data base and refresh the entire site so the table is updated.</p>
<p>To make this job easier, I like to have the search results spreadsheet open and then open all the URLs using the as follows. Then I can quickly clean up the spreadsheet (it helps to have two monitors for this process).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">found <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.data.frame</span>(<span class="fu" style="color: #4758AB;">read_xlsx</span>(file_name))</span>
<span id="cb5-2"><span class="cf" style="color: #003B4F;">for</span> (i <span class="cf" style="color: #003B4F;">in</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="fu" style="color: #4758AB;">nrow</span>(found)) {</span>
<span id="cb5-3">  <span class="cf" style="color: #003B4F;">if</span> (<span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"^https?://"</span>, found<span class="sc" style="color: #5E5E5E;">$</span>url[i], <span class="at" style="color: #657422;">ignore.case =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)) <span class="fu" style="color: #4758AB;">BROWSE</span>(found<span class="sc" style="color: #5E5E5E;">$</span>url[i])</span>
<span id="cb5-4">}</span></code></pre></div>
</div>
</section>
<section id="authentificating" class="level2">
<h2 class="anchored" data-anchor-id="authentificating">Authentificating</h2>
<p>In order to use the Github API, you have to authenticate. Otherwise you will be severely <a href="https://docs.github.com/en/rest/reference/rate-limit">rate-limited</a>. If you are authenticated, you can make up to 5,000 API queries per hour.</p>
<p>To authenticate, you need to first establish some credentials with Github, by setting up a “key” and a “secret”. You can set these up <a href="https://github.com/settings/developers">here</a> by choosing the “Oauth Apps” tab. Record these items in a secure way, and be certain you don’t actually publish them by pushing.</p>
<p>Now you are ready to authenticate your <code>R</code> instance using <a href="https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow">“Web Application Flow”</a>.<sup>3</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1">myapp <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">oauth_app</span>(<span class="st" style="color: #20794D;">"FOSS"</span>, <span class="at" style="color: #657422;">key =</span> <span class="st" style="color: #20794D;">"put_your_key_here"</span>, <span class="at" style="color: #657422;">secret =</span> <span class="st" style="color: #20794D;">"put_your_secret_here"</span>)</span>
<span id="cb6-2">github_token <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">oauth2.0_token</span>(<span class="fu" style="color: #4758AB;">oauth_endpoints</span>(<span class="st" style="color: #20794D;">"github"</span>), myapp)</span></code></pre></div>
</div>
<p>If successful, this will open a web page which you can immediately close. In the <code>R</code> console, you’ll need to choose whether to do a one-time authentification, or leave a hidden file behind with authentification details. I use the one-time option, as I don’t want to accidently publish the secrets in the hidden file (since they are easy to overlook, being hidden and all).</p>
</section>
<section id="searchtopic" class="level2">
<h2 class="anchored" data-anchor-id="searchtopic"><code>searchTopic</code></h2>
<p><code>searchTopic</code> is a function that accesses the Github API to search for a single topic.<sup>4</sup> This function is “pretty simple” in that it is short, but there are six helper functions defined in the same file. So, “short not short”. This function does all the heavy lifting; the major steps are:</p>
<ol type="1">
<li><p>Carry out an authenticated query of the topics associated with all Github repositories. This first “hit” returns up to 30 results, and also a header than tells how many more pages of results are out there.</p></li>
<li><p>Process that first set of results by converting the response to a JSON structure, because nice people have already built functions to handle such things (I’m looking at you <a href="https://httr.r-lib.org/"><code>httr</code></a>).</p>
<ol type="i">
<li><p>Check that structure for a message that will tell us if we got stopped by Github access issues (and if so, report access stats).</p></li>
<li><p>Extract only the name, description and repository URL from the huge volume of information captured.</p></li>
</ol></li>
<li><p>Inspect the first response to see how many more pages there are, then loop over page two (we already have page 1) to the number of pages, basically repeating step 2.</p></li>
</ol>
<p>Along the way, all the results are stored in a data.frame.</p>
</section>
<section id="searchrepos" class="level2">
<h2 class="anchored" data-anchor-id="searchrepos"><code>searchRepos</code></h2>
<p><code>searchRepos</code> does two simple things:</p>
<ul>
<li>Loops over all topics, since <code>searchTopic</code> only handles one topic at a time.</li>
<li>Optionally, dereplicates the results by excluding any repositories that we already know about.</li>
</ul>
</section>
<section id="other-stuff-to-make-life-easier" class="level2">
<h2 class="anchored" data-anchor-id="other-stuff-to-make-life-easier">Other Stuff to Make Life Easier</h2>
<p>There are two other scripts in the <code>Utilities</code> folder that streamline maintenance of the project.</p>
<ul>
<li><code>mergeSearches.R</code> which will merge several search results into one, removing duplicates along the way.</li>
<li><code>mergeMaintainers.R</code> which will query CRAN for the maintainers of all packages in <code>FOSS4Spec.xlsx</code>, and add this info to the file.<sup>5</sup> Maintainers are not currently displayed on the main website. However, I hope to eventually e-mail all maintainers so they can fine-tune the information about their entries.</li>
</ul>
</section>
<section id="future-work-contributing" class="level2">
<h2 class="anchored" data-anchor-id="future-work-contributing">Future Work / Contributing</h2>
<p>Clearly it would be good for someone who knows <code>Python</code> to step in and write the analogous search code for PyPi.org. Depending upon time contraints, I may use this as an opportunity to learn more <code>Python</code>, but really, if you want to help that would be quicker!</p>
<p>And that folks, is how the sausage is made.</p>


</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>This code has been tested on a number of searches and I’ve captured every exception I’ve encountered. If you have problems using this code, please file an issue. It’s nearly impossible that it is perfect at this point!↩︎</p></li>
<li id="fn2"><p>Some search terms produce quite a few false positives. I also review each repository to make sure the project is actually FOSS, is not a student project etc (more details on the main web site).↩︎</p></li>
<li id="fn3"><p>While I link to the documentation for completeness, the steps described next do all the work.↩︎</p></li>
<li id="fn4"><p>See notes in the file: I have not been able to get the Github API to work with multiple terms, so we search each one individually.↩︎</p></li>
<li id="fn5"><p>Want to contribute? If you know the workings of the PyPi.org API it would be nice to automatically pull the maintainer’s contact info.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2021,
  author = {Bryan Hanson},
  title = {Automatically {Searching} {Github} {Repos} by {Topic}},
  date = {2021-04-19},
  url = {http://chemospec.org/posts/2021-04-19-Search-GH-Topics/2021-04-19-Search-GH-Topics.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2021" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2021. <span>“Automatically Searching Github Repos by
Topic.”</span> April 19, 2021. <a href="http://chemospec.org/posts/2021-04-19-Search-GH-Topics/2021-04-19-Search-GH-Topics.html">http://chemospec.org/posts/2021-04-19-Search-GH-Topics/2021-04-19-Search-GH-Topics.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Github</category>
  <category>FOSS</category>
  <category>httr</category>
  <guid>http://chemospec.org/posts/2021-04-19-Search-GH-Topics/2021-04-19-Search-GH-Topics.html</guid>
  <pubDate>Mon, 19 Apr 2021 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Using Github Actions & drat to Deploy R Packages</title>
  <link>http://chemospec.org/posts/2021-04-11-GHA-drat/2021-04-11-GHA-drat.html</link>
  <description><![CDATA[ 



<p>Last summer, a <a href="https://summerofcode.withgoogle.com/">GSOC</a> project was approved for work on the <a href="https://github.com/cbeleites/hyperSpec"><code>hyperSpec</code></a> package which had grown quite large and hard to maintain.<sup>1</sup> The essence of the project was to break the original <code>hyperSpec</code> package into <a href="https://github.com/r-hyperspec">smaller packages</a>.<sup>2</sup> As part of that project, we needed to be able to:</p>
<ul>
<li>Provide development versions of packages</li>
<li>Provide large data-only packages (potentially too large to be hosted on CRAN).</li>
</ul>
<p>In this post I’ll describe how we used Dirk Eddelbuettel’s <a href="https://dirk.eddelbuettel.com/code/drat.html"><code>drat</code></a> package and <a href="https://github.com/features/actions">Github Actions</a> to automate the deployment of packages between repositories.</p>
<section id="what-is-drat" class="level2">
<h2 class="anchored" data-anchor-id="what-is-drat">What is drat?</h2>
<p><code>drat</code> is a package that simplifies the creation and modification of CRAN-like repositories. The structure of a CRAN-like repository is officially described briefly <a href="https://cran.r-project.org/doc/manuals/r-release/R-admin.html#Setting-up-a-package-repository">here</a>.<sup>3</sup> Basically, there is required set of subdirectories, required files containing package metadata, and source packages that are the result of the usual build and check process. One can also have platform-specific binary packages. <code>drat</code> will create the directories and metadata for you, and provides utilities that will move packages to the correct location and update the corresponding metadata.<sup>4</sup> The link above provides access to all sorts of documentation. My advice is to not overthink the concept. A repository is simply a directory structure and a couple of required metadata files, which must be kept in sync with the packages present. <code>drat</code> does the heavy-lifting for you.</p>
</section>
<section id="what-are-github-actions" class="level2">
<h2 class="anchored" data-anchor-id="what-are-github-actions">What are Github Actions?</h2>
<p><a href="https://github.com/features/actions">Github Actions</a> are basically a series of tasks that one can have Github run when there is an “event” on a repo, like a push or pull. Github Actions are used extensively for continuous integrations tasks, but they are not limited to such use. Github Actions are written in a simply yaml-like script that is rather easy to follow even if the details are not familiar. Github Actions uses shell commands, but much of the time the shell simply calls <code>Rscript</code> to run native <code>R</code> functions. One can run tasks on various hardware and OS versions.</p>
</section>
<section id="the-package-repo" class="level2">
<h2 class="anchored" data-anchor-id="the-package-repo">The Package Repo</h2>
<p>The deployed packages reside on the <code>gh-pages</code> branch of <a href="https://github.com/r-hyperspec/pkg-repo"><code>r-hyperspec/pkg-repo</code></a> in the form of the usual <code>.tar.gz</code> source archives, ready for users to install. One of the important features of this repo is the table of hosted packages displayed in the <code>README</code>. The table portion of <code>README.md</code> file is generated automatically whenever someone, or <em>something</em>, pushes to this repo. I include the notion that <em>something</em> might push because as you will see next, the deploy process will automatically push archives to this repo from the repo where they are created. The details of how this <code>README.md</code> is generated are in <a href="https://github.com/r-hyperspec/pkg-repo/blob/gh-pages/.github/workflows/drat--update-readme.yaml"><code>drat--update-readme.yaml</code></a>. If you take a look, you’ll see that we use some shell-scripting to find any <code>.tar.gz</code> archives and create a markdown-ready table structure, which Github then automatically displays (as it does with all <code>README.md</code> files at the top level of a repo). The <code>yaml</code> file also contains a little <code>drat</code> action that will refresh the repo in case that someone manually removes an archive file by git operations. Currently we do not host binary packages at this repo, but that is certainly possible by extension of the methods used for the source packages.</p>
</section>
<section id="the-automatic-deploy-process" class="level2">
<h2 class="anchored" data-anchor-id="the-automatic-deploy-process">The Automatic Deploy Process</h2>
<p>The automatic deploy process is used in several <code>r-hyperSpec</code> repos. I’ll use the <a href="https://github.com/r-hyperspec/hySpc.chondro"><code>chondro</code> repo</a> to illustrate the process. <code>chondro</code> is a simple package containing a &gt; 2 Mb data set. If the package is updated, the package is built and checked and then deployed automatically to <code>r-hyperSpec/pkg-repo</code> (described above). The magic is in <a href="https://github.com/r-hyperspec/hySpc.chondro/blob/develop/.github/workflows/drat--insert-package.yaml"><code>drat--insert-package.yaml</code></a>. The first part of this file does the standard build and check process.<sup>5</sup> The second part takes care of deploying to <code>r-hyperspec/pkg-repo</code>. The basic steps are given next (study the file for the details). <em>It is essential to keep in mind that each task in Github Actions starts from the same top level directory</em>.<sup>6</sup> Tasks are set off by the syntax <code>- name: task description</code>.</p>
<ul>
<li>Configure access to Github. Note that we employ a Github user name and e-mail that will uniquely identify the repo that is pushing to <code>r-hyperSpec/pkg-repo</code>. This is helpful for troubleshooting.</li>
<li>Clone <code>r-hyperSpec/pkg-repo</code> into a temporary directory and checkout the gh-pages branch.</li>
<li>Search for any <code>.tar.gz</code> files in the <code>check</code> folder, which is where we directed Github Actions to carry out the build and check process (the first half of this workflow).<sup>7</sup> Note that the argument <code>full.names = TRUE</code> is essential to getting the correct path. Use <code>drat</code> to insert the <code>.tar.gz</code> files into the cloned <code>r-hyperSpec/pkg-repo</code> temporary directory.</li>
<li>Move to the temporary directory, then use git commands to send the updated <code>r-hyperspec/pkg-repo</code> branch back to its home, now with the new <code>.tar.gz</code> files included. Use a git commit message that will show where the new tar ball came from.</li>
</ul>
<p>Thanks for reading. Let me know if you have any questions, via the comments, e-mail, etc.</p>
</section>
<section id="acknowledgements" class="level2">
<h2 class="anchored" data-anchor-id="acknowledgements">Acknowledgements</h2>
<p>This portion of the <code>hyperSpec</code> GSOC 2020 project was primarily the work of <code>hyperSpec</code> team members Erick Oduniyi, Bryan Hanson and Vilmantas Gegzna. Erick was supported by GSOC in summer 2020.</p>


</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>The work continues this summer, hopefully again with the support of GSOC.↩︎</p></li>
<li id="fn2"><p>Project <a href="https://chemospec.org/posts/2020-05-07-GSOC-hyperSpec/">background</a> and <a href="https://chemospec.org/posts/2020-09-08-GSOC-hyperSpec/">results</a>.↩︎</p></li>
<li id="fn3"><p>A more loquacious description that may be slightly dated is <a href="https://environments.rstudio.com/repositories.html">here</a>.↩︎</p></li>
<li id="fn4"><p><code>drat</code> is using existing <code>R</code> functions, mainly from the <code>tools</code> package. They are just organized and presented from the perspective of a user who wants to create a repo.↩︎</p></li>
<li id="fn5"><p>Modified from the recipes <a href="https://github.com/r-lib/actions/tree/master/examples#standard-ci-workflow">here</a>.↩︎</p></li>
<li id="fn6"><p>The toughest part of writing this workflow was knowing where one was in the directory tree of the Github Actions workspace. We made liberal use of <code>getwd()</code>, <code>list.files()</code> and related functions during troubleshooting. All of these “helps” have been removed from the mature version of the workflow. As noted in the workflow, the top directory is <code>/home/runner/work/${{ REPOSITORY_NAME }}/${{ REPOSITORY_NAME }}</code>.↩︎</p></li>
<li id="fn7"><p>It’s helpful to understand in a general way what happens during the build and check process (e.g.&nbsp;the directories and files created).↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2021,
  author = {Bryan Hanson},
  title = {Using {Github} {Actions} \&amp; Drat to {Deploy} {R} {Packages}},
  date = {2021-04-11},
  url = {http://chemospec.org/posts/2021-04-11-GHA-drat/2021-04-11-GHA-drat.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2021" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2021. <span>“Using Github Actions &amp; Drat to Deploy R
Packages.”</span> April 11, 2021. <a href="http://chemospec.org/posts/2021-04-11-GHA-drat/2021-04-11-GHA-drat.html">http://chemospec.org/posts/2021-04-11-GHA-drat/2021-04-11-GHA-drat.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Github Actions</category>
  <category>drat</category>
  <category>GSOC</category>
  <category>hyperSpec</category>
  <guid>http://chemospec.org/posts/2021-04-11-GHA-drat/2021-04-11-GHA-drat.html</guid>
  <pubDate>Sun, 11 Apr 2021 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Spectroscopy Suite Update</title>
  <link>http://chemospec.org/posts/2021-03-27-Spec-Suite-update/2021-03-27-Spec-Suite-update.html</link>
  <description><![CDATA[ 



<div class="cell">
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2021-03-27-Spec-Suite-update/emAnnotated.png" class="img-fluid" width="700"></p>
</div>
</div>
<p>My suite of spectroscopy <code>R</code> packages has been updated on CRAN. There are only a few small changes, but they will be important to some of you:</p>
<ul>
<li><code>ChemoSpecUtils</code> now provides a set of colorblind-friendly colors, see <code>?colorSymbol</code>. These are available for use in <code>ChemoSpec</code> and <code>ChemoSpec2D</code>.</li>
<li>At the request of several folks, <code>readJDX</code> now includes a function, <a href="https://rdrr.io/cran/readJDX/man/splitMultiblockDX.html"><code>splitMultiblockDX</code></a>, that will split a multiblock JCAMP-DX file into separate files, which can then be imported via the usual functions in the package.</li>
<li>All packages are built against the upcoming R 4.1 release (due in April).</li>
</ul>
<p>Here are the links to the documentation:</p>
<ul>
<li><a href="https://bryanhanson.github.io/ChemoSpec/"><code>ChemoSpec</code></a></li>
<li><a href="https://bryanhanson.github.io/ChemoSpec2D/"><code>ChemSpec2D</code></a></li>
<li><a href="https://rdrr.io/cran/ChemoSpecUtils/"><code>ChemoSpecUtils</code></a></li>
<li><a href="https://rdrr.io/cran/readJDX/"><code>readJDX</code></a></li>
</ul>
<p>As always, let me know if you discover trouble or have questions.</p>



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2021,
  author = {Bryan Hanson},
  title = {Spectroscopy {Suite} {Update}},
  date = {2021-03-27},
  url = {http://chemospec.org/posts/2021-03-27-Spec-Suite-update/2021-03-27-Spec-Suite-update.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2021" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2021. <span>“Spectroscopy Suite Update.”</span> March 27,
2021. <a href="http://chemospec.org/posts/2021-03-27-Spec-Suite-update/2021-03-27-Spec-Suite-update.html">http://chemospec.org/posts/2021-03-27-Spec-Suite-update/2021-03-27-Spec-Suite-update.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpec</category>
  <category>ChemoSpec2D</category>
  <category>ChemoSpecUtils</category>
  <category>readJDX</category>
  <guid>http://chemospec.org/posts/2021-03-27-Spec-Suite-update/2021-03-27-Spec-Suite-update.html</guid>
  <pubDate>Sat, 27 Mar 2021 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Interfacing ChemoSpec to PLS</title>
  <link>http://chemospec.org/posts/2021-02-08-PLS/2021-02-08-PLS.html</link>
  <description><![CDATA[ 



<div class="cell">

</div>
<p>The <code>ChemoSpec</code> package carries out exploratory data analysis (EDA) on spectroscopic data. EDA is often described as “letting that data speak”, meaning that one studies various descriptive plots, carries out clustering (HCA) as well as dimension reduction (e.g.&nbsp;PCA), with the ultimate goal of finding any natural structure in the data.</p>
<p>As such, <code>ChemoSpec</code> does not feature any predictive modeling functions because other packages provide the necessary tools. I do however hear from users several times a year about how to interface a <code>ChemoSpec</code> object with these other packages, and it seems like a post about how to do this is overdue. I’ll illustrate how to carry out partial least squares (PLS) using data stored in a <code>ChemoSpec</code> object and the package <code>chemometrics</code> by Peter Filzmoser and Kurt Varmuza <span class="citation" data-cites="chemometrics2017">(Filzmoser and Varmuza 2017)</span>. One can also use the <code>pls</code> package <span class="citation" data-cites="PLS2020">(Mevik, Wehrens, and Liland 2020)</span>.</p>
<p>PLS is a technique related to regression and PCA that tries to develop a mathematical model between a matrix of sample vectors, in our case, spectra, and one or more separately measured dependent variables that describe the same samples (typically, chemical analyses). If one can develop a reliable model, then going forward one can measure the spectrum of a new sample and use the model to predict the value of the dependent variables, presumably saving time and money. This post will focus on interfacing <code>ChemoSpec</code> objects with the needed functions in <code>chemometrics</code>. I won’t cover how to evaluate and refine your model, but you can find plenty on this in <span class="citation" data-cites="Filzmoser2009">Varmuza and Filzmoser (2009)</span> chapter 4, along with further background (there’s a lot of math in there, but if you aren’t too keen on the math, gloss over it to get the other nuggets). Alternatively, take a look at the vignette that ships with <code>chemometrics</code> via <code>browseVignettes("chemometrics")</code>.</p>
<p>As our example we’ll use the marzipan NIR data set that one can download in Matlab format from <a href="http://www.models.life.ku.dk/Marzipan">here</a>.<sup>1</sup> The corresponding publication is <span class="citation" data-cites="Christensen2004">(Christensen et al. 2004)</span>. This data set contains NIR spectra of marzipan candies made with different recipes and recorded using several different instruments, along with data about moisture and sugar content. We’ll use the data recorded on the NIRSystems 6500 instrument, covering the 400-2500 nm range. The following code chunk gives a summary of the data set and shows a plot of the data. Because we are focused on how to carry out PLS, we won’t worry about whether this data needs to be normalized or otherwise pre-processed (see the Christensen paper for lots of details).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"ChemoSpec"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Loading required package: ChemoSpecUtils</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>
As of version 6, ChemoSpec offers new graphics output options</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>For details, please see ?GraphicsOptions</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>
The ChemoSpec graphics option is set to 'ggplot2'</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>To change it, do
    options(ChemoSpecGraphics = 'option'),
    where 'option' is one of 'base' or 'ggplot2' or'plotly'.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">load</span>(<span class="st" style="color: #20794D;">"Marzipan.RData"</span>)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;">sumSpectra</span>(Marzipan)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
 Marzipan NIR data set from www.models.life.ku.dk/Marzipan 

    There are 32 spectra in this set.
    The y-axis unit is absorbance.

    The frequency scale runs from
    450 to 2448 wavelength (nm)
    There are 1000 frequency values.
    The frequency resolution is
    2 wavelength (nm)/point.


    The spectra are divided into 9 groups: 

  group no.     color symbol alt.sym
1     a   5 #FB0D16FF      1       a
2     b   4 #FFC0CBFF     16       b
3     c   4 #2AA30DFF      2       c
4     d   4 #9BCD9BFF     17       d
5     e   3 #700D87FF      3       e
6     f   3 #A777F2FF      8       f
7     g   2 #FD16D4FF      4       g
8     h   3 #B9820DFF      5       h
9     i   4 #B9820DFF      5       i


*** Note: this is an S3 object
of class 'Spectra'</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;">plotSpectra</span>(Marzipan, <span class="at" style="color: #657422;">which =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">32</span>, <span class="at" style="color: #657422;">lab.pos =</span> <span class="dv" style="color: #AD0000;">3000</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2021-02-08-PLS/2021-02-08-PLS_files/figure-html/showSpectra-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In order to carry out PLS, one needs to provide a matrix of spectroscopic data, with samples in rows (let’s call it <img src="https://latex.codecogs.com/png.latex?X">, you’ll see why in a moment). Fortunately this data is available directly from the <code>ChemoSpec</code> object as <code>Marzipan$data</code>.<sup>2</sup> One also needs to provide a matrix of the additional dependent data (let’s call it <img src="https://latex.codecogs.com/png.latex?Y">). It is critical that the order of rows in <img src="https://latex.codecogs.com/png.latex?Y"> correspond to the order of rows in the matrix of spectroscopic data, <img src="https://latex.codecogs.com/png.latex?X">.</p>
<p>Since we are working in <code>R</code> we know there are a lot of ways to do most tasks. Likely you will have the additional data in a spreadsheet, so let’s see how to bring that into the workspace. You’ll need samples in rows, and variables in columns. For your sanity and error-avoidance, you should include a header of variable names and the names of the samples in the first column. Save the spreadsheet as a csv file. I did these steps using the sugar and moisture data from the original paper. Read the file in as follows.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1">Y <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">read.csv</span>(<span class="st" style="color: #20794D;">"Marzipan.csv"</span>, <span class="at" style="color: #657422;">header =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;">str</span>(Y)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   32 obs. of  3 variables:
 $ sample  : chr  "a1" "a2" "a3" "a4" ...
 $ sugar   : num  32.7 34.9 33.9 33.2 33.2 ...
 $ moisture: num  15 14.9 14.7 14.9 14.9 ...</code></pre>
</div>
</div>
<p>The function we’ll be using wants a matrix as input, so convert the data frame that <code>read.csv</code> generates to a matrix. Note that we’ll select only the numeric variables on the fly, as unlike a data frame, a matrix can only be composed of one data type.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb12-1">Y <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.matrix</span>(Y[, <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"sugar"</span>, <span class="st" style="color: #20794D;">"moisture"</span>)])</span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;">str</span>(Y)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> num [1:32, 1:2] 32.7 34.9 33.9 33.2 33.2 ...
 - attr(*, "dimnames")=List of 2
  ..$ : NULL
  ..$ : chr [1:2] "sugar" "moisture"</code></pre>
</div>
</div>
<p>Now we are ready to carry out PLS. Since we have a multivariate <img src="https://latex.codecogs.com/png.latex?Y">, we need to use the appropriate function (use <code>pls1_nipals</code> if your <img src="https://latex.codecogs.com/png.latex?Y"> matrix is univariate).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"chemometrics"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Loading required package: rpart</code></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb16-1">pls_out <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">pls2_nipals</span>(<span class="at" style="color: #657422;">X =</span> Marzipan<span class="sc" style="color: #5E5E5E;">$</span>data, Y, <span class="at" style="color: #657422;">a =</span> <span class="dv" style="color: #AD0000;">5</span>)</span></code></pre></div>
</div>
<p>And we’re done! Be sure to take a look at <code>str(pls_out)</code> to see what you got back from the calculation. For the next steps in evaluating your model, see section 3.3 in the <code>chemometrics</code> vignette.</p>





<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Christensen2004" class="csl-entry">
Christensen, Jakob, Lars Nørgaard, Hanne Heimdal, Joan Grønkjær Pedersen, and Søren Balling Engelsen. 2004. <span>“Rapid Spectroscopic Analysis of Marzipan-Comparative Instrumentation.”</span> <em>Journal of Near Infrared Spectroscopy</em> 12 (1): 63–75. <a href="https://doi.org/10.1255/jnirs.408">https://doi.org/10.1255/jnirs.408</a>.
</div>
<div id="ref-chemometrics2017" class="csl-entry">
Filzmoser, Peter, and Kurt Varmuza. 2017. <em>Chemometrics: Multivariate Statistical Analysis in Chemometrics</em>. <a href="https://CRAN.R-project.org/package=chemometrics">https://CRAN.R-project.org/package=chemometrics</a>.
</div>
<div id="ref-PLS2020" class="csl-entry">
Mevik, Bjørn-Helge, Ron Wehrens, and Kristian Hovde Liland. 2020. <em>Pls: Partial Least Squares and Principal Component Regression</em>. <a href="https://CRAN.R-project.org/package=pls">https://CRAN.R-project.org/package=pls</a>.
</div>
<div id="ref-Filzmoser2009" class="csl-entry">
Varmuza, K., and P. Filzmoser. 2009. <em>Introduction to Multivariate Statistical Analysis in Chemometrics</em>. CRC Press.
</div>
</div></section><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I have converted the data from Matlab to a <code>ChemoSpec</code> object; if anyone wants to know how to do this let me know and I’ll put up a post on that process.↩︎</p></li>
<li id="fn2"><p><code>str(Marzipan)</code> will show you the structure of the <code>ChemoSpec</code> object (or in general, any <code>R</code> object). The official definition of a <code>ChemoSpec</code> object can be seen via <code>?Spectra</code>.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2021,
  author = {Bryan Hanson},
  title = {Interfacing {ChemoSpec} to {PLS}},
  date = {2021-02-08},
  url = {http://chemospec.org/posts/2021-02-08-PLS/2021-02-08-PLS.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2021" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2021. <span>“Interfacing ChemoSpec to PLS.”</span>
February 8, 2021. <a href="http://chemospec.org/posts/2021-02-08-PLS/2021-02-08-PLS.html">http://chemospec.org/posts/2021-02-08-PLS/2021-02-08-PLS.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>PLS</category>
  <category>ChemoSpec</category>
  <guid>http://chemospec.org/posts/2021-02-08-PLS/2021-02-08-PLS.html</guid>
  <pubDate>Mon, 08 Feb 2021 07:00:00 GMT</pubDate>
</item>
<item>
  <title>GSOC Wrap Up</title>
  <dc:creator>Erick Oduniyi</dc:creator>
  <link>http://chemospec.org/posts/2020-09-08-GSOC-hyperSpec/2020-09-08-GSOC-hyperSpec.html</link>
  <description><![CDATA[ 



<table>
<tbody><tr>
<td>
<img src="http://chemospec.org/posts/2020-09-08-GSOC-hyperSpec/og-image.png" alt="GSOC_logo" style="width:100px;">
</td>
<td>
Well, things have been busy lately! As reported back in <a href="https://chemospec.org/posts/2020-05-07-GSOC-hyperSpec/"><em>May</em></a>, I’ve been participating in Google Summer of Code which has now wrapped up. This was very rewarding for me, but today I want to share a guest post by Erick Oduniyi, the very talented student on the project. Bryan
</td>
</tr>
</tbody></table>
<hr>
<p>Checking in from Kansas!</p>
<p>This past summer (2020) I had the amazing opportunity to participate in the <a href="https://summerofcode.withgoogle.com/">Google Summer of Code</a> (GSoC or GSOC). As stated on the the GSOC website, GSOC is a “global program focused on bringing more student developers into open source software development. Students work with an open-source organization on a 3-month programming project during their break from school.”</p>
<p>This was a particularly meaningful experience as it was my last undergraduate summer internship. I’m a senior studying computer engineering at the University of Kansas, and at the beginning of the summer I still didn’t feel super comfortable working on public (open-source) projects. So, I thought this program would help build my confidence as a computer and software engineer. Moreover:</p>
<ul>
<li>I wanted to work with the <code>R</code> organization because that is my favorite programming language.</li>
<li>I wanted to work with <code>r-hyperspec</code> because I thought that would be the most impactful in terms of practicing project management and software ecosystem development.</li>
</ul>
<p>In the process I hoped to:</p>
<ul>
<li>Become proficient using <code>Git/Github</code>, including continuous integration</li>
<li>Become proficient in using <a href="https://trello.com/">Trello</a></li>
<li>Become proficient in using <code>R</code></li>
<li>Become familiar with the spectroscopy community</li>
<li>Become inspired to code more</li>
<li>Become inspired to document and write more open source projects.</li>
<li>Become excited to collaborate more across various industrial, academic, and community domains.</li>
</ul>
<p>And through a lot of hard work all of those things came to be! Truthfully, even though the summer project was successful there is still a lot of work to do:</p>
<ul>
<li>Fortify <code>hyperSpec</code> for <code>baseline</code> with bridge packages</li>
<li>Fortify <code>hyperSpec</code> for <code>EMSC</code> with bridge packages</li>
<li>Fortify <code>hyperSpec</code> for <code>matrixStats</code> with bridge packages.</li>
</ul>
<p>So, I’m excited to continue to work with the team! I think there are a ton of ideas I and the team have and hopefully we will get to explore them in deeper context. Speaking of the <a href="https://github.com/orgs/r-hyperspec/teams/r-hyperspec/members">team</a>, I have them to thank for an awesome <code>GSOC 2020</code> experience. If you are interested in the journey that was the GSoC 2020 experience (perhaps you might be interested in trying the program next year), then please feel free to jump around <a href="https://eoduniyi.github.io/hyperSpec.gsoc2020/">here</a> to get a feel for the things that I learned and how I worked with the <code>r-hyperspec</code> team this summer.</p>
<p>Best, E. Oduniyi</p>



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{oduniyi2020,
  author = {Erick Oduniyi},
  title = {GSOC {Wrap} {Up}},
  date = {2020-09-08},
  url = {http://chemospec.org/posts/2020-09-08-GSOC-hyperSpec/2020-09-08-GSOC-hyperSpec.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-oduniyi2020" class="csl-entry quarto-appendix-citeas">
Erick Oduniyi. 2020. <span>“GSOC Wrap Up.”</span> September 8, 2020. <a href="http://chemospec.org/posts/2020-09-08-GSOC-hyperSpec/2020-09-08-GSOC-hyperSpec.html">http://chemospec.org/posts/2020-09-08-GSOC-hyperSpec/2020-09-08-GSOC-hyperSpec.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>hyperSpec</category>
  <category>GSOC</category>
  <category>Guest Post</category>
  <guid>http://chemospec.org/posts/2020-09-08-GSOC-hyperSpec/2020-09-08-GSOC-hyperSpec.html</guid>
  <pubDate>Tue, 08 Sep 2020 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Simulating Spectroscopic Data Part 1</title>
  <link>http://chemospec.org/posts/2020-06-28-Sim-Spec-Data-Pt1/2020-06-28-Sim-Spec-Data-Pt1.html</link>
  <description><![CDATA[ 



<div class="cell">

</div>
<p>It is well-recognized that one of the virtues of the <code>R</code> language is the extensive tools it provides for working with distributions. <a href="https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/Distributions">Functions</a> exist to generate random number draws, determine quantiles, and examine the probability <a href="https://en.wikipedia.org/wiki/Probability_density_function">density</a> and <a href="https://en.wikipedia.org/wiki/Cumulative_distribution_function">cumulative</a> distribution curves that describe each distribution.</p>
<p>This toolbox gives one the ability to create simulated data sets for testing very easily. If you need a few random numbers from a Gaussian distribution then <code>rnorm</code> is your friend:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -1.67497913 -1.49447605 -0.02394601</code></pre>
</div>
</div>
<p>Imagine you were developing a new technique to determine if two methods of manufacturing widgets produced widgets of the same mass.<sup>1</sup> Even before the widgets were manufactured, you could test your code by simulating widget masses using <code>rnorm</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">widget_1_masses <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">100</span>, <span class="fl" style="color: #AD0000;">5.0</span>, <span class="fl" style="color: #AD0000;">0.5</span>) <span class="co" style="color: #5E5E5E;"># mean mass 5.0</span></span>
<span id="cb3-2">widget_2_masses <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="dv" style="color: #AD0000;">100</span>, <span class="fl" style="color: #AD0000;">4.5</span>, <span class="fl" style="color: #AD0000;">0.5</span>) <span class="co" style="color: #5E5E5E;"># mean mass 4.5</span></span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-06-28-Sim-Spec-Data-Pt1/2020-06-28-Sim-Spec-Data-Pt1_files/figure-html/widgetPlot-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Variations on this approach can be used to simulate spectral data sets.<sup>2</sup> The information I will share here is accumulated knowledge. I have no formal training in the theory behind the issues discussed, just skills I have picked up in various places and by experimenting. If you see something that is wrong or needs clarification or elaboration, please use the comments to set me straight!</p>
<section id="peak-shapes" class="level2">
<h2 class="anchored" data-anchor-id="peak-shapes">Peak Shapes</h2>
<p>What peak shape is expected for a given type of spectroscopy? In principle this is based on the theory behind the method, either some quantum mechanical model or an approximation of it. For some methods, like NMR, this might be fairly straightforward, at least in simple systems. But the frequencies involved in some spectroscopies not too different from others, and coupling is observed. Two examples which “interfere” with each other are:</p>
<ul>
<li>Electronic transitions in UV spectra which are broadened by interactions with vibrational states.</li>
<li>Vibrational transitions in IR spectroscopy (bonds stretching and bond angles bending in various ways) are coupled to electronic transitions.</li>
</ul>
<p>After theoretical considerations, we should keep in mind that all spectroscopies have some sort of detector, electronic components and basic data processing that can affect peak shape. A CCD on a UV detector is one of the simpler situations. FT-IR has a mechanical interferometer, and the raw signal from both IR and NMR is Fourier-transformed prior to use. So there are not only theoretical issues to think about, but also engineering, instrument tuning, electrical engineering and mathematical issues to consider.</p>
<p>Even with myriad theoretical and practical considerations, a Gaussian curve is a good approximation to a simple peak, and more complex peaks can be built by summing Gaussian curves. If we want to simulate a simple peak with a Gaussian shape, we can use the <code>dnorm</code> function, which gives us the “density” of the distribution:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1">std_deviations <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">5</span>, <span class="at" style="color: #657422;">length.out =</span> <span class="dv" style="color: #AD0000;">100</span>)</span>
<span id="cb4-2">Gaussian_1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">dnorm</span>(std_deviations)</span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;">plot</span>(std_deviations, Gaussian_1, <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>,</span>
<span id="cb4-4">  <span class="at" style="color: #657422;">xlab =</span> <span class="st" style="color: #20794D;">"standard deviations"</span>, <span class="at" style="color: #657422;">ylab =</span> <span class="st" style="color: #20794D;">"Gaussian Density"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-06-28-Sim-Spec-Data-Pt1/2020-06-28-Sim-Spec-Data-Pt1_files/figure-html/dnorm1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>If we want this to look more like a “real” peak, we can increase the x range and use x values with realistic frequency values. And if we want our spectrum to be more complex, we can add several of these curves together. Keep in mind that the area under the density curve is 1.0, and the peak width is determined by the value of argument <code>sd</code> (the standard deviation). For example if you want to simulate the UV spectrum of <a href="https://webbook.nist.gov/cgi/cbook.cgi?ID=C121335&amp;Units=SI&amp;Mask=400">vanillin</a>, which has maxima at about 230, 280 and 315 nm, one can do something along these lines:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">wavelengths <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">220</span>, <span class="dv" style="color: #AD0000;">350</span>, <span class="at" style="color: #657422;">by =</span> <span class="fl" style="color: #AD0000;">1.0</span>)</span>
<span id="cb5-2">Peak1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">dnorm</span>(wavelengths, <span class="dv" style="color: #AD0000;">230</span>, <span class="dv" style="color: #AD0000;">22</span>)</span>
<span id="cb5-3">Peak2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">dnorm</span>(wavelengths, <span class="dv" style="color: #AD0000;">280</span>, <span class="dv" style="color: #AD0000;">17</span>)</span>
<span id="cb5-4">Peak3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">dnorm</span>(wavelengths, <span class="dv" style="color: #AD0000;">315</span>, <span class="dv" style="color: #AD0000;">17</span>)</span>
<span id="cb5-5">Peaks123 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">colSums</span>(<span class="fu" style="color: #4758AB;">rbind</span>(<span class="fl" style="color: #AD0000;">1.6</span> <span class="sc" style="color: #5E5E5E;">*</span> Peak1, Peak2, Peak3))</span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;">plot</span>(wavelengths, Peaks123, <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>,</span>
<span id="cb5-7">  <span class="at" style="color: #657422;">xlab =</span> <span class="st" style="color: #20794D;">"wavelengths (nm)"</span>, <span class="at" style="color: #657422;">ylab =</span> <span class="st" style="color: #20794D;">"arbitrary intensity"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-06-28-Sim-Spec-Data-Pt1/2020-06-28-Sim-Spec-Data-Pt1_files/figure-html/vanillin-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The coefficient on <code>Peak1</code> is needed to increase the contribution of that peak in order to better resemble the linked spectrum (note that the linked spectrum y-axis is <img src="https://latex.codecogs.com/png.latex?log%20%5Cepsilon">; we’re just going for a rough visual approximation).</p>
<p>It’s a simple, if tedious, task to add Gaussian curves in this manner to simulate a <em>single spectrum</em>. One can also create several different spectra, and then combine them in various ratios to create a data set representing samples composed of <em>mixtures of compounds</em>. UV spectra are tougher due to the vibrational coupling; NMR spectra are quite straightforward since we know the area of each magnetic environment in the structure (but we also have to deal with doublets etc.). If you plan to do a lot of this, take a look at the <a href="https://cran.r-project.org/package=SpecHelpers"><code>SpecHelpers</code></a> package, which is designed to streamline these tasks.</p>
<p>A relatively minor exception to the typical Gaussian peak shape is NMR. Peaks in NMR are typically described as “Lorentzian”, which corresponds to the <a href="https://en.wikipedia.org/wiki/Cauchy_distribution">Cauchy</a> distribution <span class="citation" data-cites="Goldenberg2016">(Goldenberg 2016)</span>. This quick comparison shows that NMR peaks are expected to be less sharp and have fatter tails:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1">Gaussian_1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">dnorm</span>(std_deviations)</span>
<span id="cb6-2">Cauchy_1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">dcauchy</span>(std_deviations)</span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;">plot</span>(std_deviations, Gaussian_1, <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>,</span>
<span id="cb6-4">  <span class="at" style="color: #657422;">xlab =</span> <span class="st" style="color: #20794D;">"standard deviations"</span>, <span class="at" style="color: #657422;">ylab =</span> <span class="st" style="color: #20794D;">"density"</span>)</span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;">lines</span>(std_deviations, Cauchy_1, <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-06-28-Sim-Spec-Data-Pt1/2020-06-28-Sim-Spec-Data-Pt1_files/figure-html/GvC-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="baselines" class="level2">
<h2 class="anchored" data-anchor-id="baselines">Baselines</h2>
<p>For many types of spectroscopies there is a need to correct the baseline when processing the data. But if you are simulating spectroscopic (or chromatographic) data, how can you introduce baseline anomalies? Such anomalies can take many forms, for instance a linear dependence on wavelength (i.e.&nbsp;a steadily rising baseline without curvature). But more often one sees complex rolling baseline issues.</p>
<p>Let’s play with introducing different types of baseline abberations. First, let’s create a set of three simple spectra. We’ll use a simple function to scale the set of spectra so the range is on the interval [0…1] for ease of further manipulations.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">wavelengths <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">200</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">800</span></span>
<span id="cb7-2">Spec1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">dnorm</span>(wavelengths, <span class="dv" style="color: #AD0000;">425</span>, <span class="dv" style="color: #AD0000;">30</span>)</span>
<span id="cb7-3">Spec2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">dnorm</span>(wavelengths, <span class="dv" style="color: #AD0000;">550</span>, <span class="dv" style="color: #AD0000;">20</span>) <span class="sc" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">3</span> <span class="co" style="color: #5E5E5E;"># boost the area</span></span>
<span id="cb7-4">Spec3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">dnorm</span>(wavelengths, <span class="dv" style="color: #AD0000;">615</span>, <span class="dv" style="color: #AD0000;">15</span>)</span>
<span id="cb7-5">Spec123 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rbind</span>(Spec1, Spec2, Spec3)</span>
<span id="cb7-6"><span class="fu" style="color: #4758AB;">dim</span>(Spec123) <span class="co" style="color: #5E5E5E;"># matrix with samples in rows</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]   3 601</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1">scale01 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(M) {</span>
<span id="cb9-2">  <span class="co" style="color: #5E5E5E;"># scales the range of the matrix to [0...1]</span></span>
<span id="cb9-3">  mn <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">min</span>(M)</span>
<span id="cb9-4">  M <span class="ot" style="color: #003B4F;">&lt;-</span> M <span class="sc" style="color: #5E5E5E;">-</span> mn</span>
<span id="cb9-5">  mx <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">max</span>(M)</span>
<span id="cb9-6">  M <span class="ot" style="color: #003B4F;">&lt;-</span> M<span class="sc" style="color: #5E5E5E;">/</span>mx</span>
<span id="cb9-7">}</span></code></pre></div>
</div>
<p>Here are the results; the dotted line is the sum of the three spectra, offset vertically for ease of comparison.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1">Spec123 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">scale01</span>(Spec123)</span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;">plot</span>(wavelengths, Spec123[<span class="dv" style="color: #AD0000;">1</span>,], <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"black"</span>, <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>,</span>
<span id="cb10-3">  <span class="at" style="color: #657422;">xlab =</span> <span class="st" style="color: #20794D;">"wavelength (nm)"</span>, <span class="at" style="color: #657422;">ylab =</span> <span class="st" style="color: #20794D;">"intensity"</span>,</span>
<span id="cb10-4">  <span class="at" style="color: #657422;">ylim =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="fl" style="color: #AD0000;">1.3</span>))</span>
<span id="cb10-5"><span class="fu" style="color: #4758AB;">lines</span>(wavelengths, Spec123[<span class="dv" style="color: #AD0000;">2</span>,], <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"red"</span>)</span>
<span id="cb10-6"><span class="fu" style="color: #4758AB;">lines</span>(wavelengths, Spec123[<span class="dv" style="color: #AD0000;">3</span>,], <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"blue"</span>)</span>
<span id="cb10-7"><span class="fu" style="color: #4758AB;">lines</span>(wavelengths, <span class="fu" style="color: #4758AB;">colSums</span>(Spec123) <span class="sc" style="color: #5E5E5E;">+</span> <span class="fl" style="color: #AD0000;">0.2</span>, <span class="at" style="color: #657422;">lty =</span> <span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-06-28-Sim-Spec-Data-Pt1/2020-06-28-Sim-Spec-Data-Pt1_files/figure-html/showThree-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>One clever way to introduce baseline anomalies is to use a <a href="https://en.wikipedia.org/wiki/Vandermonde_matrix">Vandermonde matrix</a>. This is a trick I learned while working with the team on the <code>hyperSpec</code> overhaul funded by <a href="https://chemospec.org/posts/2020-05-07-GSOC-hyperSpec/">GSOC</a>.<sup>3</sup> It’s easiest to explain by an example:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">vander <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(x, order) <span class="fu" style="color: #4758AB;">outer</span>(x, <span class="dv" style="color: #AD0000;">0</span><span class="sc" style="color: #5E5E5E;">:</span>order, <span class="st" style="color: #20794D;">`</span><span class="at" style="color: #657422;">^</span><span class="st" style="color: #20794D;">`</span>)</span>
<span id="cb11-2">vdm <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">vander</span>(wavelengths, <span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;">dim</span>(vdm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 601   3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1">vdm[<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">5</span>, <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">3</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2]  [,3]
[1,]    1  200 40000
[2,]    1  201 40401
[3,]    1  202 40804
[4,]    1  203 41209
[5,]    1  204 41616</code></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb15-1">vdm <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">scale</span>(vdm, <span class="at" style="color: #657422;">center =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">scale =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">50</span>, <span class="dv" style="color: #AD0000;">2000</span>))</span></code></pre></div>
</div>
<p>Looking at the first few rows of <code>vdm</code>, you can see that the first column is a simple multiplier, in this case an identity vector. This can be viewed as an offset term.<sup>4</sup> The second column contains the original wavelength values, in effect a linear term. The third column contains the square of the original wavelength values. If more terms had been requested, they would be the cubed values etc. In the code above we also scaled the columns of the matrix so that the influence of the linear and especially the squared terms don’t dominate the absolute values of the final result. Scaling does not affect the shape of the curves.</p>
<p>To use this Vandermonde matrix, we need another matrix which will function as a set of coefficients.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb16-1">coefs <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">matrix</span>(<span class="fu" style="color: #4758AB;">runif</span>(<span class="fu" style="color: #4758AB;">nrow</span>(Spec123) <span class="sc" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">3</span>), <span class="at" style="color: #657422;">ncol =</span> <span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb16-2">coefs</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>           [,1]      [,2]      [,3]
[1,] 0.81126877 0.9094830 0.2902550
[2,] 0.15101528 0.9878546 0.3244570
[3,] 0.05994409 0.5978804 0.9532016</code></pre>
</div>
</div>
<p>If we multiply the coefficients by the tranposed Vandermonde matrix, we get back a set of offsets which are the rows of the Vandermonde matrix modified by the coefficients. We’ll scale things so that <code>Spec123</code> and <code>offsets</code> are on the same overall scale and then further scale so that the spectra are not overwhelmed by the offsets in the next step.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1">offsets <span class="ot" style="color: #003B4F;">&lt;-</span> coefs <span class="sc" style="color: #5E5E5E;">%*%</span> <span class="fu" style="color: #4758AB;">t</span>(vdm)</span>
<span id="cb18-2"><span class="fu" style="color: #4758AB;">dim</span>(offsets) <span class="co" style="color: #5E5E5E;"># same dimensions as Spec123 above</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]   3 601</code></pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1">offsets <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">scale01</span>(offsets) <span class="sc" style="color: #5E5E5E;">*</span> <span class="fl" style="color: #AD0000;">0.1</span></span></code></pre></div>
</div>
<p>These offsets can then be added to the original spectrum to obtain our spectra with a distorted baseline. Here we have summed the individual spectra. We have added a line based on extrapolating the first 20 points of the distorted data, which clearly shows the influence of the squared term.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb21-1">FinalSpec1 <span class="ot" style="color: #003B4F;">&lt;-</span> offsets <span class="sc" style="color: #5E5E5E;">+</span> Spec123</span>
<span id="cb21-2"><span class="fu" style="color: #4758AB;">plot</span>(wavelengths, <span class="fu" style="color: #4758AB;">colSums</span>(FinalSpec1), <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>, <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"red"</span>,</span>
<span id="cb21-3">  <span class="at" style="color: #657422;">xlab =</span> <span class="st" style="color: #20794D;">"wavelength (nm)"</span>, <span class="at" style="color: #657422;">ylab =</span> <span class="st" style="color: #20794D;">"intensity"</span>)</span>
<span id="cb21-4"><span class="fu" style="color: #4758AB;">lines</span>(wavelengths, <span class="fu" style="color: #4758AB;">colSums</span>(Spec123))</span>
<span id="cb21-5">fit <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">lm</span>(<span class="fu" style="color: #4758AB;">colSums</span>(FinalSpec1)[<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">20</span>] <span class="sc" style="color: #5E5E5E;">~</span> wavelengths[<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">20</span>])</span>
<span id="cb21-6"><span class="fu" style="color: #4758AB;">lines</span>(wavelengths, fit<span class="sc" style="color: #5E5E5E;">$</span>coef[<span class="dv" style="color: #AD0000;">2</span>]<span class="sc" style="color: #5E5E5E;">*</span>wavelengths <span class="sc" style="color: #5E5E5E;">+</span> fit<span class="sc" style="color: #5E5E5E;">$</span>coef[<span class="dv" style="color: #AD0000;">1</span>],</span>
<span id="cb21-7">  <span class="at" style="color: #657422;">col =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">lty =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="co" style="color: #5E5E5E;"># good ol' y = mx + b</span></span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-06-28-Sim-Spec-Data-Pt1/2020-06-28-Sim-Spec-Data-Pt1_files/figure-html/vdm4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The Vandermonde matrix approach works by creating offsets that are added to the original spectrum. However, it is limited to creating baseline distortions that generally increase at higher values. To create other types of distortions, you can use your imagination. For instance, you could reverse the order of the rows of <code>offsets</code> and/or use higher terms, scale a row, etc. One could also play with various polynomial functions to create the desired effect over the wavelength range of interest. For instance, the following code adds a piece of an inverted parabola to the original spectrum to simulate a baseline hump.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb22-1">hump <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">*</span>(<span class="dv" style="color: #AD0000;">15</span><span class="sc" style="color: #5E5E5E;">*</span>(wavelengths <span class="sc" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">450</span>))<span class="sc" style="color: #5E5E5E;">^</span><span class="dv" style="color: #AD0000;">2</span> <span class="co" style="color: #5E5E5E;"># piece of a parabola</span></span>
<span id="cb22-2">hump <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">scale01</span>(hump)</span>
<span id="cb22-3">FinalSpec2 <span class="ot" style="color: #003B4F;">&lt;-</span> hump <span class="sc" style="color: #5E5E5E;">*</span> <span class="fl" style="color: #AD0000;">0.1</span> <span class="sc" style="color: #5E5E5E;">+</span> <span class="fu" style="color: #4758AB;">colSums</span>(Spec123)</span>
<span id="cb22-4"><span class="fu" style="color: #4758AB;">plot</span>(wavelengths, FinalSpec2, <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"l"</span>,</span>
<span id="cb22-5">  <span class="at" style="color: #657422;">xlab =</span> <span class="st" style="color: #20794D;">"wavelengths (nm)"</span>, <span class="at" style="color: #657422;">ylab =</span> <span class="st" style="color: #20794D;">"intensity"</span>)</span>
<span id="cb22-6"><span class="fu" style="color: #4758AB;">lines</span>(wavelengths, hump <span class="sc" style="color: #5E5E5E;">*</span> <span class="fl" style="color: #AD0000;">0.1</span>, <span class="at" style="color: #657422;">lty =</span> <span class="dv" style="color: #AD0000;">2</span>) <span class="co" style="color: #5E5E5E;"># trace the hump</span></span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-06-28-Sim-Spec-Data-Pt1/2020-06-28-Sim-Spec-Data-Pt1_files/figure-html/hump-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In the plot, the dotted line traces out the value of <code>hump * 0.1</code>, the offset.</p>
<p>In the next post we’ll look at ways to introduce noise into simulated spectra.</p>



</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Goldenberg2016" class="csl-entry">
Goldenberg, David P. 2016. <em><span class="nocase">Principles of NMR Spectroscopy: An Illustrated Guide</span></em>. University Science Books.
</div>
</div></section><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Of course, this is simply the t-test.↩︎</p></li>
<li id="fn2"><p>For that matter, you can also simulate chromatograms using the methods we are about to show. It’s even possible to introduce tailing of a peak. For a function to do this, see the <a href="https://cran.r-project.org/package=SpecHelpers"><code>SpecHelpers</code></a> package.↩︎</p></li>
<li id="fn3"><p>The work I’m showing here is based on original code in package <a href="https://cran.r-project.org/web/packages/hyperSpec/index.html"><code>hyperSpec</code></a> by Claudia Belietes.↩︎</p></li>
<li id="fn4"><p>As a vector of 1’s it will have no effect on the calculations to come. However, you could multiply this column by a value to add an offset to your simulated spectra. This would be a means of simulating a steady electronic bias in an instrument’s raw data.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2020,
  author = {Bryan Hanson},
  title = {Simulating {Spectroscopic} {Data} {Part} 1},
  date = {2020-06-28},
  url = {http://chemospec.org/posts/2020-06-28-Sim-Spec-Data-Pt1/2020-06-28-Sim-Spec-Data-Pt1.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2020" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2020. <span>“Simulating Spectroscopic Data Part 1.”</span>
June 28, 2020. <a href="http://chemospec.org/posts/2020-06-28-Sim-Spec-Data-Pt1/2020-06-28-Sim-Spec-Data-Pt1.html">http://chemospec.org/posts/2020-06-28-Sim-Spec-Data-Pt1/2020-06-28-Sim-Spec-Data-Pt1.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Simulated Data</category>
  <category>SpecHelpers</category>
  <category>Baseline</category>
  <guid>http://chemospec.org/posts/2020-06-28-Sim-Spec-Data-Pt1/2020-06-28-Sim-Spec-Data-Pt1.html</guid>
  <pubDate>Sun, 28 Jun 2020 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Fortifying hyperSpec: Getting Ready for GSOC</title>
  <link>http://chemospec.org/posts/2020-05-07-GSOC-hyperSpec/2020-05-07-GSOC-hyperSpec.html</link>
  <description><![CDATA[ 



<p><a href="https://cran.r-project.org/web/packages/hyperSpec/index.html"><code>hyperSpec</code></a> is an <code>R</code> package for working with hyperspectral data sets. Hyperspectral data can take many forms, but a common application is a series of spectra collected over an x, y grid, for instance Raman imaging of medical specimens. <code>hyperSpec</code> was originally written by Claudia Beleites and she currently guides a core group of contributors.<sup>1</sup></p>
<p>Claudia, regular <code>hyperSpec</code> contributor Roman Kiselev and myself have joined forces this summer in a <a href="https://summerofcode.withgoogle.com/">Google Summer of Code</a> project to fortify <code>hyperSpec</code>. We are pleased to report that the project was accepted by <a href="https://github.com/rstats-gsoc/gsoc2020/wiki">R-GSOC</a> administrators, and, as of a few days ago, the excellent proposal written by Erick Oduniyi was approved by Google. Erick is a senior computer engineering major at Wichita State University in Kansas. Erick gravitates toward interdisciplinary projects. This, and his experience with <code>R</code>, <code>Python</code> and related skills gives him an excellent background for this project.</p>
<p>The focus of this project is to fortify the infrastructure of <code>hyperSpec</code>. Over the years, keeping <code>hyperSpec</code> up-to-date has grown a bit unwieldy. While to-do lists always evolve, the current <em>interrelated</em> goals include:</p>
<ul>
<li><strong>Distill</strong><sup>2</sup> <code>hyperSpec</code>: Prune <code>hyperSpec</code> back to it’s core functionality to keep it lightweight. Relocate portions, such as importing data, into their own dedicated packages.</li>
<li><strong>Shield</strong> <code>hyperSpec</code>: Analyze the ecosystem of <code>hyperSpec</code> with an eye to reducing dependencies as much as possible and ensuring that necessary dependencies are the best choices. Avoid “re-inventing the wheel”, as long as the available “wheels” are computationally efficient and stable (code base and API).</li>
<li><strong>Bridge</strong> <code>hyperSpec</code>: Having decided on how to reorganize <code>hyperSpec</code> and which dependencies are necessary and optimal, ensure that <code>hyperSpec</code>, the constellation of new sub-packages, and all dependencies are integrated efficiently. There are a number of data pre-processing and plotting functions that need to be streamlined and interfaced to external packages more consistently. Some portions may need substantial refactoring.</li>
</ul>
<p>Addressing each of these goals will make <code>hyperSpec</code> much easier to maintain, less fragile, and easier for others to contribute. Every step will bring enhanced documentation and vignettes, along with new unit tests. Work will begin in earnest on June 1st, and we are looking forward to a very productive summer.</p>
<p>Finally, on behalf of all participants, let me just say how grateful we are to Google for establishing the GSOC program and for supporting Erick’s work this summer!</p>




<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>A little history for the curious: the <code>hyperSpec</code> and <code>ChemoSpec</code> packages were written around the same time, independent of each other (~2009). Eventually, Claudia and I became aware of each other’s work, and we have collaborated in ways large and small ever since (I like working with Claudia because I always learn from her!). We have jointly mentored GSOC students twice before. One side project is <a href="https://github.com/Chathurga/HyperChemoBridge"><code>hyperChemoBridge</code></a>, a small package that converts <code>hyperSpec</code> objects into <code>Spectra</code> objects (the native <code>ChemoSpec</code> format) and vice-versa.↩︎</p></li>
<li id="fn2"><p>The descriptors here are Erick’s clever choice of words.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2020,
  author = {Bryan Hanson},
  title = {Fortifying {hyperSpec:} {Getting} {Ready} for {GSOC}},
  date = {2020-05-07},
  url = {http://chemospec.org/posts/2020-05-07-GSOC-hyperSpec/2020-05-07-GSOC-hyperSpec.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2020" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2020. <span>“Fortifying hyperSpec: Getting Ready for
GSOC.”</span> May 7, 2020. <a href="http://chemospec.org/posts/2020-05-07-GSOC-hyperSpec/2020-05-07-GSOC-hyperSpec.html">http://chemospec.org/posts/2020-05-07-GSOC-hyperSpec/2020-05-07-GSOC-hyperSpec.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>hyperSpec</category>
  <category>GSOC</category>
  <guid>http://chemospec.org/posts/2020-05-07-GSOC-hyperSpec/2020-05-07-GSOC-hyperSpec.html</guid>
  <pubDate>Thu, 07 May 2020 07:00:00 GMT</pubDate>
</item>
<item>
  <title>ChemoSpecUtils Update</title>
  <link>http://chemospec.org/posts/2020-04-27-CSU-update/2020-04-27-CSU-update.html</link>
  <description><![CDATA[ 



<p><code>ChemoSpecUtils</code>, a package that supports the common needs of <a href="https://bryanhanson.github.io/ChemoSpec/">ChemoSpec</a> and <a href="https://bryanhanson.github.io/ChemoSpec2D/">ChemoSpec2D</a>, has been updated to fix an unfortunate distance calculation error in version 0.4.38, released in January of this year. From the NEWS file for version 0.4.51:</p>
<ul>
<li>Function <code>rowDist</code>, which supports a number of functions, was overhauled to address confusion in the documentation, and in my head, about distances vs.&nbsp;similarities. Also, different definitions found in the literature were documented more clearly. The Minkowski distance option was removed (ask if you want it back), code was cleaned up, documentation greatly improved, an example was added and unit tests were added. Plot scales were also corrected as necessary. Depending upon which distance option is chosen, this change affects <code>hcaSpectra</code>, <code>plotSpectraDist</code>, <code>sampleDist</code> and <code>hcaScores</code> in package <code>ChemoSpec</code> as well as <code>hats_alignSpectra2D</code> and <code>hcaScores</code> in package <code>ChemoSpec2D</code>.</li>
</ul>
<p>This brings to mind a Karl Broman quote I think about frequently:</p>
<blockquote class="blockquote">
<p>“Open source means everyone can see my stupid mistakes. Version control means everyone can see every stupid mistake I’ve ever made.”</p>
<p>– <cite>Karl Broman</cite></p>
</blockquote>
<p><a href="https://kbroman.wordpress.com/2011/08/17/the-stupidest-r-code-ever/">Karl Broman quote source</a></p>



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2020,
  author = {Bryan Hanson},
  title = {ChemoSpecUtils {Update}},
  date = {2020-04-27},
  url = {http://chemospec.org/posts/2020-04-27-CSU-update/2020-04-27-CSU-update.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2020" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2020. <span>“ChemoSpecUtils Update.”</span> April 27,
2020. <a href="http://chemospec.org/posts/2020-04-27-CSU-update/2020-04-27-CSU-update.html">http://chemospec.org/posts/2020-04-27-CSU-update/2020-04-27-CSU-update.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpecUtils</category>
  <guid>http://chemospec.org/posts/2020-04-27-CSU-update/2020-04-27-CSU-update.html</guid>
  <pubDate>Mon, 27 Apr 2020 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Spectral Heatmaps</title>
  <link>http://chemospec.org/posts/2020-04-25-Heatmaps/2020-04-25-Heatmaps.html</link>
  <description><![CDATA[ 



<div class="cell">

</div>
<p>Most everyone is familiar with heatmaps in a general way. It’s hard not to run into them. Let’s consider some variations:</p>
<ul>
<li>A heatmap is a 2D array of rectangular cells colored by value. Generally, the rows and columns are ordered in some purposeful manner. These are very commonly encountered in microarrays for example.</li>
<li>An image is a type of heatmap in which the ordering of the rows and columns is defined spatially – it would not make sense to reorder them. This kind of data arises from the physical dimensions of a sensor, for instance the sensor on a digital camera or a raman microscope. An image might also arise by a decision to subset and present data in a “square” format. An example would be the topographic maps provided by the US government which cover a rectangular latitude/longitude range. This type of data can also be presented as a contour plot. See the examples in <code>?image</code> for image and contour plots of the classic Maunga Whau volcano data, as well as an overlay of the contours on the image plot.</li>
<li>A chloropleth is a map with irregular geographic boundaries and regions colored by some value. These are typically used in presenting social or political data. A chloropleth is not really a heatmap but it is often mis-characterized as one.</li>
</ul>
<p>These three types of plots are conceptually unified in that they require a 3D data set. In the case of the heatmap and the image, the underlying data are on a regular x, y grid of values; mathematically, a matrix. The row and column indices are mapped to the x, y values, and the matrix entries are the z values. A chloropleth can be thought of as a very warped matrix where the cells are not on a regular grid but instead a series of arbitrary connected paths, namely the geographic boundaries. There is a value inside each connected path (the z value), but naturally the specification of the paths requires a completely different data structure. An intermediate type would be the cartogram heatmap described by <a href="https://serialmentor.com/dataviz/geospatial-data.html#cartograms">Wilke</a>.</p>
<section id="heatmaps-in-spectroscopy" class="level1">
<h1>Heatmaps in Spectroscopy</h1>
<p>The <code>hmapSpectra</code> function in <code>ChemoSpec</code> displays a heatmap to help you focus on which frequencies drive the separation of your samples.<sup>1</sup> We’ll use the example from <code>?hmapSpectra</code> which uses the built-in <code>SrE.IR</code> data set. This data set is a series of IR spectra of commercial <em>Serenoa repens</em> oils which are composed of mixtures of triglycerides and free fatty acids (see <code>?SrE.IR</code> for more information). Thus the carbonyl region is of particular interest. The example narrows the frequency range to the carbonyl region for easy interpretation. Let’s look first at the spectra.</p>
<p><em>Note: rather than link every mention of a help page in this post, remember you can see all the documentation at this <a href="https://bryanhanson.github.io/ChemoSpec/reference/index.html">site</a>.</em></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"ChemoSpec"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Loading required package: ChemoSpecUtils</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>
As of version 6, ChemoSpec offers new graphics output options</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>For details, please see ?GraphicsOptions</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>
The ChemoSpec graphics option is set to 'ggplot2'</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>To change it, do
    options(ChemoSpecGraphics = 'option'),
    where 'option' is one of 'base' or 'ggplot2' or'plotly'.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">data</span>(SrE.IR) <span class="co" style="color: #5E5E5E;"># load the data set</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;"># limit to the carbonyl region</span></span>
<span id="cb7-3">IR <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">removeFreq</span>(SrE.IR, <span class="at" style="color: #657422;">rem.freq =</span> SrE.IR<span class="sc" style="color: #5E5E5E;">$</span>freq <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">1775</span> <span class="sc" style="color: #5E5E5E;">|</span> SrE.IR<span class="sc" style="color: #5E5E5E;">$</span>freq <span class="sc" style="color: #5E5E5E;">&lt;</span> <span class="dv" style="color: #AD0000;">1660</span>)</span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;">plotSpectra</span>(IR, <span class="at" style="color: #657422;">which =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">16</span>, <span class="at" style="color: #657422;">lab.pos =</span> <span class="st" style="color: #20794D;">"none"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-04-25-Heatmaps/2020-04-25-Heatmaps_files/figure-html/showSpectra-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The blue and green spectra are samples composed only of triglycerides, and hence the ester carbonyl is the primary feature. All other samples are clearly mixtures of ester and carboxylic acid stretching peaks. And now for the heatmap, using defaults:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb8-1">res <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hmapSpectra</span>(IR)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-04-25-Heatmaps/2020-04-25-Heatmaps_files/figure-html/defaultMap-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>In this default display, you’ll notice that the rows and column labels are indices to the underlying sample names and frequency list. This is not so helpful. The color scheme is not so exciting either. <code>hmapSpectra</code> uses the package <code>seriation</code> which in turn uses the <code>heatmap.2</code> function in package <code>gplots</code>. Fortunately we can use the <code>...</code> argument to pass additional arguments to <code>heatmap.2</code> to get a much more useful plot.</p>
</section>
<section id="customizing-the-hmapspectra-display" class="level1">
<h1>Customizing the hmapSpectra Display</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;"># Label samples and frequencies by passing arguments to heatmap.2</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;"># Also make a few other nice plot adjustments</span></span>
<span id="cb9-3">res <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hmapSpectra</span>(IR,</span>
<span id="cb9-4">  <span class="at" style="color: #657422;">col =</span> <span class="fu" style="color: #4758AB;">heat.colors</span>(<span class="dv" style="color: #AD0000;">5</span>),</span>
<span id="cb9-5">  <span class="at" style="color: #657422;">row_labels =</span> IR<span class="sc" style="color: #5E5E5E;">$</span>names, <span class="at" style="color: #657422;">col_labels =</span> <span class="fu" style="color: #4758AB;">as.character</span>(<span class="fu" style="color: #4758AB;">round</span>(IR<span class="sc" style="color: #5E5E5E;">$</span>freq)),</span>
<span id="cb9-6">  <span class="at" style="color: #657422;">margins =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">6</span>)</span>
<span id="cb9-7">)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-04-25-Heatmaps/2020-04-25-Heatmaps_files/figure-html/betterMap-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This is a lot nicer plot, since the rows are labeled with the sample names, and the columns with frequencies. Note that not every column is labeled, only every few frequencies. If you need the actual frequencies, which you probably will, they can be obtained from the returned object (<code>res</code> in this case; see the end of this post for an example).</p>
</section>
<section id="interpreting-the-plot" class="level1">
<h1>Interpreting the Plot</h1>
<p>How do we interpret this plot? This is a <em>seriated</em> heatmap, which means the rows and columns have been re-ordered according to some algorithm (more on this in a moment). The ordering puts the frequencies most important in distinguishing the samples in the upper left and lower right (the yellow regions). In the lower right corner, we see the two outlier samples TJ_OO and SV_EPO grouped together. On the frequency axis, we see that ester stretching peaks around 1740 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7Bcm%7D%5E1"> are characteristic for these samples. In the upper left corner, we see several samples grouped together, and associated with the fatty acid carboxylic acid peak around 1710 <img src="https://latex.codecogs.com/png.latex?%5Cmathrm%7Bcm%7D%5E1">. From these two observations, we can conclude that these two peak ranges are most important in separating the samples. Of course, in this simple example using a small part of the spectrum, this answer was already clear by simple inspection. Using a simple/limited range of data helps us to be sure we understand what’s happening when we try a new technique.</p>
</section>
<section id="using-a-different-distance-measure-seriation-method" class="level1">
<h1>Using a Different Distance Measure &amp; Seriation Method</h1>
<p>The default data treatments for <code>hmapSpectra</code> are inherited from <code>hmap</code> in package <code>seriation</code>. The default distance between the samples is the Euclidean distance. The default seriation method is “OLO” or “optimal leaf ordering”. The full list of seriation methods is described in <code>?seriate</code>. There are more than 20 options. As with the display details, we can change these defaults via the <code>...</code> arguments. Let’s use the cosine distance (the same as the Pearson distance), and seriate using the Gruvaeus-Wainer algorithm (there’s a brief explanation of this algorithm at <code>?seriate</code>).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1">cosine_dist <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cf" style="color: #003B4F;">function</span>(x) <span class="fu" style="color: #4758AB;">as.dist</span>(<span class="dv" style="color: #AD0000;">1</span> <span class="sc" style="color: #5E5E5E;">-</span> <span class="fu" style="color: #4758AB;">cor</span>(<span class="fu" style="color: #4758AB;">t</span>(x)))</span>
<span id="cb10-2">res <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hmapSpectra</span>(IR,</span>
<span id="cb10-3">  <span class="at" style="color: #657422;">col =</span> <span class="fu" style="color: #4758AB;">heat.colors</span>(<span class="dv" style="color: #AD0000;">5</span>),</span>
<span id="cb10-4">  <span class="at" style="color: #657422;">row_labels =</span> IR<span class="sc" style="color: #5E5E5E;">$</span>names, <span class="at" style="color: #657422;">col_labels =</span> <span class="fu" style="color: #4758AB;">as.character</span>(<span class="fu" style="color: #4758AB;">round</span>(IR<span class="sc" style="color: #5E5E5E;">$</span>freq)),</span>
<span id="cb10-5">  <span class="at" style="color: #657422;">margins =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">4</span>, <span class="dv" style="color: #AD0000;">6</span>),</span>
<span id="cb10-6">    <span class="at" style="color: #657422;">distfun =</span> cosine_dist,</span>
<span id="cb10-7">    <span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"GW"</span></span>
<span id="cb10-8">)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Registered S3 method overwritten by 'gclus':
  method         from     
  reorder.hclust seriation</code></pre>
</div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-04-25-Heatmaps/2020-04-25-Heatmaps_files/figure-html/bestMap-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>You can see that using different distance measures and seriation algorithms gives a rather different result: the ester “hot spots” which were in the lower right corner are now almost in the lower left corner. Which settings are best will depend on your data set, the goal of your analysis, and there are a lot of options from which to choose. The settings used here are simply for demonstration purposes, I make no claim these settings are appropriate!</p>
<p>Finally, if you want to capture the re-ordered frequencies, you can access them in the returned object:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;">round</span>(IR<span class="sc" style="color: #5E5E5E;">$</span>freq[res<span class="sc" style="color: #5E5E5E;">$</span>colInd<span class="sc" style="color: #5E5E5E;">$</span>order])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 1767 1765 1763 1761 1759 1757 1755 1753 1751 1749 1747 1745 1743 1741 1740
[16] 1738 1736 1734 1732 1730 1768 1774 1770 1772 1728 1726 1724 1722 1720 1718
[31] 1716 1714 1713 1711 1709 1707 1705 1703 1701 1699 1697 1695 1693 1691 1689
[46] 1687 1660 1664 1666 1678 1680 1686 1682 1676 1674 1672 1662 1668 1670 1684</code></pre>
</div>
</div>


</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Other functions in <code>ChemoSpec</code> that can help you explore which frequencies are important are <code>plotLoadings</code>, <code>plot2Loadings</code> and <code>sPlotSpectra</code>.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2020,
  author = {Bryan Hanson},
  title = {Spectral {Heatmaps}},
  date = {2020-04-25},
  url = {http://chemospec.org/posts/2020-04-25-Heatmaps/2020-04-25-Heatmaps.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2020" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2020. <span>“Spectral Heatmaps.”</span> April 25, 2020. <a href="http://chemospec.org/posts/2020-04-25-Heatmaps/2020-04-25-Heatmaps.html">http://chemospec.org/posts/2020-04-25-Heatmaps/2020-04-25-Heatmaps.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Heatmap</category>
  <category>Seriation</category>
  <category>ChemoSpec</category>
  <guid>http://chemospec.org/posts/2020-04-25-Heatmaps/2020-04-25-Heatmaps.html</guid>
  <pubDate>Sat, 25 Apr 2020 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Sharing in the Age of Coronavirus, Part 1</title>
  <link>http://chemospec.org/posts/2020-03-21-Data-Formats-Pt1/2020-03-21-Data-Formats-Pt1.html</link>
  <description><![CDATA[ 



<div class="cell">

</div>
<p>This is Part 1 of a series of posts about data formats for sharing spectroscopic data. Many folks are working from home due to a certain global pandemic. I hope you are all healthy and practicing proper social distancing!</p>
<p>Sharing data is intrinsic to any spectroscopic work. For many tasks, the data need never leave the instrument’s native format. Nowadays the data often goes immediately to some type of shared server, to be available for multiple users. So much of the time we don’t need to worry about format at all, especially if the acquisition software can do the chemometric analysis you need.</p>
<p>Increasingly however, publishers want all data deposited and documented somewhere in machine-readable, vendor-neutral form. This is one aspect of <a href="https://en.wikipedia.org/wiki/Reproducibility#Reproducible_research"><em>reproducible research</em></a>, where all data and the scripts or steps needed to analyze them are provided electronically with every paper. Or, your data may be headed to one of the many databases out there, where specific formats are required for submission. And while most data acquisition softwares provide some analysis options, if you need to do serious chemometric analysis you likely need to get the data off the machine in a vendor-neutral form. So there are several reasons one should be familiar with the various means of sharing spectroscopic data.</p>
<p>Data sharing/exchange is admittedly a potentially mundane topic. After all, we just want to get on with the scientific question. However, it’s worth knowing something about the options and considering the future of the field. In general I’d say things are a bit of a mess with no clear path to a common format. This series of posts will cover several different vendor-neutral data sharing formats, their pros and cons and their future prospects.</p>
<section id="ascii-files" class="level1">
<h1>ASCII Files</h1>
<p>Almost all spectroscopic instruments have some means of exporting data as simple <a href="https://en.wikipedia.org/wiki/ASCII">ASCII</a> format files. For 1D data, these usually take the form of columns of wavelengths (or the equivalent) and some form of intensity values. There may or may not be metadata and/or headers in the file. The resolution of the data in the file is usually sufficient, but it can be as low as 8-bit precision. Simple inspection is usually enough to understand these files, and eventually, read them in with <code>R</code> or <code>Python</code>, since other than the metadata these files are simply x and y values in columns.</p>
<p>2D NMR data in ASCII format are a bit more tedious to decipher. Assuming we are talking about data that has been processed, there are choices to be made about ordering the data and no standardization is evident in the wild. Do you export the data by rows (F2 values at fixed F1 value), by columns (F1 values at fixed F2 value), or an entire matrix? Do you export in a format that mirrors how we typically look at the data, namely the lowest F1 values are first and the lowest F2 values last? 2D NMR is unique among 2D plots in not having 0,0 in any corner. Or do you export in an increasing order, as though you were starting from 0,0? While there are a lot of combinations possible, through trial-and-error one can determine how the data was exported. This is naturally easier if you have a reference spectrum for comparison. I can say from experience that this task is do-able but annoying. Some vendors also export hypercomplex data, in which there is a copy of the data that has been transformed only along F2 and a copy in which transformation has occurred on both dimensions.</p>
<p>In addition to deciphering how the data is stored in an exported ASCII file, one needs to keep in mind file size, because ASCII values are not compressed. If one is dealing with IR or UV-Vis data, the typically small number of data points means the files are not large, making ASCII export a good option. For 1D NMR data with typically &gt; 16K data points, the size of the files begins to matter a bit, especially if you have large collections of spectra, which are becoming increasingly common with autosamplers. With 2D NMR, spectra in ASCII format begin to take up some serious space, and the time needed to read in the data becomes noticable.</p>
<section id="pros-cons-of-the-ascii-format" class="level3">
<h3 class="anchored" data-anchor-id="pros-cons-of-the-ascii-format">Pros &amp; Cons of the ASCII Format</h3>
<div class="cell">

</div>
<div class="cell-output-display">
<table class="table table-striped table-bordered" style="margin-left: auto; margin-right: auto;">
<tbody>
  <tr>
   <td style="text-align:left;border-right:3px solid black;font-weight: bold;"> Pros </td>
   <td style="text-align:left;font-weight: bold;"> Cons </td>
  </tr>
  <tr>
   <td style="text-align:left;border-right:3px solid black;"> Near-universal availability </td>
   <td style="text-align:left;"> Rarely any metadata </td>
  </tr>
  <tr>
   <td style="text-align:left;border-right:3px solid black;"> Human readible </td>
   <td style="text-align:left;"> Rarely any documentation </td>
  </tr>
  <tr>
   <td style="text-align:left;border-right:3px solid black;">  </td>
   <td style="text-align:left;"> Slow to parse for large data sets </td>
  </tr>
  <tr>
   <td style="text-align:left;border-right:3px solid black;">  </td>
   <td style="text-align:left;"> For 2D NMR, internal order must be deciphered </td>
  </tr>
</tbody>
</table>

</div>
</section>
<section id="the-future-of-the-ascii-format" class="level3">
<h3 class="anchored" data-anchor-id="the-future-of-the-ascii-format">The Future of the ASCII Format</h3>
<p>Because of it’s relative simplicity, and near-universal implementation in vendor software, ASCII formatted export files are here to stay.</p>
</section>
</section>
<section id="jcamp-dx-files" class="level1">
<h1>JCAMP-DX Files</h1>
<section id="the-history-of-jcamp-dx-format" class="level3">
<h3 class="anchored" data-anchor-id="the-history-of-jcamp-dx-format">The History of JCAMP-DX Format</h3>
<p>The JCAMP-DX format and standard began at a time when hard drive space was expensive and read/write/transmission errors by hardware were a real issue. This was way before the internet: we are talking about transferring data via telephone/modem, magnetic tape and simple OCR. Hence, three key concerns were to compress the data, to build in data integrity checks and to be flexible for future expansion. Two spectroscopists working with IR data, Robert McDonald and Paul Wilks Jr., published the first standard in 1988 <span class="citation" data-cites="McDonald1988">(McDonald and Wilks 1988)</span>, with input from instrument manufacturers. From the begininng JCAMP-DX was a project of JCAMP, the <em>Joint Committee on Atomic and Physical Data</em>, a committee of the IUPAC. Refinements were published in 1991 <span class="citation" data-cites="Grasselli1991">(Grasselli 1991)</span>, support for NMR was added in 1993 <span class="citation" data-cites="Davies1993">(A. Davies and Lampen 1993)</span>, and MS in 1994 <span class="citation" data-cites="Lampen1994">(Lampen et al. 1994)</span> by which time the standard was at version 5 <span class="citation" data-cites="Lampen1999">(Lampen et al. 1999)</span>. Extensions for CD <span class="citation" data-cites="Woollett2012">(Woollett et al. 2012)</span>, ion mobility spectrometry <span class="citation" data-cites="Bumbach2001">(Baumbach et al. 2001)</span> and electron magnetic resonance have been proposed <span class="citation" data-cites="Cammack2006">(Cammack et al. 2006)</span>. Interestingly, there was also an attempt to describe structure (connectivity) using the format <span class="citation" data-cites="Gasteiger1991">(Gasteiger et al. 1991)</span>. In 2001 a JCAMP-DX standard for NMR pulse sequences was published <span class="citation" data-cites="Davies2001">(A. N. Davies et al. 2001)</span>.</p>
</section>
<section id="an-example" class="level3">
<h3 class="anchored" data-anchor-id="an-example">An Example</h3>
<p>Another goal for the format was to have the format be both human and machine readible. The format is composed of metadata describing the data and then the compressed data. There are several compression formats possible; some are more human readible than others! Here is a simple example of a JCAMP-DX file containing part of an IR spectrum. The blue box contains the metadata, which is clearly human readible and indeed, most meanings are immediately obvious. The orange box contains the compressed data in the “DIFFDUP” format. In another post we might dissect how that works, but for now, we can clearly read the characters but they need to be translated into actual numerical values.</p>
<p><img src="http://chemospec.org/posts/2020-03-21-Data-Formats-Pt1/P11_Sample_DX.png" alt="Sample JCAMP-DX File" style="width:700px;"></p>
</section>
<section id="pros-cons-of-the-jcamp-dx-format" class="level3">
<h3 class="anchored" data-anchor-id="pros-cons-of-the-jcamp-dx-format">Pros &amp; Cons of the JCAMP-DX Format</h3>
<div class="cell-output-display">
<table class="table table-striped table-bordered" style="margin-left: auto; margin-right: auto;">
<tbody>
  <tr>
   <td style="text-align:left;border-right:3px solid black;font-weight: bold;"> Pros </td>
   <td style="text-align:left;font-weight: bold;"> Cons </td>
  </tr>
  <tr>
   <td style="text-align:left;border-right:3px solid black;"> Near-universal availability </td>
   <td style="text-align:left;"> Minimal compression by modern standards </td>
  </tr>
  <tr>
   <td style="text-align:left;border-right:3px solid black;"> Metadata human readible </td>
   <td style="text-align:left;"> Error checking makes parsing slow </td>
  </tr>
  <tr>
   <td style="text-align:left;border-right:3px solid black;"> Compression formats can be manually detangled for checking </td>
   <td style="text-align:left;"> Error checking probably no longer needed </td>
  </tr>
  <tr>
   <td style="text-align:left;border-right:3px solid black;">  </td>
   <td style="text-align:left;"> Vendors do not always follow the standard exactly </td>
  </tr>
</tbody>
</table>

</div>
</section>
<section id="future-of-the-jcamp-dx-format" class="level3">
<h3 class="anchored" data-anchor-id="future-of-the-jcamp-dx-format">Future of the JCAMP-DX Format</h3>
<p>Because of its long history and universal availability, the JCAMP-DX format appears to be here for the long-haul in spite of its limitations. Future posts in this series will cover data sharing formats that may eventually replace JCAMP-DX.</p>



</section>
</section>

<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Bumbach2001" class="csl-entry">
Baumbach, JI, AN Davies, P Lampen, and H Schmidt. 2001. <span>“<span class="nocase">JCAMP-DX. A Standard Format for the Exchange of Ion Mobility Spectrometry Data - (IUPAC recommendations 2001)</span>.”</span> <em><span>Pure and Applied Chemistry</span></em> 73 (11): 1765–82. <a href="https://doi.org/10.1351/pac200173111765">https://doi.org/10.1351/pac200173111765</a>.
</div>
<div id="ref-Cammack2006" class="csl-entry">
Cammack, R, Y Fann, RJ Lancashire, JP Maher, PS McIntyre, and R Morse. 2006. <span>“<span class="nocase">JCAMP-DX for electron magnetic resonance(EMR)</span>.”</span> <em><span>Pure and Applied Chemistry</span></em> 78 (3): 613–31. <a href="https://doi.org/10.1351/pac200678030613">https://doi.org/10.1351/pac200678030613</a>.
</div>
<div id="ref-Davies1993" class="csl-entry">
Davies, AN, and P Lampen. 1993. <span>“<span class="nocase">JCAMP-DX for NMR</span>.”</span> <em><span>Applied Spectroscopy</span></em> 47 (8): 1093–99. <a href="https://doi.org/10.1366/0003702934067874">https://doi.org/10.1366/0003702934067874</a>.
</div>
<div id="ref-Davies2001" class="csl-entry">
Davies, Antony N., Jörg Lambert, Robert J. Lancashire, and Peter Lampen. 2001. <span>“<span class="nocase">Guidelines for the Representation of Pulse Sequences for Solution-State Nuclear Magnetic Resonance Spectroscopy</span>.”</span> <em><span>Pure and Applied Chemistry</span></em> 73 (11): 1749–64.
</div>
<div id="ref-Gasteiger1991" class="csl-entry">
Gasteiger, J., B. M. P. Hendricks, Hoever P., Jochum C., and Somberg H. 1991. <span>“<span class="nocase">JCAMP-CS: A Standard Exchange Format for Chemical Structure Information in a Computer-Readible Form</span>.”</span> <em><span>Applied Spectroscopy</span></em> 45 (1): 4–11.
</div>
<div id="ref-Grasselli1991" class="csl-entry">
Grasselli, JG. 1991. <span>“<span class="nocase">JCAMP-DX, A Standard Format for Exchange of Infrared-Spectra in Computer Readible Form</span>.”</span> <em><span>Pure and Applied Chemistry</span></em> 63 (12): 1781–92. <a href="https://doi.org/10.1351/pac199163121781">https://doi.org/10.1351/pac199163121781</a>.
</div>
<div id="ref-Lampen1994" class="csl-entry">
Lampen, P, H Hillig, AN Davies, and M Linscheid. 1994. <span>“<span class="nocase">JCAMP-DX for Mass Spectrometry</span>.”</span> <em><span>Applied Spectroscopy</span></em> 48 (12): 1545–52.
</div>
<div id="ref-Lampen1999" class="csl-entry">
Lampen, P, J Lambert, RJ Lancashire, RS McDonald, PS McIntyre, DN Rutledge, T Frohlich, and AN Davies. 1999. <span>“<span class="nocase">An Extension to the JCAMP-DX Standard File Format, JCAMP-DX V.5.01 (IUPAC Recommendations 1999)</span>.”</span> <em><span>Pure and Applied Chemistry</span></em> 71 (8): 1549–56. <a href="https://doi.org/10.1351/pac199971081549">https://doi.org/10.1351/pac199971081549</a>.
</div>
<div id="ref-McDonald1988" class="csl-entry">
McDonald, RS, and PA Wilks. 1988. <span>“<span class="nocase">JCAMP-DX, A Standard Format for Exchange of Infrared-Spectra in Computer Readible Form</span>.”</span> <em><span>Applied Spectroscopy</span></em> 42 (1): 151–62. <a href="https://doi.org/10.1366/0003702884428734">https://doi.org/10.1366/0003702884428734</a>.
</div>
<div id="ref-Woollett2012" class="csl-entry">
Woollett, Benjamin, Daniel Klose, Richard Cammack, Robert W. Janes, and B. A. Wallace. 2012. <span>“<span class="nocase">JCAMP-DX for circular dichroism spectra and metadata (IUPAC Recommendations 2012)</span>.”</span> <em><span>Pure and Applied Chemistry</span></em> 84 (10): 2171–82. <a href="https://doi.org/10.1351/PAC-REC-12-02-03">https://doi.org/10.1351/PAC-REC-12-02-03</a>.
</div>
</div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2020,
  author = {Bryan Hanson},
  title = {Data {Sharing} in the {Age} of {Coronavirus,} {Part} 1},
  date = {2020-03-21},
  url = {http://chemospec.org/posts/2020-03-21-Data-Formats-Pt1/2020-03-21-Data-Formats-Pt1.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2020" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2020. <span>“Data Sharing in the Age of Coronavirus, Part
1.”</span> March 21, 2020. <a href="http://chemospec.org/posts/2020-03-21-Data-Formats-Pt1/2020-03-21-Data-Formats-Pt1.html">http://chemospec.org/posts/2020-03-21-Data-Formats-Pt1/2020-03-21-Data-Formats-Pt1.html</a>.
</div></div></section></div> ]]></description>
  <category>Data Formats</category>
  <category>JCAMP-DX</category>
  <category>ASCII</category>
  <guid>http://chemospec.org/posts/2020-03-21-Data-Formats-Pt1/2020-03-21-Data-Formats-Pt1.html</guid>
  <pubDate>Sat, 21 Mar 2020 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Aligning 2D NMR Spectra Part 3</title>
  <link>http://chemospec.org/posts/2020-03-04-NMR-Align-Pt3/2020-03-04-NMR-Align-Pt3.html</link>
  <description><![CDATA[ 



<p>This is Part 3 of a series on aligning 2D NMR, as implemented in the package <code>ChemoSpec2D</code>. <a href="https://chemospec.org/posts/2020-02-20-NMR-Align-Pt1/">Part 1</a> <a href="https://chemospec.org/posts/2020-03-02-NMR-Align-Pt2/">Part2</a></p>
<p>Let’s get to work. The function to carry out alignment is <code>hats_alignSpectra2D</code>. The arguments <code>maxF1</code> and <code>maxF2</code> define the space that will be considered as the two spectra are shifted relative to each other. The space potentially covered is <code>-maxF1</code> to <code>maxF1</code> and similarly for the F2 dimension. <code>dist_method</code>, <code>thres</code> and <code>minimize</code> refer to the objective function, as described in Part 1. In this example we will consider two spectra succcessfully aligned when we get below the threshold. When one shifts one spectrum relative to the other, part of the shifted spectrum gets cutoff and part of it is empty space. <code>fill = "noise"</code> instructs the function to fill the empty space with an estimate of the noise from the original spectrum. We’ll set <code>plot = FALSE</code> here because the output is extensive. I’ll provide sample plotting output in a moment.</p>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"ChemoSpec2D"</span>)</span>
<span id="cb1-2"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Loading required package: ChemoSpecUtils</span></span>
<span id="cb1-3"><span class="do" style="color: #5E5E5E;
font-style: italic;">## </span></span>
<span id="cb1-4"><span class="do" style="color: #5E5E5E;
font-style: italic;">## As of version 6, ChemoSpec2D offers new graphics output options</span></span>
<span id="cb1-5"><span class="do" style="color: #5E5E5E;
font-style: italic;">## </span></span>
<span id="cb1-6"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Functions plotScores and plotScree will work with the new options</span></span>
<span id="cb1-7"><span class="do" style="color: #5E5E5E;
font-style: italic;">## For details, please see ?GraphicsOptions</span></span>
<span id="cb1-8"><span class="do" style="color: #5E5E5E;
font-style: italic;">## </span></span>
<span id="cb1-9"><span class="do" style="color: #5E5E5E;
font-style: italic;">## The ChemoSpec graphics option is set to 'ggplot2'</span></span>
<span id="cb1-10"><span class="do" style="color: #5E5E5E;
font-style: italic;">## To change it, do</span></span>
<span id="cb1-11"><span class="do" style="color: #5E5E5E;
font-style: italic;">##  options(ChemoSpecGraphics = 'option'),</span></span>
<span id="cb1-12"><span class="do" style="color: #5E5E5E;
font-style: italic;">##  where 'option' is one of 'base' or 'ggplot2' or'plotly'.</span></span>
<span id="cb1-13"><span class="fu" style="color: #4758AB;">data</span>(MUD2)</span>
<span id="cb1-14"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">123</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1">MUD2a <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">hats_alignSpectra2D</span>(MUD2,</span>
<span id="cb2-2">    <span class="at" style="color: #657422;">maxF1 =</span> <span class="dv" style="color: #AD0000;">5</span>, <span class="at" style="color: #657422;">maxF2 =</span> <span class="dv" style="color: #AD0000;">5</span>,</span>
<span id="cb2-3">    <span class="at" style="color: #657422;">dist_method =</span> <span class="st" style="color: #20794D;">"euclidean"</span>, <span class="at" style="color: #657422;">thres =</span> <span class="dv" style="color: #AD0000;">40</span>, <span class="at" style="color: #657422;">minimize =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb2-4">    <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"noise"</span>,</span>
<span id="cb2-5">    <span class="at" style="color: #657422;">plot =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>This is a beta version of hats_alignSpectra2D.
    You should set the seed for reproducible results.
    Please check your results carefully, and consider sharing your data
    for additional testing.  Contact Bryan Hanson via hanson@depauw.edu</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[ChemoSpec2D] Processing row  1  of  9  from the guide tree:
[ChemoSpec2D] Starting alignment of sample(s) 7 
    with sample(s) 4 
[ChemoSpec2D] Best alignment is to shift F2 by  0  and F1 by  -1 

[ChemoSpec2D] Processing row  2  of  9  from the guide tree:
[ChemoSpec2D] Starting alignment of sample(s) 6 
    with sample(s) 3 
[ChemoSpec2D] Best alignment is to shift F2 by  0  and F1 by  -1 

[ChemoSpec2D] Processing row  3  of  9  from the guide tree:
[ChemoSpec2D] Starting alignment of sample(s) 5 
    with sample(s) 2 
[ChemoSpec2D] Best alignment is to shift F2 by  0  and F1 by  -1 

[ChemoSpec2D] Processing row  4  of  9  from the guide tree:
[ChemoSpec2D] Starting alignment of sample(s) 8 
    with sample(s) 1 
[ChemoSpec2D] Best alignment is to shift F2 by  0  and F1 by  -1 

[ChemoSpec2D] Processing row  5  of  9  from the guide tree:
[ChemoSpec2D] Starting alignment of sample(s) 1, 8 
    with sample(s) 9 
[ChemoSpec2D] Best alignment is to shift F2 by  2  and F1 by  1 

[ChemoSpec2D] Processing row  6  of  9  from the guide tree:
[ChemoSpec2D] Starting alignment of sample(s) 2, 5 
    with sample(s) 3, 6 
[ChemoSpec2D] Best alignment is to shift F2 by  2  and F1 by  0 

[ChemoSpec2D] Processing row  7  of  9  from the guide tree:
[ChemoSpec2D] Starting alignment of sample(s) 4, 7 
    with sample(s) 10 
[ChemoSpec2D] Best alignment is to shift F2 by  0  and F1 by  3 

[ChemoSpec2D] Processing row  8  of  9  from the guide tree:
[ChemoSpec2D] Starting alignment of sample(s) 2, 3, 5, 6 
    with sample(s) 1, 8, 9 
[ChemoSpec2D] Best alignment is to shift F2 by  0  and F1 by  3 

[ChemoSpec2D] Processing row  9  of  9  from the guide tree:
[ChemoSpec2D] Starting alignment of sample(s) 1, 2, 3, 5, 6, 8, 9 
    with sample(s) 4, 7, 10 
[ChemoSpec2D] Best alignment is to shift F2 by  -5  and F1 by  0 

[ChemoSpec2D] Alignment steps and results:
       Ref                Mask F2shift F1shift
1        4                   7       0      -1
2        3                   6       0      -1
3        2                   5       0      -1
4        1                   8       0      -1
5        9                1, 8       2       1
6     3, 6                2, 5       2       0
7       10                4, 7       0       3
8  1, 8, 9          2, 3, 5, 6       0       3
9 4, 7, 10 1, 2, 3, 5, 6, 8, 9      -5       0</code></pre>
</div>
</div>
<p>As the alignment proceeds, updates from the function are prefixed with <code>[ChemoSpec2D]</code>. In the first step we get a message that row 1 of 9 of the guide tree is being processed, in which sample 7 is being aligned with sample 4. The guide tree is shown below. One can see that samples 7 and 4 are very similar, so they are aligned first. If you inspect the output above, you can see that the four most similar pairs of spectra are aligned first, followed by groups of spectra according to similarity. For each alignment the needed shifts are reported. The last part of the output is a summary of all the alignments carried out. Note that the vertical scale on the guide tree is the same as the scale on the <code>sampleDist</code> plot in Part 1 (using the Euclidean distance).</p>
<p><img src="http://chemospec.org/posts/2020-03-04-NMR-Align-Pt3/P10_Dendrogram.png" alt="X Space" style="width:600px;"></p>
<section id="diagnostics-on-space" class="level2">
<h2 class="anchored" data-anchor-id="diagnostics-on-space">Diagnostics on Space</h2>
<p>To save space, I suppressed the plotting of the results. However, there are plots! In fact there is a set of plots for each alignment step. Here are two of the plots produced if <code>plot = TRUE</code>; these deal with the X-Space which is the search space (the terminology comes from the <code>mlrMBO</code> package which is designed to handle many types of optimization). This plot is for Step 7. The upper plot shows the search space. Axis x1 corresponds to the F1 dimension, and axis x2 the F2 dimension. The red squares represent the initial experimental design, using the results from the objective function. The blue circles represent additional points added as the search proceeds. These represent new points on the response surface defined by the surrogate function (see Part 2 for background). The orange diamond is the best alignment, which in this case has no shift along F2 but a three data point shift along F1; this corresponds to the output above. The green triangle is the last position tested.</p>
<p>The lower plot represents the progress of the search over time. Axis “dob” stands for “date of birth” which is basically the time index of when the test point was added.</p>
<p><img src="http://chemospec.org/posts/2020-03-04-NMR-Align-Pt3/P10_X_Space.png" alt="X Space" style="width:600px;"></p>
</section>
<section id="diagnostics-on-the-objective-function" class="level2">
<h2 class="anchored" data-anchor-id="diagnostics-on-the-objective-function">Diagnostics on the Objective Function</h2>
<p>This second set of plots deals with what <code>mlrMBO</code> considers the Y-Space, which concerns the values of the objective function. The top plot is a histogram of the distance (objective function) values; in this case most of them were pretty bad (high, meaning a larger distance between the spectra). The middle plot is the value of the distance over time (dob). In this example the optimal alignment is found at dob = 4, but there is no particular significance to <em>when</em> the optimum is found. The lower plot shows the <em>expected improvement</em> (ei) at each dob. It is lowest when the optimum has been found. For more details about what’s going on under the hood, see the <a href="https://arxiv.org/abs/1703.03373">Arxiv paper</a>.</p>
<p><img src="http://chemospec.org/posts/2020-03-04-NMR-Align-Pt3/P10_Y_Space.png" alt="Y Space" style="width:600px;"></p>
</section>
<section id="the-aligned-spectra" class="level2">
<h2 class="anchored" data-anchor-id="the-aligned-spectra">The Aligned Spectra</h2>
<p>Did this process work? This final plot shows that it did. Let’s be clear that the task here was not terribly hard: <code>MUD2</code> is an artificial example in which the shifts are pretty modest and global in nature. But still, it’s satisfying. I welcome everyone to give <code>hats_alignSpectra2D</code> a try and report any problems or suggestions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">mylvls <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">30</span>, <span class="at" style="color: #657422;">length.out =</span> <span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;">plotSpectra2D</span>(MUD2a, <span class="at" style="color: #657422;">which =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">6</span>), <span class="at" style="color: #657422;">showGrid =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb5-3">    <span class="at" style="color: #657422;">lvls =</span> <span class="fu" style="color: #4758AB;">LofL</span>(mylvls, <span class="dv" style="color: #AD0000;">2</span>),</span>
<span id="cb5-4">    <span class="at" style="color: #657422;">cols =</span> <span class="fu" style="color: #4758AB;">LofC</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"red"</span>, <span class="st" style="color: #20794D;">"black"</span>), <span class="dv" style="color: #AD0000;">2</span>, <span class="fu" style="color: #4758AB;">length</span>(mylvls), <span class="dv" style="color: #AD0000;">2</span>),</span>
<span id="cb5-5">  <span class="at" style="color: #657422;">main =</span> <span class="st" style="color: #20794D;">"Aligned MUD2 Spectra 1 &amp; 6"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-03-04-NMR-Align-Pt3/2020-03-04-NMR-Align-Pt3_files/figure-html/plotMUD2a-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>

<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2020,
  author = {Bryan Hanson},
  title = {Aligning {2D} {NMR} {Spectra} {Part} 3},
  date = {2020-03-04},
  url = {http://chemospec.org/posts/2020-03-04-NMR-Align-Pt3/2020-03-04-NMR-Align-Pt3.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2020" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2020. <span>“Aligning 2d NMR Spectra Part 3.”</span> March
4, 2020. <a href="http://chemospec.org/posts/2020-03-04-NMR-Align-Pt3/2020-03-04-NMR-Align-Pt3.html">http://chemospec.org/posts/2020-03-04-NMR-Align-Pt3/2020-03-04-NMR-Align-Pt3.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpec2D</category>
  <category>Alignment</category>
  <category>NMR</category>
  <guid>http://chemospec.org/posts/2020-03-04-NMR-Align-Pt3/2020-03-04-NMR-Align-Pt3.html</guid>
  <pubDate>Wed, 04 Mar 2020 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Aligning 2D NMR Spectra Part 2</title>
  <link>http://chemospec.org/posts/2020-03-02-NMR-Align-Pt2/2020-03-02-NMR-Align-Pt2.html</link>
  <description><![CDATA[ 



<p>This is Part 2 of a series on aligning 2D NMR, as implemented in the package <code>ChemoSpec2D</code>. <a href="https://chemospec.org/posts/2020-02-20-NMR-Align-Pt1/">Part 1</a> <a href="https://chemospec.org/posts/2020-03-04-NMR-Align-Pt3/">Part 3</a></p>
<section id="the-hats-pr-algorithm" class="level2">
<h2 class="anchored" data-anchor-id="the-hats-pr-algorithm">The HATS-PR Algorithm</h2>
<p>In Part 1 I briefly mentioned that we would be using the HATS-PR algorithm of Robinette <em>et al.</em> <span class="citation" data-cites="Robinette2011">(Robinette et al. 2011)</span>. I also discussed the choice of objective function which is used to report on the quality of the alignment. HATS-PR stands for “Hierachical Alignment of Two-Dimensional Spectra - Pattern Recognition”. In <code>ChemoSpec2D</code> the algorithm is implemented in the <code>hats_alignSpectra2D</code> function. Here are the major steps of the HATS-PR algorithm:</p>
<ol type="1">
<li>Contruct a <em>guide tree</em> using hierarchical clustering (HCA): compute the distance between the spectra, and use these distances to construct a dendrogram (the guide tree). As the name suggests, this tree is used to guide the alignment. The most similar spectra are aligned first, then the next most similar, and so on. In later rounds one applies the alignment procedure to sets of spectra that have already been aligned. In Robinette <em>et al.</em> they use the Pearson correlation coefficient as the distance measure. In <code>ChemoSpec2D</code> you can choose from a number of distance measures. I encourage you to experiment with the choices and see how they affect the alignment process for your data sets.</li>
<li>For each alignment event, check the alignment using the objective function, which recall is a distance measure. If the objective function is below the threshold, no alignment is needed (“below” assumes we are minimizing the objective function, but we might also be maximizing and hence trying to exceed the threshold). If alignment is necessary, move one of the spectra relative to the other <em>in some fashion</em>, checking each new postion with the objective function until the best alignment is found. This is an exercise in optimization.</li>
</ol>
</section>
<section id="finding-the-optimal-alignment" class="level2">
<h2 class="anchored" data-anchor-id="finding-the-optimal-alignment">Finding the Optimal Alignment</h2>
<p>The heart of the task is in the phrase <em>in some fashion</em>. At one extreme, one can imagine holding one spectrum fixed, and sliding the other spectrum left and right, up and down, over some range of values – essentially a grid of data points. At each position on the virtual grid, evaluate the objective function and keep track of the results. This will always find the answer, but such a brute force search will be very time-consuming and undesirable, especially if the search space is large. Alternatively, do something more efficient! Robinette <em>et al.</em> use a “simple gradient ascent” approach, but there is a vast literature on optimization strategies that we can consider. In <code>ChemoSpec2D</code> we use a machine learning approach (details next), but the function is written in such a way that one can add other optimization approaches seamlessly. <em>Anything</em> is better than a brute force approach.</p>
</section>
<section id="optimizing-with-mlrmbo" class="level2">
<h2 class="anchored" data-anchor-id="optimizing-with-mlrmbo">Optimizing with <code>mlrMBO</code></h2>
<p>The name <code>mlrMBO</code> comes from “machine learning with R model-based optimization.” <code>mlrMBO</code> is a powerful and flexible package for general purpose optimization, especially in the cases where the objective function is computationally expensive. There is a nice <a href="https://cran.r-project.org/web/packages/mlrMBO/vignettes/mlrMBO.html">introductory vignette</a>.</p>
<p>The basic steps in the model-based optimization using <code>mlrMBO</code> as implemented in <code>hats_alignSpectra2D</code> in package <code>ChemoSpec2D</code> are as follows:</p>
<ol type="1">
<li>Define your objective function. Our choice of the Euclidean distance was described in Part 1, along with other options. Most distance measures are not computationally expensive in terms of code. However, the huge number of data points in a typical 2D NMR spectrum bogs things down considerably. The approach taken in model-based optimation mitigates this to a great deal, since the objective function is only used for the initial response surface.</li>
<li>Generate an “initial design”, by which we mean a strategy to search the possible optimization space. <code>hats_alignSpectra2D</code> takes arguments <code>maxF1</code> and <code>maxF2</code> which define the space that will be considered as the two spectra are shifted relative to each other. The space potentially covered is <code>-maxF1</code> to <code>maxF1</code> and similarly for the F2 dimension. We take advantage of concepts from the design of experiments field, and use the <a href="https://cran.r-project.org/web/packages/lhs/vignettes/lhs_basics.html">lhs package</a> to generate a Latin Hypercube Sample of our space.</li>
<li>The sample points selected by <code>lhs</code> are evaluated using the objective function.</li>
<li>The values of the objective function at the sample points are used to create a surrogate model, essentially a response surface. The key here is that the surrogate model is computationally fast and will stand in for the actual objective function during the optimization. <code>mlrMBO</code> provides many <a href="https://mlr.mlr-org.com/articles/tutorial/integrated_learners.html">options</a> for the surrogate model. For <code>hats_alignSpectra2D</code> we use a response surface based on kriging, which is a means of interpolating values that was originally developed in the geospatial statistics world.</li>
<li>New samples points are suggested by the kriging algorithm, evaluated using the surrogate function, and used to update (improve) the model. Each iteration improves the quality of the model.</li>
<li>After reaching the designated threshold or the number of iterations specified, the best answer is returned. In this case the best answer is the optimal shift of one spectrum relative to the other, in each dimension.</li>
</ol>
</section>
<section id="other-details" class="level2">
<h2 class="anchored" data-anchor-id="other-details">Other Details</h2>
<p>In addition to the differences noted above, the implementation of HATS-PR in <code>ChemoSpec2D</code> carries out only <em>global</em> alignment. The algorithm described by Robinette <em>et al.</em> includes <em>local</em> alignment steps which I have not implemented. Local alignment is a possible future addition.</p>
</section>
<section id="configure-your-workspace" class="level2">
<h2 class="anchored" data-anchor-id="configure-your-workspace">Configure Your Workspace</h2>
<p>If you are going to actually execute the code here (as opposed to just reading along), you’ll need the development version of <code>ChemoSpec2D</code> (I improved some of the plots that track the alignment progress since the last CRAN release). And you’ll need certain packages. Here are the steps to install everything:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">chooseCRANmirror</span>() <span class="co" style="color: #5E5E5E;"># choose a CRAN mirror</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"remotes"</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"remotes"</span>)</span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;"># devel branch -- you need 0.4.156 or higher</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">install_github</span>(<span class="at" style="color: #657422;">repo =</span> <span class="st" style="color: #20794D;">"bryanhanson/ChemoSpec2D@devel"</span>)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"ChemoSpec2D"</span>)</span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;"># other packages needed</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"mlrMBO"</span>) <span class="co" style="color: #5E5E5E;"># will also install mlr, smoof, ParamHelpers</span></span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;">install.packages</span>(<span class="st" style="color: #20794D;">"lhs"</span>)</span></code></pre></div>
</div>
<p>Now you are ready for the main event! <a href="https://chemospec.org/2020/03/04/p10/">Part 3</a></p>



</section>

<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Robinette2011" class="csl-entry">
Robinette, Steven L., Ramadan Ajredini, Hasan Rasheed, Abdulrahman Zeinomar, Frank C. Schroeder, Aaron T. Dossey, and Arthur S. Edison. 2011. <span>“Hierarchical Alignment and Full Resolution Pattern Recognition of 2d NMR Spectra: Application to Nematode Chemical Ecology.”</span> <em>Analytical Chemistry</em> 83 (5): 1649–57. <a href="https://doi.org/10.1021/ac102724x">https://doi.org/10.1021/ac102724x</a>.
</div>
</div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2020,
  author = {Bryan Hanson},
  title = {Aligning {2D} {NMR} {Spectra} {Part} 2},
  date = {2020-03-02},
  url = {http://chemospec.org/posts/2020-03-02-NMR-Align-Pt2/2020-03-02-NMR-Align-Pt2.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2020" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2020. <span>“Aligning 2d NMR Spectra Part 2.”</span> March
2, 2020. <a href="http://chemospec.org/posts/2020-03-02-NMR-Align-Pt2/2020-03-02-NMR-Align-Pt2.html">http://chemospec.org/posts/2020-03-02-NMR-Align-Pt2/2020-03-02-NMR-Align-Pt2.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpec2D</category>
  <category>Alignment</category>
  <category>NMR</category>
  <guid>http://chemospec.org/posts/2020-03-02-NMR-Align-Pt2/2020-03-02-NMR-Align-Pt2.html</guid>
  <pubDate>Mon, 02 Mar 2020 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Aligning 2D NMR Spectra Part 1</title>
  <link>http://chemospec.org/posts/2020-02-20-NMR-Align-Pt1/2020-02-20-NMR-Align-Pt1.html</link>
  <description><![CDATA[ 



<p>In this series of posts, I’ll discuss the alignment process for the case of 2D NMR, as implemented in the package <code>ChemoSpec2D</code>. This is Part 1. <a href="https://chemospec.org/posts/2020-03-02-NMR-Align-Pt2/">Part 2</a>. <a href="https://chemospec.org/posts/2020-03-04-NMR-Align-Pt3/">Part 3</a>.</p>
<p><img src="http://chemospec.org/posts/2020-02-20-NMR-Align-Pt1/P8_Manual_Alignment.png" alt="Manual Alignment" style="width:400px;"></p>
<p>In one-dimensional <img src="https://latex.codecogs.com/png.latex?%5E1">H NMR spectroscopy, particularly biomolecular NMR, it is frequently necessary to align spectra before chemometric or metabolomics analysis. Poor alignment arises largely from pH and ionic strength induced shifts in aqueous samples. There are a number of published alignment algorithms for the one-dimensional case. The same issue presumably exists for 2D NMR spectra, but alignment options are limited. Instead, for 2D NMR people often work with tables of peaks. Creating these tables is an extra step and decisions about what to include may leave useful information behind.</p>
<p>No doubt you’ve compared two spectra by overlaying them on the screen, or printing them out, placing them on top of each other, and holding them up to the light. Conceptually, one can “align” spectra by a similar method: just slide one of the pieces of paper up/down and left/right until the spectra are optimally aligned. But how would one do this algorithmically? A literature searched turned up only a few publications on this topic. Among these, there was only one that I felt I could implement using the description in the paper: the HATS-PR algorithm of Robinette <em>et al.</em> <span class="citation" data-cites="Robinette2011">(Robinette et al. 2011)</span>.</p>
<p>We’ll discuss the HATS algorithm in a future post. As a first step however, we need to consider how we know when two spectra are properly aligned. Visual inspection won’t work, as we will encounter cases where peaks in one region align, but only at the expense of peaks in another region. How would we rank such cases? To automate this process, we need to use an <em>objective function</em>, basically some kind of equation, that we evaluate as we explore the alignment space. A simple but effective option is to compute the distance between the two spectra. This is done by concatenating each row of the 2D spectra to give a long vector of intensities. The distance between these vectors can then be computed using any of the standard distance definitions. Let’s illustrate, starting by taking a look at some mis-aligned data. <code>ChemoSpec2D</code> contains a mis-aligned data set, <code>MUD2</code>, for just this purpose. Here are two spectra from <code>MUD2</code>; note we are using the new convenience functions <code>LofC</code> and <code>LofL</code> to make it easy to overlay the spectra.</p>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(<span class="st" style="color: #20794D;">"ChemoSpec2D"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Loading required package: ChemoSpecUtils</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>
As of version 6, ChemoSpec2D offers new graphics output options</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>
Functions plotScores and plotScree will work with the new options</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>For details, please see ?GraphicsOptions</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>
The ChemoSpec graphics option is set to 'ggplot2'</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>To change it, do
    options(ChemoSpecGraphics = 'option'),
    where 'option' is one of 'base' or 'ggplot2' or'plotly'.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">data</span>(MUD2)</span>
<span id="cb8-2">mylvls <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">30</span>, <span class="at" style="color: #657422;">length.out =</span> <span class="dv" style="color: #AD0000;">10</span>)</span>
<span id="cb8-3"><span class="fu" style="color: #4758AB;">plotSpectra2D</span>(MUD2, <span class="at" style="color: #657422;">which =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>, <span class="dv" style="color: #AD0000;">6</span>), <span class="at" style="color: #657422;">showGrid =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb8-4">  <span class="at" style="color: #657422;">lvls =</span> <span class="fu" style="color: #4758AB;">LofL</span>(mylvls, <span class="dv" style="color: #AD0000;">2</span>),</span>
<span id="cb8-5">  <span class="at" style="color: #657422;">cols =</span> <span class="fu" style="color: #4758AB;">LofC</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"red"</span>, <span class="st" style="color: #20794D;">"black"</span>), <span class="dv" style="color: #AD0000;">2</span>, <span class="fu" style="color: #4758AB;">length</span>(mylvls), <span class="dv" style="color: #AD0000;">2</span>),</span>
<span id="cb8-6">  <span class="at" style="color: #657422;">main =</span> <span class="st" style="color: #20794D;">"MUD2 Spectra 1 &amp; 6"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-02-20-NMR-Align-Pt1/2020-02-20-NMR-Align-Pt1_files/figure-html/MUD2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The function <code>sampleDist</code> allows us to compute the distance between every pair of spectra in the <code>MUD2</code> data set, and present the results as a heat map. Here are the results using cosine as the distance measure.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1">cos_dist <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">sampleDist</span>(MUD2, <span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"cosine"</span>,</span>
<span id="cb9-2">  <span class="at" style="color: #657422;">main =</span> <span class="st" style="color: #20794D;">"Cosine Distance"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-02-20-NMR-Align-Pt1/2020-02-20-NMR-Align-Pt1_files/figure-html/cosine-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The actual numerical values are in <code>cos_dist</code>, a matrix. Looking at the heatmap, there are some modest differences among the spectra. However, if one looks at the scale, cosine distances are only defined on [-1 … 1]. While the cosine distance is popular in many spectroscopic contexts, it’s not the best objective function for our purpose because there is little absolute difference between -1 and 1 (and for <code>MUD2</code> the absolute differences are even smaller, as the range is only 0, 0.99). This limited range affects the alignment process in a subtle way that we won’t cover here (alignment is still successful, however).</p>
<p>Let’s consider instead the Euclidean distance.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1">eu_dist <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">sampleDist</span>(MUD2, <span class="at" style="color: #657422;">method =</span> <span class="st" style="color: #20794D;">"euclidean"</span>,</span>
<span id="cb10-2">  <span class="at" style="color: #657422;">main =</span> <span class="st" style="color: #20794D;">"Euclidean Distance"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2020-02-20-NMR-Align-Pt1/2020-02-20-NMR-Align-Pt1_files/figure-html/euclid-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>It turns of that the Euclidean distance gives a wider span of distances, which will serve us well in the next steps. Here, the range is roughly 80, 150. Note that in this plot the distance between identical spectra is zero, plotted as a white squares along the diagonal. When we used cosine as the distance, identical spectra were perfectly correlated and hence the diagonal in that plot was red.</p>
<p>In the next post I’ll discuss the general flow of the HATS algorithm, and how to carry it out using <code>ChemoSpec2D</code>.</p>




<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Robinette2011" class="csl-entry">
Robinette, Steven L., Ramadan Ajredini, Hasan Rasheed, Abdulrahman Zeinomar, Frank C. Schroeder, Aaron T. Dossey, and Arthur S. Edison. 2011. <span>“Hierarchical Alignment and Full Resolution Pattern Recognition of 2d NMR Spectra: Application to Nematode Chemical Ecology.”</span> <em>Analytical Chemistry</em> 83 (5): 1649–57. <a href="https://doi.org/10.1021/ac102724x">https://doi.org/10.1021/ac102724x</a>.
</div>
</div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2020,
  author = {Bryan Hanson},
  title = {Aligning {2D} {NMR} {Spectra} {Part} 1},
  date = {2020-02-20},
  url = {http://chemospec.org/posts/2020-02-20-NMR-Align-Pt1/2020-02-20-NMR-Align-Pt1.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2020" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2020. <span>“Aligning 2d NMR Spectra Part 1.”</span>
February 20, 2020. <a href="http://chemospec.org/posts/2020-02-20-NMR-Align-Pt1/2020-02-20-NMR-Align-Pt1.html">http://chemospec.org/posts/2020-02-20-NMR-Align-Pt1/2020-02-20-NMR-Align-Pt1.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpec</category>
  <category>Alignment</category>
  <category>NMR</category>
  <guid>http://chemospec.org/posts/2020-02-20-NMR-Align-Pt1/2020-02-20-NMR-Align-Pt1.html</guid>
  <pubDate>Thu, 20 Feb 2020 07:00:00 GMT</pubDate>
</item>
<item>
  <title>ChemoSpec2D Update</title>
  <link>http://chemospec.org/posts/2020-02-19-CS2D-update/2020-02-19-CS2D-update.html</link>
  <description><![CDATA[ 



<p>I’m pleased to announce that <code>ChemoSpec2D</code>, a package for exploratory data analysis of 2D NMR spectra, has been updated on CRAN and is coming to a mirror near you. Barring user reports to the contrary, I feel like the package has pretty much stabilized and is pretty robust. The main area for future expansion is to add additional data import routines. Please feel free to ask about your specific use case!</p>
<p>The most noteworthy user-facing improvements are:</p>
<ul>
<li>Function <code>import2DSpectra</code> can now handle JCAMP-DX files, Bruker files exported via the TopSpin “totxt” command, and JEOL spectra exported as “generic ascii”. The design allows additional formats to be added if I have test files to play with (hint hint).</li>
<li><code>files2Spectra2DObject</code> gains a new argument <code>allowSloppy</code>. This <em>experimental</em> feature will allow one to import data sets that do not have the same dimensions. The intent here is to deal with data sets where the number of points in each dimension is similar but not identical. Additional functions will be needed to handle this kind of data. See the documentation for details.</li>
<li><code>files2Spectra2DObject</code> has also been modified to allow arguments to be passed to <code>list.files</code> and <code>readJDX</code>. This means for instance you can specify a path other than the current working directory, and have the function recurse through sub-directories. This brings <code>files2Spectra2DObject</code> into line with <code>ChemoSpec::files2SpectraObject</code>.</li>
<li>Function <code>hats_alignSpectra2D</code> gains new arguments <code>dist_method</code> and <code>maximize</code> which allows the user to pass their choice of distance measure through to the objective function used to evaluate the overlap of the spectra. This greatly improves the quality of the alignment.</li>
<li>Plotting is simplified with the addition of two new functions to create Lists of Colors, <code>LofC</code> and Lists of Levels, <code>LofL</code>.</li>
<li>The basic color scheme for contours was updated to use a perceptually consistent low/blue -&gt; high/red scheme, based on the principles in the <code>colorspace</code> package. The color-handling infrastructure was also changed to allow easy introduction of different color schemes in the future, though the user cannot yet make changes on the fly.</li>
</ul>
<p>In addition, a number of small bugs and annoyances were taken care of, arguments tweaked and documentation improved and expanded. Several functions were rebuilt to make them more robust.</p>
<p>Please see the package <a href="https://bryanhanson.github.io/ChemoSpec2D/">website</a> for the full changelog and all documentation.</p>



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="../..//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2020,
  author = {Bryan Hanson},
  title = {ChemoSpec2D {Update}},
  date = {2020-02-19},
  url = {http://chemospec.org/posts/2020-02-19-CS2D-update/2020-02-19-CS2D-update.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2020" class="csl-entry quarto-appendix-citeas">
Bryan Hanson. 2020. <span>“ChemoSpec2D Update.”</span> February 19,
2020. <a href="http://chemospec.org/posts/2020-02-19-CS2D-update/2020-02-19-CS2D-update.html">http://chemospec.org/posts/2020-02-19-CS2D-update/2020-02-19-CS2D-update.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpec2D</category>
  <guid>http://chemospec.org/posts/2020-02-19-CS2D-update/2020-02-19-CS2D-update.html</guid>
  <pubDate>Wed, 19 Feb 2020 07:00:00 GMT</pubDate>
</item>
</channel>
</rss>
