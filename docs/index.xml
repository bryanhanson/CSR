<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Chemometrics and Spectroscopy Using R</title>
<link>http://chemospec.org/index.html</link>
<atom:link href="http://chemospec.org/index.xml" rel="self" type="application/rss+xml"/>
<description>Applying chemometrics to spectroscopy using R</description>
<generator>quarto-99.9.9</generator>
<lastBuildDate>Wed, 23 Aug 2023 07:00:00 GMT</lastBuildDate>
<item>
  <title>JEOL’s Delta Now Includes ChemoSpec</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2023-08-23-CS-Delta/CS-Delta.html</link>
  <description><![CDATA[ 



<p>Over on Twitter I caught news of a new application note from JEOL: Their Delta software for NMR now contains an interface to my R package <a href="https://bryanhanson.github.io/ChemoSpec/">ChemoSpec</a>. The application note is <a href="https://www.jeol.com/solutions/applications/details/nm220007.php">here</a> and gives a pretty complete overview of what they call the “chemometrics tool”. The JEOL software developers have added a number of short dialog boxes to access the various chemometric methods. The dialog boxes capture the arguments for each underlying function and then the full function call is assembled and passed to <a href="https://stat.ethz.ch/R-manual/R-devel/library/utils/html/Rscript.html">Rscript</a>, which is a command line version of R intended for embedded uses such as this one.</p>
<p>This is a good example of Free and Open Source Software (FOSS). ChemoSpec is licensed under <a href="https://www.gnu.org/licenses/gpl-3.0.html">GPL-3</a> which permits any reasonable use as long as there is attribution to the original authors.</p>
<p>Check out the first line of the “About Delta” box:</p>
<p><img src="http://chemospec.org/posts/2023-08-23-CS-Delta/Splash.png" class="img-fluid" style="width:80.0%"></p>



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2023,
  author = {Hanson, Bryan},
  title = {JEOL’s {Delta} {Now} {Includes} {ChemoSpec}},
  date = {2023-08-23},
  url = {http://chemospec.org/posts/2023-08-23-CS-Delta/CS-Delta.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2023" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2023. <span>“JEOL’s Delta Now Includes ChemoSpec.”</span>
August 23, 2023. <a href="http://chemospec.org/posts/2023-08-23-CS-Delta/CS-Delta.html">http://chemospec.org/posts/2023-08-23-CS-Delta/CS-Delta.html</a>.
</div></div></section></div> ]]></description>
  <category>NMR</category>
  <category>FOSS</category>
  <guid>http://chemospec.org/posts/2023-08-23-CS-Delta/CS-Delta.html</guid>
  <pubDate>Wed, 23 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>FOSS4Spectroscopy Update</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2023-08-15-F4S-Update/F4S-Update.html</link>
  <description><![CDATA[ 



<p>Yesterday I pushed a major update to the <a href="https://bryanhanson.github.io/FOSS4Spectroscopy/">FOSS for Spectroscopy</a> web site. Remember that this is a lightly curated and imperfect process; I have some scripts that automate the discovery of packages, but there is still a considerable amount of manual inspection and decision making. If you think I’ve missed a package, please let me know.</p>
<p>It’s been nearly a year, and there are a number of new entries. Let’s do a quick comparison of the results from November 2022 versus August 2023. Back in November 2022 there were 246 packages; nearly a year later there are 287. Figure&nbsp;1 shows a Venn diagram of the changes.</p>
<div id="fig-venn" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-08-15-F4S-Update/Venn.png" class="img-fluid figure-img" style="width:60.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;1: Venn diagram comparing the two sets of packages</figcaption>
</figure>
</div>
<section id="package-language" class="level2">
<h2 class="anchored" data-anchor-id="package-language">Package Language</h2>
<p>Software development in spectroscopy is clearly actively occurring in the Python ecosystem; R has stalled (see Table&nbsp;1). Interpretation of this observation is challenging. A few thoughts:</p>
<ul>
<li>One could claim that the R ecosystem for spectroscopy is mature and further development is naturally going to be limited.</li>
<li>The growing popularity of the Python language surely contributes significantly.</li>
<li>One motivation for people to write packages is to learn the language and the package delivery system. There’s nothing wrong with these motivations, however this leads to packages that largely overlap in their features.</li>
</ul>
<div class="cell">
<div class="cell-output-display">
<div id="tbl-lang" class="anchored">
<table quarto-disable-processing="true" class="table table-striped table-bordered" style="width: auto !important; margin-left: auto; margin-right: auto;"><caption>Table&nbsp;1:  <p>Package language, 2022 vs 2023.</p> </caption>
 <thead>
  <tr>
   <th style="text-align:left;"> language </th>
   <th style="text-align:right;"> Nov 2022 </th>
   <th style="text-align:right;"> Aug 2023 </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> Python </td>
   <td style="text-align:right;"> 162 </td>
   <td style="text-align:right;"> 198 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> R </td>
   <td style="text-align:right;"> 60 </td>
   <td style="text-align:right;"> 61 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> C++ </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 5 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Java </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 4 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Julia </td>
   <td style="text-align:right;"> 4 </td>
   <td style="text-align:right;"> 5 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> C </td>
   <td style="text-align:right;"> 2 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Qt </td>
   <td style="text-align:right;"> 2 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> C-shell </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> C# </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Fortran </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Go </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> html </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> JavaScript </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> TypeScript </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> XML </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 1 </td>
  </tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="package-focus" class="level2">
<h2 class="anchored" data-anchor-id="package-focus">Package Focus</h2>
<p>Table&nbsp;2 shows the change in package focus. Most categories grew modestly.</p>
<div class="cell">
<div class="cell-output-display">
<div id="tbl-focus" class="anchored">
<table quarto-disable-processing="true" class="table table-striped table-bordered" style="width: auto !important; margin-left: auto; margin-right: auto;"><caption>Table&nbsp;2:  <p>Package focus, 2022 vs 2023.</p> </caption>
 <thead>
  <tr>
   <th style="text-align:left;"> category </th>
   <th style="text-align:right;"> Nov 2022 </th>
   <th style="text-align:right;"> Aug 2023 </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;"> Any </td>
   <td style="text-align:right;"> 32 </td>
   <td style="text-align:right;"> 34 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Data Sharing </td>
   <td style="text-align:right;"> 33 </td>
   <td style="text-align:right;"> 41 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> EEM </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 3 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> EPR, ESR </td>
   <td style="text-align:right;"> 5 </td>
   <td style="text-align:right;"> 7 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> IR (all flavors) </td>
   <td style="text-align:right;"> 35 </td>
   <td style="text-align:right;"> 38 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Raman </td>
   <td style="text-align:right;"> 28 </td>
   <td style="text-align:right;"> 34 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> UV-Vis, UV, Vis </td>
   <td style="text-align:right;"> 19 </td>
   <td style="text-align:right;"> 20 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> LIBS </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 5 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Muon </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 0 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> PES </td>
   <td style="text-align:right;"> 1 </td>
   <td style="text-align:right;"> 2 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> XRF, XAS </td>
   <td style="text-align:right;"> 10 </td>
   <td style="text-align:right;"> 15 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> NMR </td>
   <td style="text-align:right;"> 87 </td>
   <td style="text-align:right;"> 97 </td>
  </tr>
  <tr>
   <td style="text-align:left;"> Time Series </td>
   <td style="text-align:right;"> 3 </td>
   <td style="text-align:right;"> 3 </td>
  </tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="personal-perspective" class="level2">
<h2 class="anchored" data-anchor-id="personal-perspective">Personal Perspective</h2>
<p>I’ve curated this site for several years now. One thing that is clear is that there is a lot of duplication of effort and features. I mentioned above a few reasons for this, but at some point it makes more sense to add to an existing package than to write one from scratch. However, this can only happen if people look around for existing software first. That of course is one purpose of the <a href="https://bryanhanson.github.io/FOSS4Spectroscopy/">FOSS for Spectroscopy</a> web site.</p>
<p>As I look at it,</p>
<ul>
<li>One-dimensional spectroscopic techniques produce collections of x,y data, usually spectra<sup>1</sup>, and can thus be stored in a matrix. <em>In terms of organization there’s nothing different between an IR spectrum and a UV-Vis spectrum.</em></li>
<li>Two-dimensional techniques produce data that can be stored in one of two ways:
<ul>
<li>One spectrum (or one wavelength) can be stored as matrix, so a set of spectra is a stack of matrices (termed an array in some languages). Think of 2D NMR spectra: one element of the stack is a single 2D spectrum.</li>
<li>Alternatively, individual spectra can be stored in a matrix and an additional data structure provides a key to how each spectrum relates to the others. Think of a Raman image: spectra are collected over a set of x,y locations.</li>
</ul></li>
</ul>
<p>This design decision is the core of building a package. Once you have decided on a structure:</p>
<ul>
<li>You need import methods, these are always tedious to write.
<ul>
<li>Broadly accepted formats, like JCAMP-DX or plain old csv.</li>
<li>Manufacturer specific formats, some of which may be poorly documented.</li>
</ul></li>
<li>You need processing methods.
<ul>
<li>Widely used methods, like normalization and smoothing.</li>
<li>Technique specific methods, such as zero-filling.</li>
</ul></li>
<li>You need analysis methods.
<ul>
<li>Common techniques like PCA.</li>
<li>Analysis unique to a specific technique.</li>
</ul></li>
<li>You need visualization methods.</li>
</ul>
<p>In an ideal world, a data storage structure is chosen and everything else can be built later, quickly at first and then more slowly. The reality however is that people keep reinventing most of the wheel. I suppose this is not too different from people inventing entirely new computer languages…</p>


</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><aside id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I say “usually spectra” because for some instruments, depending upon the goal of the package, one may store raw data that must be transformed in a separate step. The best example is raw time-domain NMR data which must be Fourier transformed into frequency-domain spectra before analysis.↩︎</p></li>
</ol>
</aside><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2023,
  author = {Hanson, Bryan},
  title = {FOSS4Spectroscopy {Update}},
  date = {2023-08-15},
  url = {http://chemospec.org/posts/2023-08-15-F4S-Update/F4S-Update.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2023" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2023. <span>“FOSS4Spectroscopy Update.”</span> August 15,
2023. <a href="http://chemospec.org/posts/2023-08-15-F4S-Update/F4S-Update.html">http://chemospec.org/posts/2023-08-15-F4S-Update/F4S-Update.html</a>.
</div></div></section></div> ]]></description>
  <category>FOSS</category>
  <guid>http://chemospec.org/posts/2023-08-15-F4S-Update/F4S-Update.html</guid>
  <pubDate>Tue, 15 Aug 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Earth’s Field NMR</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2023-07-19-EF-NMR-1/EF-NMR-1.html</link>
  <description><![CDATA[ 



<section id="tldr" class="level2">
<h2 class="anchored" data-anchor-id="tldr">TL;DR</h2>
<ul>
<li>In EF-NMR the line widths are extremely narrow but there is no chemical shift dispersion.</li>
<li>We can observe heteronuclear couplings in EF-NMR as they are field-invariant.</li>
<li>In EF-NMR the population of the two energy states is essentially equal, eliminating any signal. We can get around this with pre-polarization.</li>
<li>The resonance frequency of <img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B1%7DH%7D"> NMR in EF is in the audio range, greatly simplifying the electronics.</li>
</ul>
<hr>
<p>Let’s take a closer look from first principles what kinds of information one can glean from EF-NMR. We’ll restrict our discussion to spin <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B2%7D"> nuclei with ~100% abundance, like <img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B1%7DH%7D">, <img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B31%7DP%7D"> or <img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B19%7DF%7D"> – you’ll see why soon enough. Table&nbsp;1 gives some relevant physical parameters for these nuclei.</p>
<div id="tbl-params" class="anchored">
<table class="table">
<caption>Table&nbsp;1: Important NMR parameters for ~100% abundant spin <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B2%7D"> nuclei. The units of <img src="https://latex.codecogs.com/png.latex?%5Cgamma"> are <img src="https://latex.codecogs.com/png.latex?10%5E7"> rad <img src="https://latex.codecogs.com/png.latex?T%5E%7B-1%7D"> <img src="https://latex.codecogs.com/png.latex?s%5E%7B-1%7D">. Larmor frequency is relative in MHz.</caption>
<thead>
<tr class="header">
<th>Nuclei</th>
<th style="text-align: right;">Gyromagnetic ratio <img src="https://latex.codecogs.com/png.latex?%5Cgamma"></th>
<th style="text-align: right;">Larmor Freq.</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B1%7DH%7D"></td>
<td style="text-align: right;">26.7522</td>
<td style="text-align: right;">100</td>
</tr>
<tr class="even">
<td><img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B19%7DF%7D"></td>
<td style="text-align: right;">25.1815</td>
<td style="text-align: right;">94</td>
</tr>
<tr class="odd">
<td><img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B31%7DP%7D"></td>
<td style="text-align: right;">10.8394</td>
<td style="text-align: right;">40.5</td>
</tr>
</tbody>
</table>
</div>
<p>Excellent general references on NMR theory are Friebolin <span class="citation" data-cites="Friebolin2011">(Friebolin 2011)</span> and Claridge <span class="citation" data-cites="Claridge2016">(Claridge 2016)</span>.</p>
</section>
<section id="line-widths-are-very-narrow" class="level2">
<h2 class="anchored" data-anchor-id="line-widths-are-very-narrow">Line Widths are Very Narrow</h2>
<p>The line width of an NMR signal is primarily dependent on the homogeneity of the <img src="https://latex.codecogs.com/png.latex?B_o"> field, which in the case of earth’s field is very good. <span class="citation" data-cites="Appelt2006">Appelt et al. (2006)</span> state that when observations are made &gt;100 meters from buildings and ferrous structures<sup>1</sup> the homogeneity of the earth’s magnetic field for small sample volumes is in the range of <img src="https://latex.codecogs.com/png.latex?%5CDelta%20B/B%20%3C%2010%5E%7B-6%7D">. They further state that when <img src="https://latex.codecogs.com/png.latex?T_1%20%5Csim%20T_2%20%3E%203"> seconds line widths will be less than 0.1 Hz.<sup>2</sup> This all sounds very promising: narrow lines imply good separation between peaks.</p>
</section>
<section id="no-chemical-shift-information" class="level2">
<h2 class="anchored" data-anchor-id="no-chemical-shift-information">No Chemical Shift Information</h2>
<p>One of the characteristics of high-field NMR which makes it so useful is the dispersion of chemical shifts as a function of structure. Unfortunately, EF-NMR has effectively zero chemical shift dispersion. The equation for computing chemical shift, <img src="https://latex.codecogs.com/png.latex?%5Cdelta">, is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cdelta%20=%20%5Cfrac%7B%5Cnu_%7Bsample%7D%20-%20%5Cnu_%7Breference%7D%7D%7B%5Cnu_%7BB_o%7D%7D%0A"></p>
<p>where the units are:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Appm%20=%20%5Cfrac%7BHz%7D%7BMHz%7D%0A"></p>
<p>since <img src="https://latex.codecogs.com/png.latex?%5Cdelta"> is a field strength independent quantity. Taking <img src="https://latex.codecogs.com/png.latex?%5Cnu_%7Breference%7D"> to be zero, e.g.&nbsp;TMS added to the sample, we can rearrange the equation to get <img src="https://latex.codecogs.com/png.latex?%5Cnu_%7Bsample%7D">. Consider the compound <img src="https://latex.codecogs.com/png.latex?%5Cce%7BCH3Br%7D"> whose methyl group has a chemical shift of 2.63 ppm. Using an earth’s field <img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B1%7DH%7D"> Larmor frequency of 19.1 KHz, we can compute the shift of <img src="https://latex.codecogs.com/png.latex?%5Cce%7BCH3Br%7D"> in Hz as 0.0191 Hz. This is an extremely small value, smaller than the typical line width in earth’s field (so the promise of narrow line widths is not going to save us).</p>
<p>For further comparison, we can do the same calculation for <img src="https://latex.codecogs.com/png.latex?%5Cce%7BCH2Br2%7D"> which has a shift of 4.90 ppm. The result is exactly the same, 0.0191 Hz. We can see that these two compounds with differing numbers of halogens, which would be trivial to distinguish with a low field bench-top instrument operating at 80 MHz, are indistinguishable in earth’s field. This is due to the very small value of earth’s magnetic field.</p>
</section>
<section id="heteronuclear-couplings" class="level2">
<h2 class="anchored" data-anchor-id="heteronuclear-couplings">Heteronuclear Couplings</h2>
<p>While the chemical shift dispersion in earth’s field is clearly nil, heteronuclear J couplings are readily observed due to their greater magnitude, up to about 200 Hz. <span class="citation" data-cites="Appelt2006">Appelt et al. (2006)</span> gives a number of interesting examples involving <img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B1%7DH%7D">, <img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B19%7DF%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B29%7DSi%7D"> containing compounds.</p>
</section>
<section id="populations-of-quantum-states" class="level2">
<h2 class="anchored" data-anchor-id="populations-of-quantum-states">Populations of Quantum States</h2>
<p>Basic NMR theory tells us that the energy difference between the two quantum states for a spin <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B1%7D%7B2%7D"> nucleus is proportional to the field strength <img src="https://latex.codecogs.com/png.latex?B_o">:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CDelta%20E%20=%20%5Cgamma%20%5Chbar%20B_o%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Chbar"> is <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bh%7D%7B2%5Cpi%7D">. A plot for <img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B1%7DH%7D"> is shown in Figure&nbsp;1; the right-most point corresponds to a 1,000 MHz instrument. Clearly as <img src="https://latex.codecogs.com/png.latex?B_o"> goes to zero the <img src="https://latex.codecogs.com/png.latex?%5CDelta%20E"> goes to zero in a simple linear fashion.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-DeltaE" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-19-EF-NMR-1/EF-NMR-1_files/figure-html/fig-DeltaE-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Figure&nbsp;1: <img src="https://latex.codecogs.com/png.latex?%5CDelta">E as a function of field strength <img src="https://latex.codecogs.com/png.latex?B_o"></figcaption>
</figure>
</div>
</div>
</div>
<p>We can then relate the number of nuclei in the upper energy state, <img src="https://latex.codecogs.com/png.latex?N_%7B%5Cbeta%7D">, to that in the lower energy state, <img src="https://latex.codecogs.com/png.latex?N_%7B%5Calpha%7D">, at thermal equilibrium as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7BN_%7B%5Cbeta%7D%7D%7BN_%7B%5Calpha%7D%7D%20=%20e%5E%7B-%20%5CDelta%20E/kT%7D%20%5Capprox%201%20-%20%5Cfrac%7B%5CDelta%20E%7D%7BkT%7D%20=%201-%20%5Cfrac%7B%5Cgamma%20%5Chbar%20B_o%7D%7BkT%7D%0A"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?k"> is the Boltzman constant and <img src="https://latex.codecogs.com/png.latex?T"> is the temperature in Kelvin. The ratio of population states is nearly equal for any value of <img src="https://latex.codecogs.com/png.latex?B_o"> but of course gets even worse as <img src="https://latex.codecogs.com/png.latex?B_o"> decreases. This is the reason for the low overall sensitivity of NMR as an analytical technique. We can compute the ratio for <img src="https://latex.codecogs.com/png.latex?%5Cce%7B%5E%7B1%7DH%7D"> at room temperature; we’ll compare the value for earth’s field to those of a 100 and 1,000 MHz instruments:</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>      45 uT (Earth)    2.35 T (100 MHz) 23.49 T (1,000 MHz) 
     1.000000000000      0.999999999998      0.999999999982 </code></pre>
</div>
</div>
<p>As you can see, in earth’s field there is basically no difference in the two population states, meaning there is no signal to observe. Clearly a problem!</p>
<p>If all the nuclei were in <img src="https://latex.codecogs.com/png.latex?N_%7B%5Calpha%7D"> we could measure the energy required to bump them up to <img src="https://latex.codecogs.com/png.latex?N_%7B%5Cbeta%7D">, or more commonly, bump them up and then watch the energy given off as equilibrium returns. Unfortunately, the signal produced is proportional to <img src="https://latex.codecogs.com/png.latex?N_%7B%5Calpha%7D%20-%20N_%7B%5Cbeta%7D">, which is effectively zero in earth’s field. At the same time however, the more spins we have, the higher the signal will be. More spins total in the detection coil sweet spot will be helpful, but there are other factors mitigating against making large coils to accommodate large samples. One way around this is to use signal averaging.</p>
</section>
<section id="pre-polarization" class="level2">
<h2 class="anchored" data-anchor-id="pre-polarization">Pre-Polarization</h2>
<p>In the case of earth’s field NMR, the usual way around this problem of very limited signal is to pre-polarize the sample.<sup>3</sup> This basically involves subjecting the sample to a fairly high magnetic field for a brief period before measuring the any signals. This pre-polarization field forces more of the <img src="https://latex.codecogs.com/png.latex?N_%7B%5Cbeta%7D"> nuclei to assume the lower energy <img src="https://latex.codecogs.com/png.latex?N_%7B%5Calpha%7D"> state, thus increasing <img src="https://latex.codecogs.com/png.latex?N_%7B%5Calpha%7D%20-%20N_%7B%5Cbeta%7D"> which means there is a signal to be observed. Mohorič has an excellent but technical discussion of the details of this process <span class="citation" data-cites="Mohoric2009">(Mohorič and Stepišnick 2009)</span>.</p>
</section>
<section id="ef-nmr-signals-are-in-the-audio-range" class="level2">
<h2 class="anchored" data-anchor-id="ef-nmr-signals-are-in-the-audio-range">EF-NMR Signals are in the Audio Range</h2>
<p>What is the Larmor (resonance) frequency in earth’s field? Earth’s magnetic field <a href="https://en.wikipedia.org/wiki/Earth%27s_magnetic_field">varies</a> from about 25 to 65 <img src="https://latex.codecogs.com/png.latex?%5Cmu">T; we’ll use an intermediate value of 45 <img src="https://latex.codecogs.com/png.latex?%5Cmu">T for our calculations. The Larmor frequency is given by the equation:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cnu_%7BL%7D%20=%20%5Clvert%5Cfrac%7B%5Cgamma%7D%7B2%5Cpi%7D%5Crvert%20B_o%0A"></p>
<p>Notice there is a simple linear relation between <img src="https://latex.codecogs.com/png.latex?%5Cnu_%7BL%7D"> and <img src="https://latex.codecogs.com/png.latex?B_o">.<sup>4</sup> If we plug in values for our nuclei we get the following values in Hz:</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>       1H       19F       31P 
19159.852 18034.921  7763.148 </code></pre>
</div>
</div>
<p>What we have shown here is that for EF-NMR, resonance frequencies are in the <a href="https://en.wikipedia.org/wiki/Audio_frequency">audio</a> (20 - 20,000 Hz) and lower <a href="https://en.wikipedia.org/wiki/Radio_frequency">radio</a> (20,000 Hz +) frequency range. Why is this important? It greatly simplifies signal detection because audio receivers are essentially radios, and the electronics for working in this frequency range are extremely well worked out, and not expensive to buy or build.</p>
</section>
<section id="historical-note" class="level2">
<h2 class="anchored" data-anchor-id="historical-note">Historical Note</h2>
<p>The first earth’s field NMR experiment was apparently conducted by Martin Packard and Russell Varian while at Varian Associates <span class="citation" data-cites="Packard1954">(Packard and Varian 1954)</span>. Varian Associates was of course a major instrument player, including NMR, and for a long time marketed their instruments largely toward colleges. <sup>5</sup></p>



</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Appelt2006" class="csl-entry">
Appelt, Stephan, Holger Kühn, F. Wolfgang Häsing, and Bernhard Blümich. 2006. <span>“Chemical Analysis by Ultrahigh-Resolution Nuclear Magnetic Resonance in the Earth’s Magnetic Field.”</span> <em>Nature Physics</em> 2. <a href="https://doi.org/10.1038/nphys211">https://doi.org/10.1038/nphys211</a>.
</div>
<div id="ref-Claridge2016" class="csl-entry">
Claridge, Timothy D. W. 2016. <em>High-Resolution NMR Techniques in Organic Chemistry</em>. Elsevier.
</div>
<div id="ref-Friebolin2011" class="csl-entry">
Friebolin, Horst. 2011. <em>Basic One- and Two-Dimensional NMR Spectroscopy</em>. Wiley-VCH.
</div>
<div id="ref-Mohoric2009" class="csl-entry">
Mohorič, Aleš, and Janez Stepišnick. 2009. <span>“NMR in the Earth’s Magnetic Field.”</span> <em>Progress in Nuclear Magnetic Resonance Spectroscopy</em> 54: 166–82. <a href="https://doi.org/10.1016/j.pnmrs.2008.07.002">https://doi.org/10.1016/j.pnmrs.2008.07.002</a>.
</div>
<div id="ref-Packard1954" class="csl-entry">
Packard, Martin, and Russell Varian. 1954. <span>“Free Nuclear Induction in the Earth’s Magnetic Field.”</span> <em>Physical Review</em> 93: 939.
</div>
</div></section><aside id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Keep in mind that buried utilities made of iron or carrying electrical current can interfere.↩︎</p></li>
<li id="fn2"><p><img src="https://latex.codecogs.com/png.latex?T_1"> is the relaxation time for magnetization aligned with the <img src="https://latex.codecogs.com/png.latex?B_o"> axis, which corresponds to the <img src="https://latex.codecogs.com/png.latex?z"> axis. This is the relaxation time that affects the ability to pulse quickly. It’s also called the spin-lattice relaxation time. <img src="https://latex.codecogs.com/png.latex?T_2"> is the relaxation time corresponding to magnetization in the <img src="https://latex.codecogs.com/png.latex?x,y"> plane, and is also known as the spin-spin relaxation time. <img src="https://latex.codecogs.com/png.latex?T_2"> is largely determined by magnetic field inhomogeneity and the line width at half peak height is <img src="https://latex.codecogs.com/png.latex?%5CDelta%20%5Cnu_%7B1/2%7D%20=%20%5Cgamma%20%5CDelta%20B_o%20/2">. <img src="https://latex.codecogs.com/png.latex?T_1%20%5Cge%20T_2">. See Friebolin chapter 7 for a detailed discussion.↩︎</p></li>
<li id="fn3"><p>In fact pre-polarizing or polarizing the sample is now en-vogue for higher field instruments as well, in the form of DNP, SABRE etc.↩︎</p></li>
<li id="fn4"><p>The gyromagnetic ratio can be negative, hence the absolute value is taken here.↩︎</p></li>
<li id="fn5"><p>Martin Packard is apparently <a href="https://hsm.stackexchange.com/q/15580/18707">unrelated</a> to David Packard, one of the founders of HP.↩︎</p></li>
</ol>
</aside><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2023,
  author = {Hanson, Bryan},
  title = {Earth’s {Field} {NMR}},
  date = {2023-07-26},
  url = {http://chemospec.org/posts/2023-07-19-EF-NMR-1/EF-NMR-1.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2023" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2023. <span>“Earth’s Field NMR.”</span> July 26, 2023. <a href="http://chemospec.org/posts/2023-07-19-EF-NMR-1/EF-NMR-1.html">http://chemospec.org/posts/2023-07-19-EF-NMR-1/EF-NMR-1.html</a>.
</div></div></section></div> ]]></description>
  <category>NMR</category>
  <category>EF-NMR</category>
  <guid>http://chemospec.org/posts/2023-07-19-EF-NMR-1/EF-NMR-1.html</guid>
  <pubDate>Wed, 26 Jul 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Home Built Photometer</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2023-07-16-Photometer/Photometer.html</link>
  <description><![CDATA[ 



<p>Way back in 2014, I ordered the parts and started to build a photometer according to the plans laid out by <span class="citation" data-cites="McClain2014">McClain (2014)</span>. I didn’t get very far, it was a busy time. Well, I have finally completed the project!</p>
<p>A number of simple designs for photometers and spectrometers have been published. What drew me to McClain’s approach is that his goal is to teach some basic electronics relevant to instrument design, which is something I have wanted to learn for sometime (apparently since 2014, though actually I think this goes back to watching my father build a Heath Kit stereo receiver which used <em>tubes</em>). Further, McClain starts with a very simple design, and then adds circuit modules to improve the design. Everything is laid out logically and is easy to follow. At each step there is an opportunity to go further to understand how the circuit actually works in detail.</p>
<p>In this post I’ll describe the project at various stages. All the electronics are McClain’s design, but instead of McClain’s cuvette holder I used the design of Kvittingen (<span class="citation" data-cites="Kvittingen2017">Kvittingen et al. (2017)</span>) which uses LEGO bricks as a sample holder and can accommodate an additional detector for fluorescence measurements.</p>
<p>This design is a photometer, and not a spectrophotometer, because only one wavelength at a time can be measured. The source LED must have an emission spectrum overlapping with the <img src="https://latex.codecogs.com/png.latex?%5Clambda_%7Bmax%7D"> of the compound to be measured; LEDs are available which cover pieces of the whole visible spectrum so it’s pretty easy to swap for a different wavelength range. The detector photodiode (a type of LED, working in reverse) responds over a broad wavelength range, though with greatly varying efficiency. If one wants to measure fluorescence, the photodiode is moved to the 90<img src="https://latex.codecogs.com/png.latex?%5E%7B%5Ccirc%7D"> position.<sup>1</sup></p>
<p>A couple of important notes:</p>
<ul>
<li>The supplementary material to McClain’s article is where everything is covered in detail.</li>
<li>A membership to <a href="https://www.circuitlab.com">CircuitLab</a> was really helpful as it allowed me to simulate circuits and change values of components to get a better sense of how things work in detail (as you will see).</li>
<li>I was hoping to get by without an oscilloscope, but ultimately I needed one for troubleshooting. It turned out to really advance my understanding of the circuits. I purchased a <a href="https://www.picotech.com/oscilloscope/2000/picoscope-2000-overview">PicoScope 2204A</a> which along with the software turns your computer into a basic oscilloscope. Strongly recommended, it’s a very nice product!</li>
</ul>
<section id="version-1-dc-power-supply-for-the-led" class="level2">
<h2 class="anchored" data-anchor-id="version-1-dc-power-supply-for-the-led">Version 1: DC Power Supply for the LED</h2>
<p>In this version a standard “green” LED (maximum emission at 523 nm) is used as the light source and has the simplest possible power supply. As built, the system provides a current of about 26 mA to the LED. The data sheet recommends 30 mA max.</p>
<p>The detector in this version is a photodiode linked to a TIA, a transimpedance amplifier. This is an current to voltage (I to V) converter, and something similar can be used in any instrument where a detector generates a current. Figure&nbsp;1 shows the circuit.</p>
<p>The main deviation from McClain’s design is that R2 needed to be set to 3M <img src="https://latex.codecogs.com/png.latex?%5Cohm"> in order to reach about 1V on the output. McClain gives a range of 100K to 1M. As the value of this resistor goes up, the output voltage goes up due to increasing amplification. This change is likely necessary as the photodiode in use here is a bit different than McClain specified. After some experimentation, the current on I1 (which replicates the current produced by the photodiode in the simulation) was set to 1/10,000 of the value of the current of D1, based upon currents observed when isolating D2 from the rest of the circuit.</p>
<p>Monitoring the current and voltage across D2 as built and warmed up, the values were about 0.3 <img src="https://latex.codecogs.com/png.latex?%5Cmu">A and 0.23 V; if the LEGO holding D1 was moved immediately adjacent to that holding D2 these numbers were 0.7 <img src="https://latex.codecogs.com/png.latex?%5Cmu">A and 0.26 V. These readings support the discussion above that the photodiode was generating a relatively small response.</p>
<div id="fig-mcclain-v1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/mcclain-v1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;1: Version 1 with simple LED power supply and a transimpedance amplifier as the detector.</figcaption>
</figure>
</div>
<p>Figure&nbsp;2 and Figure&nbsp;3 show the project from each side.</p>
<div id="fig-build-v1-2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/build-v1-2.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;2: View of project. The simplicity of the supply to the LED is apparent. The top rail is the negative supply, the lower rail is the positive supply, and the 2nd-from-bottom rail is the ground.</figcaption>
</figure>
</div>
<div id="fig-build-v1-1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/build-v1-1.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;3: View of project. The op amp for the detector is in the foreground.</figcaption>
</figure>
</div>
</section>
<section id="version-2-relaxation-oscillator-as-the-led-power-supply" class="level2">
<h2 class="anchored" data-anchor-id="version-2-relaxation-oscillator-as-the-led-power-supply">Version 2: Relaxation Oscillator as the LED Power Supply</h2>
<p>The next step in McClain’s scheme is to change the basic power supply to a more sophisticated “relaxation oscillator” which produces a square wave output with a certain frequency. The idea here is to eliminate stray room light from affecting the output by using a specific AC-like frequency as the source and then modify the detector to only see this frequency. Stray room light may consist of random light causing DC offsets in the circuit, or something more determinant like 60 Hz flicker from light fixtures.</p>
<section id="simulation" class="level3">
<h3 class="anchored" data-anchor-id="simulation">Simulation</h3>
<p>The relaxation oscillator circuit was modeled in CircuitLab before building the circuit. The circuit is in Figure&nbsp;4 and the simulation results are shown in Figure&nbsp;5.</p>
<div id="fig-mcclain-relax-osc" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/mcclain-relax-osc.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;4: The relaxation oscillator circuit.</figcaption>
</figure>
</div>
<div id="fig-mcclain-relax-osc-out-2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/mcclain-relax-osc-out-2.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;5: The relaxation oscillator simulation output. The gold/orange line indicates the charge on C2 building and decaying. When it reaches an extreme positive or negative value, the phase of the output square wave changes. The lower plot is the very small current produced at the output of the op amp.</figcaption>
</figure>
</div>
</section>
<section id="as-built" class="level3">
<h3 class="anchored" data-anchor-id="as-built">As Built</h3>
<p>Capacitor C2 controls the frequency of the square wave produced by the relaxation oscillator. Figure&nbsp;6 shows the oscilloscope traces with C2 set to 1<img src="https://latex.codecogs.com/png.latex?%5Cmu">F which gives a frequency of about 8 Hz, as seen in the video below. This serves as visual “proof of concept”. Figure&nbsp;7 shows the oscilloscope traces for a value of 4700 pF for C2 which generates a square wave with frequency 1,500 Hz. This is higher than the frequency of any room light flickering and thus will serve as a “carrier” of the absorbance value unaltered by any stray room light, once we add the other modules to the detection side.</p>
<p><em>Note that all oscilloscope traces have two vertical scales, one on the left and one on the right, color coordinated with the trace.</em></p>
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title=""><source src="slow-blink.mp4"></video></div>
<div id="fig-relax-osc-1uF" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/TP-A-vs-B-1uF.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;6: Relaxation oscillator with a 1<img src="https://latex.codecogs.com/png.latex?%5Cmu">F capcitor for C2. The blue curve is the output of the op amp, the red line is the charging and discharging of C2. Note the box at the bottom which reports the period of the square wave, which corresponds to a frequency of about 8 Hz.</figcaption>
</figure>
</div>
<div id="fig-relax-osc-4700pF" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/TP-A-vs-B.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;7: Relaxation oscillator with C2 at 4700 pF. Note the horizontal scale range is much smaller than in the previous figure, as the frequency is much higher.</figcaption>
</figure>
</div>
<p>The built version of the relaxation oscillator corresponds well with the simulation.</p>
</section>
</section>
<section id="version-3-almost-all-the-bells-and-whistles" class="level2">
<h2 class="anchored" data-anchor-id="version-3-almost-all-the-bells-and-whistles">Version 3: Almost All the Bells and Whistles</h2>
<p>This final version contains all the circuits as described by McClain. I decided to measure voltages directly at the output rather than use an Arduino and display to provide an absorbance value.</p>
<p>Figure&nbsp;8 shows the final circuit. Note that several test points are labeled and referred to in the discussion below.</p>
<div id="fig-complete-circuit" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/complete-circuit.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;8: Completed project with key modules labeled. <a href="imgs/complete-circuit.png">Click</a> for full size.</figcaption>
</figure>
</div>
<section id="relaxation-oscillator" class="level3">
<h3 class="anchored" data-anchor-id="relaxation-oscillator">Relaxation Oscillator</h3>
<p>The details of the relaxation oscillator are exactly as described above.</p>
</section>
<section id="current-amplifier" class="level3">
<h3 class="anchored" data-anchor-id="current-amplifier">Current Amplifier</h3>
<p>As the simulation of the relaxation oscillator shows, the current output of the op amp is very small. Consequently a simple transistor is used to bump up the current driving the LED source to an appropriate value.</p>
</section>
<section id="i-to-v-converter" class="level3">
<h3 class="anchored" data-anchor-id="i-to-v-converter">I to V Converter</h3>
<p>The I to V converter circuit is the same as described earlier.</p>
</section>
<section id="high-pass-filter" class="level3">
<h3 class="anchored" data-anchor-id="high-pass-filter">High Pass Filter</h3>
<p>A high pass filter takes a signal that is time-varying, in our case a square wave, and filters it so that only high frequency components are kept. This is a key part of the detector design, since we create an approximately 1,500 Hz square wave and any other component, like 60 Hz flicker from room lights, should be eliminated. Figure&nbsp;9 shows an isolated version of our high pass filter, and Figure&nbsp;10 shows the frequency dependency filtering.</p>
<div id="fig-high-pass-circuit" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/high-pass-circuit.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;9: Isolated high pass filter circuit.</figcaption>
</figure>
</div>
<div id="fig-high-pass-performance" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/high-pass-performance.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;10: Frequency dependence of the high pass filter. Lower values on the vertical axis means greater attenuation.</figcaption>
</figure>
</div>
</section>
<section id="half-wave-rectifier" class="level3">
<h3 class="anchored" data-anchor-id="half-wave-rectifier">Half Wave Rectifier</h3>
<p>A half wave rectifier converts an alternating current, alternating between positive and negative values, into a positive only form. Essentially, the negative portion of the signal is converted to positive values, and the positive portion is set to zero. Figure&nbsp;11 shows the action of the rectifier.</p>
<div id="fig-half-wave" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/TP-D-vs-E.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;11: Action of the half wave rectifier. The red trace is observed at test point D, and fluctuates positive and negative. The blue trace is the rectified wave observed at test point E. Notice that its voltage is always positive.</figcaption>
</figure>
</div>
</section>
<section id="active-low-pass-filter" class="level3">
<h3 class="anchored" data-anchor-id="active-low-pass-filter">Active Low Pass Filter</h3>
<p>The final step is an active low pass filter which only passes signals below a certain frequency <em>and</em> amplifies them (that’s the active part). Importantly, in addition to amplifying the signal, the op amp emits a steady DC voltage which is ultimately proportional to the current hitting the photodiode. This is the value we are after when making absorbance measurements. Figure&nbsp;12 shows the actual output.</p>
<div id="fig-low-pass" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/TP-E-vs-F.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;12: Effect of the low pass filter. The red curve is the same as in the previous figure, namely test poiont D. The blue line is the final DC output at test point F. This is where the final voltages are measured.</figcaption>
</figure>
</div>
<p>If we isolate the low pass filter circuit we can try to understand its operation in greater detail. Figure&nbsp;13 shows the isolated circuit with simulation inputs configured to match the measured inputs.</p>
<div id="fig-active-LPF-circuit" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/active-LPF-circuit.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;13: Isolated active low pass filter circuit.</figcaption>
</figure>
</div>
<p>If we look at the frequency dependence of this circuit, we see that low frequencies are passed relatively unattenuated (Figure&nbsp;14), as expected. The combination of the earlier high pass filter and this low pass filter amounts to a band pass filter. This suggests a potential follow up design which uses a band pass filter followed by rectification and conversion to DC by some combination of op amps.</p>
<div id="fig-active-LPF-frequency" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/active-LPF-frequency.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;14: Attenuation of high frequencies by the low pass filter.</figcaption>
</figure>
</div>
<p>In addition to the filtering behavior, we know that the circuit produces a steady DC current from the approximately square wave input. Let’s check this using the simulator again, but this time looking at output voltages. Figure&nbsp;15 shows the results, which should ideally be close to those in Figure&nbsp;12.</p>
<div id="fig-active-LPF-voltage" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/active-LPF-voltage.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;15: Voltages produce by the active low pass filer. The square wave is the simulated input. The gold/orange line is the output DC voltage, which is higher than observed, probably due to an imperfect simulation configuration. The key point is that a steady DC voltage is produced.</figcaption>
</figure>
</div>
</section>
<section id="calibration-curve" class="level3">
<h3 class="anchored" data-anchor-id="calibration-curve">Calibration Curve</h3>
<p>A calibration curve was prepared using a 10 mL plastic syringe and some small bottles. Two drops of red food coloring were added to 10 mL of water to create the first solution. Three mL of the stock solution was added to seven mL of water. This 2nd solution was then diluted in similar fashion and so forth, to get five total solutions. Tap water was used. The green LED was disconnected and the dark current was measured. Next, tap water was used as a blank. Then the voltage for each sample was recorded (voltage measurements are taken at point F in Figure&nbsp;8). Listing&nbsp;1 shows the computational steps. Figure&nbsp;16 shows the samples from most concentrated to least concentrated.</p>
<div id="fig-cal-samples" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/cal-samples.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;16: Calibration samples.</figcaption>
</figure>
</div>
<div class="cell">
<div id="lst-comp" class="listing">
<p>Listing&nbsp;1: Computation of absorbance values.</p>
<div class="sourceCode cell-code" id="lst-comp" data-lst-cap="Computation of absorbance values." style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="lst-comp-1">dark <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.0e-3</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dark voltage</span></span>
<span id="lst-comp-2">blank <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.281</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tap water</span></span>
<span id="lst-comp-3">voltage <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">26.2e-3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">26.8e-3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">34.0e-3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">99.9e-3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">196.0e-3</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sample readings</span></span>
<span id="lst-comp-4">stock <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2 drops red food coloring in 10 mL tap water</span></span>
<span id="lst-comp-5">dil <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># serial dilution factor</span></span>
<span id="lst-comp-6">conc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(stock, dil<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="lst-comp-7">DF <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Concentration =</span> conc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Voltage =</span> voltage)</span>
<span id="lst-comp-8">DF<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Absorbance <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>((DF<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Voltage <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> dark)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(blank <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> dark))</span></code></pre></div>
</div>
</div>
<p>Table&nbsp;1 shows the results. A calibration curve is shown in Figure&nbsp;17. Clearly the most concentrated samples exceed the linear behavior expected for Beer’s Law (as observed by McClain). If the two most concentrated samples are dropped, the result is a nice linear relationship, as seen in Figure&nbsp;18 and the summary of the fit in Listing&nbsp;2.</p>
<div class="cell">
<div class="cell-output-display">
<div id="tbl-results" class="anchored">
<table quarto-disable-processing="true" class="table table-striped table-bordered" style="width: auto !important; margin-left: auto; margin-right: auto;"><caption>Table&nbsp;1:  <p>Relative sample concentrations and corresponding voltages and
absorbances.</p> </caption>
 <thead>
  <tr>
   <th style="text-align:right;"> Concentration </th>
   <th style="text-align:right;"> Voltage </th>
   <th style="text-align:right;"> Absorbance </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:right;"> 1.0000 </td>
   <td style="text-align:right;"> 0.0262 </td>
   <td style="text-align:right;"> 2.611089 </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 0.3000 </td>
   <td style="text-align:right;"> 0.0268 </td>
   <td style="text-align:right;"> 2.581818 </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 0.0900 </td>
   <td style="text-align:right;"> 0.0340 </td>
   <td style="text-align:right;"> 2.284567 </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 0.0270 </td>
   <td style="text-align:right;"> 0.0999 </td>
   <td style="text-align:right;"> 1.074541 </td>
  </tr>
  <tr>
   <td style="text-align:right;"> 0.0081 </td>
   <td style="text-align:right;"> 0.1960 </td>
   <td style="text-align:right;"> 0.369747 </td>
  </tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-calcurve1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/Photometer_files/figure-html/fig-calcurve1-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Figure&nbsp;17: Calibration curve, hardware version 3.</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div id="lst-fit" class="listing">
<p>Listing&nbsp;2: Results of fitting the three lowest concentration samples.</p>
<div class="sourceCode cell-code" id="lst-fit" data-lst-cap="Results of fitting the three lowest concentration samples." style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="lst-fit-1">DF35 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> DF[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,]</span>
<span id="lst-fit-2">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(DF35<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Absorbance <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> DF35<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Concentration)</span>
<span id="lst-fit-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(fit)</span></code></pre></div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = DF35$Absorbance ~ DF35$Concentration)

Residuals:
       1        2        3 
-0.03688  0.15983 -0.12294 

Coefficients:
                   Estimate Std. Error t value Pr(&gt;|t|)  
(Intercept)          0.3118     0.1840   1.694   0.3394  
DF35$Concentration  22.3292     3.3801   6.606   0.0956 .
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.205 on 1 degrees of freedom
Multiple R-squared:  0.9776,    Adjusted R-squared:  0.9552 
F-statistic: 43.64 on 1 and 1 DF,  p-value: 0.09564</code></pre>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-calcurve2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2023-07-16-Photometer/Photometer_files/figure-html/fig-calcurve2-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Figure&nbsp;18: Calibration curve, hardware version 3, dropping the two most concentrated samples.</figcaption>
</figure>
</div>
</div>
</div>
<p>Not too bad!</p>
</section>
</section>
<section id="references" class="level2 unnumbered">




</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Kvittingen2017" class="csl-entry">
Kvittingen, Eivind V, Lise Kvittingen, Thor Bernt Melo, Birte Johanne Sjursnes, and Richard Verley. 2017. <span>“Demonstrating Basic Properties of Spectroscopy Using a Self-Constructed Combined Fluorimeter and UV-Photometer.”</span> <em>Journal of Chemical Education</em> 94: 1486–91.
</div>
<div id="ref-McClain2014" class="csl-entry">
McClain, Robert L. 2014. <span>“Construction of a Photometer as an Instructional Tool for Electronics and Instrumentation.”</span> <em>Journal of Chemical Education</em> 91: 747–50.
</div>
</div></section><aside id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I have not tested the fluoresence measurement as other projects are calling me. In addition to changing the position of the photodiode, a few resistors may need to be changed in order to achieve sufficient signal.↩︎</p></li>
</ol>
</aside><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2023,
  author = {Hanson, Bryan},
  title = {Home {Built} {Photometer}},
  date = {2023-07-16},
  url = {http://chemospec.org/posts/2023-07-16-Photometer/Photometer.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2023" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2023. <span>“Home Built Photometer.”</span> July 16,
2023. <a href="http://chemospec.org/posts/2023-07-16-Photometer/Photometer.html">http://chemospec.org/posts/2023-07-16-Photometer/Photometer.html</a>.
</div></div></section></div> ]]></description>
  <category>hardware</category>
  <category>electronics</category>
  <category>photometer</category>
  <guid>http://chemospec.org/posts/2023-07-16-Photometer/Photometer.html</guid>
  <pubDate>Sun, 16 Jul 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>DIY NMR in Earth’s Field</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2023-06-12-DIY-NMR/DIY-NMR.html</link>
  <description><![CDATA[ 



<p>I have always loved every aspect of NMR. My first introduction was as an undergraduate at Cal State Los Angeles, where I was introduced to a Bruker instrument that used a folded punched tape to read in its operating system. Fortunately, that machine was already quite older and there was a Varian EM-360 which was the work horse for routine spectra (bonus points if you can guess roughly what year this was!). Besides the extremely broad usefulness of NMR instruments, the combination of physics, chemistry, computer science and electronics that undergird the practical aspects of NMR are endlessly fascinating to me.</p>
<p>The development of simple, home-built NMR instruments over the past two decades is very interesting and appealing. These instruments typically don’t have a magnet, but rather use the earth’s magnetic field and some type of polarization process to improve sensitivity. Most of these instruments use an inexpensive microprocessor like an Arduino or Raspberry Pi to control the instrument, along with some purpose-built electronic circuits. Good examples are the work of Michal (<span class="citation" data-cites="Michal2010">Michal (2010)</span>, <span class="citation" data-cites="Michal2020">Michal (2020)</span>), Trevelyan (<span class="citation" data-cites="Trevelyan">Manley (2019)</span>) and Bryden (<span class="citation" data-cites="Bryden2021">Bryden et al. (2021)</span>). These instruments of course aren’t able to give the same results as higher-field instruments with superconducting magnets or Halbach arrays. What can you do with these instruments? Because earth’s magnetic field is very homogeneous locally, the line widths are very narrow, and thus coupling constants and <img src="https://latex.codecogs.com/png.latex?T_2"> can be measured.<sup>1</sup> However, the chemical shift range is really small, so structural studies are out. Sensitivity is relatively poor as well. Imaging (MRI) is in principle possible. By the way, there are also examples of DIY Nuclear Quadropole Resonce (NQR) instruments as well, which require no magnetic field (<span class="citation" data-cites="Hiblot2008">Hiblot et al. (2008)</span>).</p>
<p>Recently, a simpler DIY NMR instrument was published as a <a href="https://hackaday.io/">Hackaday</a> project by Andy Nichol. This <a href="https://hackaday.io/project/191192-nuclear-magnetic-resonance-for-everyone">“Nuclear Magnetic Resonance for Everybody”</a> project is unique due to its use of only off-the-shelf commericially available hardware components. Because the hydrogen Larmor precession frequency in earth’s magnetic field is in the audio range, the project uses a standard and readily available audio amplifier to simplify the signal detection process. In addition, the complexities of pulse programming are avoided in this project by using a mechanical switch to switch between polarization and detection modes. Finally, a single coil is employed for both polarization and detection. Signal processing is handled by readily available software.</p>
<p>This is an interesting project and it is the most basic entry point into DIY NMR that I have encountered. If it whets your appetite, the project can be made progressively more sophisticated by selectively bringing in the more advanced features of some of the other designs.</p>





<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Bryden2021" class="csl-entry">
Bryden, Nicolas, Michael Antonacci, Michele Kelley, and Rosa T. Branca. 2021. <span>“An Open-Source, Low-Cost NMR Spectrometer Operating in the mT Field Regime.”</span> <em>Journal Magnetic Resonance</em> 332. <a href="https://doi.org/10.1016/j.jmr.2021.107076">https://doi.org/10.1016/j.jmr.2021.107076</a>.
</div>
<div id="ref-Hiblot2008" class="csl-entry">
Hiblot, Nicolas, Benoit Cordier, Maude Ferrari, Alain Retournard, Denis Gradclaude, Jerome Bedet, Sebastien Leclerc, and Daniel Canet. 2008. <span>“A Fully Homemade <img src="https://latex.codecogs.com/png.latex?%5E%7B14%7DN"> Quadrupole Resonance Spectrometer.”</span> <em>Comptus Rendus Chemie</em> 11: 568–79. <a href="https://doi.org/10.1016/j.crci.2007.08.011">https://doi.org/10.1016/j.crci.2007.08.011</a>.
</div>
<div id="ref-Trevelyan" class="csl-entry">
Manley, S. W. 2019. <em>MRI and NMR Spectroscopy in the Earth’s Field</em>.
</div>
<div id="ref-Michal2010" class="csl-entry">
Michal, Carl T. 2010. <span>“A Low-Cost Spectrometer for NMR Measurements in the Earth’s Magnetic Field.”</span> <em>Meas. Sci. Technol.</em> 21. <a href="https://doi.org/10.1088/0957-0233/21/10/105902">https://doi.org/10.1088/0957-0233/21/10/105902</a>.
</div>
<div id="ref-Michal2020" class="csl-entry">
———. 2020. <span>“Low-Cost Low-Field NMR and MRI: Instrumentation and Applications.”</span> <em>Journal Magnetic Resonance</em> 319. <a href="https://doi.org/10.1016/j.jmr.2020.106800">https://doi.org/10.1016/j.jmr.2020.106800</a>.
</div>
</div></section><aside id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Locally homogeneous provided you are away from buildings, electrical transmission lines etc.↩︎</p></li>
</ol>
</aside><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2023,
  author = {Hanson, Bryan},
  title = {DIY {NMR} in {Earth’s} {Field}},
  date = {2023-06-12},
  url = {http://chemospec.org/posts/2023-06-12-DIY-NMR/DIY-NMR.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2023" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2023. <span>“DIY NMR in Earth’s Field.”</span> June 12,
2023. <a href="http://chemospec.org/posts/2023-06-12-DIY-NMR/DIY-NMR.html">http://chemospec.org/posts/2023-06-12-DIY-NMR/DIY-NMR.html</a>.
</div></div></section></div> ]]></description>
  <category>NMR</category>
  <category>EF-NMR</category>
  <category>NQR</category>
  <category>DIY</category>
  <guid>http://chemospec.org/posts/2023-06-12-DIY-NMR/DIY-NMR.html</guid>
  <pubDate>Mon, 12 Jun 2023 07:00:00 GMT</pubDate>
</item>
<item>
  <title>You Can Now Subscribe</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2022-11-07-Announce-Subscribe/Announce-Subscribe.html</link>
  <description><![CDATA[ 



<p>Just a short post to let readers know that you can now subscribe to this blog. Of course, you have always been able to get the RSS feed via the buttons in the navbar, but now you can submit your e-mail and my cheap-ass free level MailChimp account will let you know when there is a new post. You might find this useful if you are leaving Twitter or Twitter collapses completely!</p>



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Hanson, Bryan},
  title = {You {Can} {Now} {Subscribe}},
  date = {2022-11-07},
  url = {http://chemospec.org/posts/2022-11-07-Announce-Subscribe/Announce-Subscribe.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2022. <span>“You Can Now Subscribe.”</span> November 7,
2022. <a href="http://chemospec.org/posts/2022-11-07-Announce-Subscribe/Announce-Subscribe.html">http://chemospec.org/posts/2022-11-07-Announce-Subscribe/Announce-Subscribe.html</a>.
</div></div></section></div> ]]></description>
  <category>Housekeeping</category>
  <guid>http://chemospec.org/posts/2022-11-07-Announce-Subscribe/Announce-Subscribe.html</guid>
  <pubDate>Mon, 07 Nov 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Notes on Linear Algebra Part 4</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2022-09-26-Linear-Alg-Notes-Pt4/Linear-Alg-Notes-Pt4.html</link>
  <description><![CDATA[ 



<p>Series: <a href="https://chemospec.org/posts/2022-08-14-Linear-Alg-Notes/2022-08-14-Linear-Alg-Notes.html">Part 1</a> <a href="https://chemospec.org/posts/2022-09-01-Linear-Alg-Notes-Pt2/Linear-Alg-Notes-Pt2.html">Part 2</a> <a href="https://chemospec.org/posts/2022-09-10-Linear-Alg-Notes-Pt3/Linear-Alg-Notes-Pt3.html">Part 3</a></p>
<p>Back in Part 2 I mentioned some of the challenges of learning linear algebra. One of those challenges is making sense of all the special types of matrices one encounters. In this post I hope to shed a little light on that topic.</p>
<section id="a-taxonomy-of-matrices" class="level1">
<h1>A Taxonomy of Matrices</h1>
<p>I am strongly drawn to thinking in terms of categories and relationships. I find visual presentations like phylogenies showing the relationships between species very useful. In the course of my linear algebra journey, I came across an interesting Venn diagram developed by the very creative thinker <a href="https://github.com/kenjihiranabe/The-Art-of-Linear-Algebra">Kenji Hiranabe</a>. The diagram is discussed at <a href="https://anagileway.com/2020/09/29/matrix-world-in-linear-algebra-for-everyone/">Matrix World</a>, but the latest version is at the Github link. A Venn diagram is a useful format, but I was inspired to recast the information in different format. Figure&nbsp;1 shows a taxonomy I created using a portion of the information in Hiranabe’s Venn diagram.<sup>1</sup> The taxonomy is primarily organized around what I am calling the <em>structure</em> of a matrix: what does it look like upon visual inspection? Of course this is most obvious with small matrices. To me at least, structure is one of the most obvious characteristics of a matrix: an upper triangular matrix really stands out for instance. Secondarily, the taxonomy includes a number of queries that one can ask about a matrix: for instance, is the matrix invertible? We’ll need to expand on all of this of course, but first take a look at the figure.<sup>2</sup></p>
<div style="page-break-after: always;"></div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-flow" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<div>
<pre class="mermaid mermaid-js" data-label="fig-flow">flowchart TD
A(all matrices &lt;br/&gt; n x m) --&gt; C(row matrices &lt;br/&gt; 1 x n)
A --&gt; D(column matrices &lt;br/&gt; n x 1)
A ---&gt; B(square matrices &lt;br/&gt; n x n)
B --&gt; E(upper triangular&lt;br/&gt;matrices)
B --&gt; F(lower triangular&lt;br/&gt;matrices)
B --&gt; G{{either:&lt;br/&gt;is singular?}}
B --&gt; H{{or:&lt;br/&gt;is invertible?}}
H --&gt; I{{is diagonalizable?}}
I --&gt; J{{is normal?}}
J --&gt; K(symmetric)
K --&gt; L(diagonal)
L --&gt; M(identity)
J --&gt; N{{is orthogonal?}}
N --&gt; M
style G fill:#FFF0F5
style H fill:#FFF0F5
style I fill:#FFF0F5
style J fill:#FFF0F5
style N fill:#FFF0F5
</pre>
</div>
<figcaption class="figure-caption">Figure&nbsp;1: Hierarchical relationships between different types of matrices. <em>Blue Rectangles</em> denote matrices with particular, recognizable <em>structures</em>. <em>Pink Hexagons</em> indicate properties that can be <em>queried</em>.</figcaption>
</figure>
</div>
</div>
</div>
<div style="page-break-after: always;"></div>
</section>
<section id="touring-the-taxonomy" class="level1">
<h1>Touring the Taxonomy</h1>
<section id="structure-examples" class="level2">
<h2 class="anchored" data-anchor-id="structure-examples">Structure Examples</h2>
<p>Let’s use <code>R</code> to construct and inspect examples of each type of matrix. We’ll use integer matrices to keep the print output nice and neat, but of course real numbers could be used as well.<sup>3</sup> Most of these are pretty straightforward so we’ll keep comments to a minimum for the simple cases.</p>
<section id="rectangular-matrix-m-times-n" class="level3">
<h3 class="anchored" data-anchor-id="rectangular-matrix-m-times-n">Rectangular Matrix <img src="https://latex.codecogs.com/png.latex?m%20%5Ctimes%20n"></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1">A_rect <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if you give nrow,</span></span>
<span id="cb1-2">A_rect <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># R will compute ncol from the length of the data</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3] [,4]
[1,]    1    4    7   10
[2,]    2    5    8   11
[3,]    3    6    9   12</code></pre>
</div>
</div>
<p>Notice that <code>R</code> is “column major” meaning data fills the first column, then the second column and so forth.</p>
</section>
<section id="row-matrixvector-1-times-n" class="level3">
<h3 class="anchored" data-anchor-id="row-matrixvector-1-times-n">Row Matrix/Vector <img src="https://latex.codecogs.com/png.latex?1%20%5Ctimes%20n"></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">A_row <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-2">A_row</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3] [,4]
[1,]    1    2    3    4</code></pre>
</div>
</div>
</section>
<section id="column-matrixvector-m-times-1" class="level3">
<h3 class="anchored" data-anchor-id="column-matrixvector-m-times-1">Column Matrix/Vector <img src="https://latex.codecogs.com/png.latex?m%20%5Ctimes%201"></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">A_col <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb5-2">A_col</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1]
[1,]    1
[2,]    2
[3,]    3
[4,]    4</code></pre>
</div>
</div>
<p>Keep in mind that to save space in a text-dense document one would often write <code>A_col</code> as its transpose.<sup>4</sup></p>
</section>
<section id="square-matrix-n-times-n" class="level3">
<h3 class="anchored" data-anchor-id="square-matrix-n-times-n">Square Matrix <img src="https://latex.codecogs.com/png.latex?n%20%5Ctimes%20n"></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">A_sq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb7-2">A_sq</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]    1    4    7
[2,]    2    5    8
[3,]    3    6    9</code></pre>
</div>
</div>
</section>
<section id="upper-and-lower-triangular-matrices" class="level3">
<h3 class="anchored" data-anchor-id="upper-and-lower-triangular-matrices">Upper and Lower Triangular Matrices</h3>
<p>Creating an upper triangular matrix requires a few more steps. Function <code>upper.tri()</code> returns a logical matrix which can be used as a mask to select entries. Function <code>lower.tri()</code> can be used similarly. Both functions have an argument <code>diag = TRUE/FALSE</code> indicating whether to include the diagonal.<sup>5</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">upper.tri</span>(A_sq, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">diag =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>      [,1]  [,2] [,3]
[1,]  TRUE  TRUE TRUE
[2,] FALSE  TRUE TRUE
[3,] FALSE FALSE TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">A_upper <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> A_sq[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">upper.tri</span>(A_sq)] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># gives a logical matrix</span></span>
<span id="cb11-2">A_upper <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># notice that a vector is returned, not quite what might have been expected!</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4 7 8</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1">A_upper <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> A_sq <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># instead, create a copy to be modified</span></span>
<span id="cb13-2">A_upper[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lower.tri</span>(A_upper)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>L <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign the lower entries to zero</span></span>
<span id="cb13-3">A_upper</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]    1    4    7
[2,]    0    5    8
[3,]    0    0    9</code></pre>
</div>
</div>
<p>Notice to create an upper triangular matrix we use <code>lower.tri()</code> to assign zeros to the lower part of an existing matrix.</p>
</section>
<section id="identity-matrix" class="level3">
<h3 class="anchored" data-anchor-id="identity-matrix">Identity Matrix</h3>
<p>If you give <code>diag()</code> a single value it defines the dimensions and creates a matrix with ones on the diagonal, in other words, an identity matrix.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb15-1">A_ident <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb15-2">A_ident</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3] [,4]
[1,]    1    0    0    0
[2,]    0    1    0    0
[3,]    0    0    1    0
[4,]    0    0    0    1</code></pre>
</div>
</div>
</section>
<section id="diagonal-matrix" class="level3">
<h3 class="anchored" data-anchor-id="diagonal-matrix">Diagonal Matrix</h3>
<p>If instead you give <code>diag()</code> a vector of values these go on the diagonal and the length of the vector determines the dimensions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb17-1">A_diag <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb17-2">A_diag</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3] [,4]
[1,]    1    0    0    0
[2,]    0    2    0    0
[3,]    0    0    3    0
[4,]    0    0    0    4</code></pre>
</div>
</div>
</section>
<section id="symmetric-matrices" class="level3">
<h3 class="anchored" data-anchor-id="symmetric-matrices">Symmetric Matrices</h3>
<p>Matrices created by <code>diag()</code> are symmetric matrices, but any matrix where <img src="https://latex.codecogs.com/png.latex?a_%7Bij%7D%20=%20a_%7Bji%7D"> is symmetric. There is no general function to create symmetric matrices since there is no way to know what data should be used. However, one can ask if a matrix is symmetric, using the function <code>isSymmetric()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isSymmetric</span>(A_diag)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
</section>
</section>
<section id="the-queries" class="level2">
<h2 class="anchored" data-anchor-id="the-queries">The Queries</h2>
<p>Let’s take the queries in the taxonomy in order, as the hierarchy is everything.</p>
<section id="is-the-matrix-singular-or-invertible" class="level3">
<h3 class="anchored" data-anchor-id="is-the-matrix-singular-or-invertible">Is the Matrix Singular or Invertible?</h3>
<p>A singular matrix is one in which one or more rows are multiples of another row, or alternatively, one or more columns are multiples of another column. Why do we care? Well, it turns out a singular matrix is a bit of a dead end, you can’t do much with it. An invertible matrix, however, is a very useful entity and has many applications. What is an invertible matrix? In simple terms, being invertible means the matrix has an inverse. This is not the same as the algebraic definition of an inverse, which is related to division:</p>
<p><span id="eq-1"><img src="https://latex.codecogs.com/png.latex?%0Ax%5E%7B-1%7D%20=%20%5Cfrac%7B1%7D%7Bx%7D%0A%5Ctag%7B1%7D"></span></p>
<p>Instead, for matrices, invertibility of <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> is defined as the existence of another matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BB%7D"> such that</p>
<p><span id="eq-2"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BA%7D%5Cmathbf%7BB%7D%20=%20%5Cmathbf%7BB%7D%5Cmathbf%7BA%7D%20=%20%5Cmathbf%7BI%7D%0A%5Ctag%7B2%7D"></span></p>
<p>Just as <img src="https://latex.codecogs.com/png.latex?x%5E%7B-1%7D"> cancels out <img src="https://latex.codecogs.com/png.latex?x"> in <img src="https://latex.codecogs.com/png.latex?x%5E%7B-1%7Dx%20=%20%5Cfrac%7Bx%7D%7Bx%7D%20=%201">, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BB%7D"> cancels out <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> to give the identity matrix. In other words, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BB%7D"> is really <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D%5E%7B-1%7D">.</p>
<p>A singular matrix has determinant of zero. On the other hand, an invertible matrix has a non-zero determinant. So to determine which type of matrix we have before us, we can simply compute the determinant.</p>
<p>Let’s look at a few simple examples.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb21-1">A_singular <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb21-2">A_singular <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># notice that col 2 is col 1 * -3, they are not independent</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2]
[1,]    1   -3
[2,]   -2    6</code></pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">det</span>(A_singular)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb25-1">A_invertible <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb25-2">A_invertible</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2]
[1,]    2    7
[2,]    2    8</code></pre>
</div>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">det</span>(A_invertible)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2</code></pre>
</div>
</div>
</section>
<section id="is-the-matrix-diagonalizable" class="level3">
<h3 class="anchored" data-anchor-id="is-the-matrix-diagonalizable">Is the Matrix Diagonalizable?</h3>
<p>A matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> that is diagonalizable can be expressed as:</p>
<p><span id="eq-3"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7B%5CLambda%7D%20=%20%5Cmathbf%7BX%7D%5E%7B-1%7D%5Cmathbf%7BA%7D%5Cmathbf%7BX%7D%0A%5Ctag%7B3%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7B%5CLambda%7D"> is a diagonal matrix – the diagonalized version of the original matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D">. How do we find out if this is possible, and if possible, what are the values of <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BX%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7B%5CLambda%7D">? The answer is to decompose <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> using the eigendecomposition:</p>
<p><span id="eq-4"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BA%7D%20=%20%5Cmathbf%7BX%7D%5Cmathbf%7B%5CLambda%7D%5Cmathbf%7BX%7D%5E%7B-1%7D%0A%5Ctag%7B4%7D"></span></p>
<p>Now there is a lot to know about the eigendecomposition, but for now let’s just focus on a few key points:</p>
<ul>
<li>The columns of <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BX%7D"> contains the eigenvectors. Eigenvectors are the most natural basis for describing the data in <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D">.<sup>6</sup></li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7B%5CLambda%7D"> is a diagonal matrix with the eigenvalues on the diagonal, in descending order. The individual eigenvalues are typically denoted <img src="https://latex.codecogs.com/png.latex?%5Clambda_i">.</li>
<li>Eigenvectors and eigenvalues always come in pairs.</li>
</ul>
<p>We can answer the original question by using the <code>eigen()</code> function in <code>R</code>. Let’s do an example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb29-1">A_eigen <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb29-2">A_eigen</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]    1    2    0
[2,]    0    3    0
[3,]    2   -4    2</code></pre>
</div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb31-1">eA <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eigen</span>(A_eigen)</span>
<span id="cb31-2">eA</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>eigen() decomposition
$values
[1] 3 2 1

$vectors
           [,1] [,2]       [,3]
[1,]  0.4082483    0  0.4472136
[2,]  0.4082483    0  0.0000000
[3,] -0.8164966    1 -0.8944272</code></pre>
</div>
</div>
<p>Since <code>eigen(A_eigen)</code> was successful, we can conclude that <code>A_eigen</code> was diagonalizable. You can see the eigenvalues and eigenvectors in the returned value. We can reconstruct <code>A_eigen</code> using Equation&nbsp;4:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb33-1">eA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>vectors <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(eA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>values) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solve</span>(eA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>vectors)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]    1    2    0
[2,]    0    3    0
[3,]    2   -4    2</code></pre>
</div>
</div>
<p>Remember, <code>diag()</code> creates a matrix with the values along the diagonal, and <code>solve()</code> computes the inverse when it gets only one argument.</p>
<p>The only loose end is which matrices are <em>not</em> diagonalizable? These are covered in this <a href="https://en.wikipedia.org/wiki/Diagonalizable_matrix#Matrices_that_are_not_diagonalizable">Wikipedia article</a>. Briefly, most non-diagonalizable matrices are fairly exotic and real data sets will likely not be a problem.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Nuances About the Presentation of “Eigenstuff”
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>In texts, eigenvalues and eigenvectors are universally introduced as a scaling relationship</p>
<p><span id="eq-4a"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BA%7D%5Cmathbf%7Bv%7D%20=%20%5Clambda%5Cmathbf%7Bv%7D%0A%5Ctag%7B5%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bv%7D"> is a column eigenvector and <img src="https://latex.codecogs.com/png.latex?%5Clambda"> is a scalar eigenvalue. One says “<img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> scales <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bv%7D"> by a factor of <img src="https://latex.codecogs.com/png.latex?%5Clambda">.” A single vector is used as one can readily illustrate how that vector grows or shrinks in length when multiplied by <img src="https://latex.codecogs.com/png.latex?%5Clambda">. Let’s call this the “bottom up” explanation.</p>
<p>Let’s check that is true using our values from above by extracting the first eigenvector and eigenvalue from <code>eA</code>. Notice that we are using regular multiplication on the right-hand-side, i.e.&nbsp;<code>*</code>, rather than <code>%*%</code>, because <code>eA$values[1]</code> is a scalar. Also on the right-hand-side, we have to add <code>drop = FALSE</code> to the subsetting process or the result is no longer a matrix.<sup>7</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isTRUE</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all.equal</span>(</span>
<span id="cb35-2">  A_eigen <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> eA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>vectors[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb35-3">  eA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>values[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> eA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>vectors[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>]))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
<p>If instead we start from Equation&nbsp;4 and rearrange it to show the relationship between <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7B%5CLambda%7D"> we get:</p>
<p><span id="eq-4b"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BA%7D%5Cmathbf%7BX%7D%20=%20%5Cmathbf%7BX%7D%5Cmathbf%7B%5CLambda%7D%0A%5Ctag%7B6%7D"></span></p>
<p>Let’s call this the “top down” explanation. We can verify this as well, making sure to convert <code>eA$values</code> to a diagonal matrix as the values are stored as a vector to save space.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isTRUE</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all.equal</span>(A_eigen <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> eA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>vectors, eA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>vectors <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(eA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>values)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
<p>Notice that in Equation&nbsp;6 <img src="https://latex.codecogs.com/png.latex?%5CLambda"> is on the right of <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BX%7D">, but in Equation&nbsp;5 the corresponding value, <img src="https://latex.codecogs.com/png.latex?%5Clambda">, is to the left of <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bv%7D">. This is a bit confusing until one realizes that Equation&nbsp;5 could have been written</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BA%7D%5Cmathbf%7Bv%7D%20=%20%5Cmathbf%7Bv%7D%5Clambda%0A"></p>
<p>since <img src="https://latex.codecogs.com/png.latex?%5Clambda"> is a scalar. It’s too bad that the usual, bottom up, presentation seems to conflict with the top down approach. Perhaps the choice in Equation&nbsp;5 is a historical artifact.</p>
</div>
</div>
</div>
</section>
<section id="is-the-matrix-normal" class="level3">
<h3 class="anchored" data-anchor-id="is-the-matrix-normal">Is the Matrix Normal?</h3>
<p>A normal matrix is one where <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D%5E%7B%5Cmathsf%7BT%7D%7D%5Cmathbf%7BA%7D%20=%20%5Cmathbf%7BA%7D%5Cmathbf%7BA%7D%5E%7B%5Cmathsf%7BT%7D%7D">. As far as I know, there is no function in <code>R</code> to check this condition, but we’ll write our own in a moment. One reason being “normal” is interesting is if <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> is a normal matrix, then the results of the eigendecomposition change slightly:</p>
<p><span id="eq-5"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BA%7D%20=%20%5Cmathbf%7BO%7D%5Cmathbf%7B%5CLambda%7D%5Cmathbf%7BO%7D%5E%7B-1%7D%0A%5Ctag%7B7%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BO%7D"> is an orthogonal matrix, which we’ll talk about next.</p>
</section>
<section id="is-the-matrix-orthogonal" class="level3">
<h3 class="anchored" data-anchor-id="is-the-matrix-orthogonal">Is the Matrix Orthogonal?</h3>
<p>An orthogonal matrix takes the definition of a normal matrix one step further: <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D%5E%7B%5Cmathsf%7BT%7D%7D%5Cmathbf%7BA%7D%20=%20%5Cmathbf%7BA%7D%5Cmathbf%7BA%7D%5E%7B%5Cmathsf%7BT%7D%7D%20=%20%5Cmathbb%7BI%7D">. If a matrix is orthogonal, then its transpose is equal to its inverse: <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D%5E%7B-1%7D%20=%20%5Cmathbf%7BA%7D%5E%7B%5Cmathsf%7BT%7D%7D">, which of course makes any special computation of the inverse unnecessary. This is a significant advantage in computations.</p>
<p>To aid our learning, let’s write a simple function that will report if a matrix is normal, orthogonal, or neither.<sup>8</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb39-1">normal_or_orthogonal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(M) {</span>
<span id="cb39-2">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inherits</span>(M, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"matrix"</span>)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stop</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"M must be a matrix"</span>)</span>
<span id="cb39-3">  norm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> orthog <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb39-4">  tst1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> M <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(M)</span>
<span id="cb39-5">  tst2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(M) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> M</span>
<span id="cb39-6">  norm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isTRUE</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all.equal</span>(tst1, tst2))</span>
<span id="cb39-7">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (norm) orthog <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isTRUE</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all.equal</span>(tst1, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(M)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])))</span>
<span id="cb39-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (orthog) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This matrix is orthogonal</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> </span>
<span id="cb39-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (norm) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This matrix is normal</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb39-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This matrix is neither orthogonal nor normal</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb39-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invisible</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)</span>
<span id="cb39-12">}</span></code></pre></div>
</div>
<p>And let’s run a couple of tests.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb40-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal_or_orthogonal</span>(A_singular)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>This matrix is neither orthogonal nor normal</code></pre>
</div>
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb42-1">Norm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb42-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal_or_orthogonal</span>(Norm)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>This matrix is normal</code></pre>
</div>
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal_or_orthogonal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the identity matrix is orthogonal</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>This matrix is orthogonal</code></pre>
</div>
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb46-1">Orth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb46-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal_or_orthogonal</span>(Orth)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>This matrix is orthogonal</code></pre>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Some other properties of an orthogonal matrix
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>The columns of an orthogonal matrix are orthogonal to each other. We can show this by taking the dot product between any pair of columns. Remember is the dot product is zero the vectors are orthogonal.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb48-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(Orth[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> Orth[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># col 1 dot col 2</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1]
[1,]    0</code></pre>
</div>
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb50-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(Orth[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> Orth[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># col 1 dot col 3</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1]
[1,]    0</code></pre>
</div>
</div>
<p>Finally, not only are the columns orthogonal, but each column vector has length one, making them orthonormal.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb52-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(Orth[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1</code></pre>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="appreciating-the-queries" class="level3">
<h3 class="anchored" data-anchor-id="appreciating-the-queries">Appreciating the Queries</h3>
<p>Taking these queries together, we see that symmetric and diagonal matrices are necessarily invertible, diagonalizable and normal. They are not however orthogonal. Identity matrices however, have all these properties. Let’s double-check these statements.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb54-1">A_sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(</span>
<span id="cb54-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb54-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># symmetric matrix, not diagonal</span></span>
<span id="cb54-4">A_sym</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]    1    5    4
[2,]    5    2    9
[3,]    4    9    3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb56-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal_or_orthogonal</span>(A_sym)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>This matrix is normal</code></pre>
</div>
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb58-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal_or_orthogonal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># diagonal matrix, symmetric, but not the identity matrix</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>This matrix is normal</code></pre>
</div>
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb60-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal_or_orthogonal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># identity matrix (also symmetric, diagonal)</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>This matrix is orthogonal</code></pre>
</div>
</div>
<p>So what’s the value of these queries? As mentioned, they help us understand the relationships between different types of matrices, so they help us learn more deeply. On a practical computational level they may not have much value, especially when dealing with real-world data sets. However, there are some other interesting aspects of these queries that deal with decompositions and eigenvalues. We might cover these in the future.</p>
</section>
</section>
</section>
<section id="an-emerging-theme" class="level1">
<h1>An Emerging Theme?</h1>
<p>A more personal thought: In the course of writing these posts, and learning more linear algebra, it increasingly seems to me that a lot of the “effort” that goes into linear algebra is about making tedious operations simpler. Anytime one can have more zeros in a matrix, or have orthogonal vectors, or break a matrix into parts, the simpler things become. However, I haven’t really seen this point driven home in texts or tutorials. I think linear algebra learners would do well to keep this in mind.</p>
</section>
<section id="annotated-bibliography" class="level1">
<h1>Annotated Bibliography</h1>
<p>These are the main sources I relied on for this post.</p>
<ul>
<li><em>The No Bullshit Guide to Linear Algebra</em> by <a href="https://minireference.com">Ivan Savov</a>.
<ul>
<li>Section 6.2 Special types of matrices</li>
<li>Section 6.6 Eigendecomposition</li>
</ul></li>
<li><em>Linear Algebra: step by step</em> by Kuldeep Singh, Oxford Univerity Press, 2014.
<ul>
<li>Section 4.4 Orthogonal Matrices</li>
<li>Section 7.3.2 Diagonalization</li>
<li>Section 7.4 Diagonalization of Symmetric Matrices</li>
</ul></li>
<li>Wikipedia articles on the types of matrices.</li>
</ul>


</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><aside id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I’m only using a portion because the Hiranbe’s original contains a bit too much information for someone trying to get their footing in the field.↩︎</p></li>
<li id="fn2"><p>I’m using the term taxonomy a little loosely of course, you can call it whatever you want. The name is not so important really, what is important is the hierarchy of concepts.↩︎</p></li>
<li id="fn3"><p>As could complex numbers.↩︎</p></li>
<li id="fn4"><p>Usually in written text a row matrix, sometimes called a row vector, is written as <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D%20=%20%5Cbegin%7Bbmatrix%7D1%20&amp;%202%20&amp;%203%5Cend%7Bbmatrix%7D">. In order to save space in documents, rather than writing <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D%20=%20%5Cbegin%7Bbmatrix%7D1%20%5C%5C%202%20%5C%5C%203%5Cend%7Bbmatrix%7D">, a column matrix/vector can be kept to a single line by writing it as its transpose: <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D%20=%20%5Cbegin%7Bbmatrix%7D1%20&amp;%202%20&amp;%203%5Cend%7Bbmatrix%7D%5E%7B%5Cmathsf%7BT%7D%7D">, but this requires a little mental gymnastics to visualize.↩︎</p></li>
<li id="fn5"><p>Upper and lower triangular matrices play a special role in linear algebra. Because of the presence of many zeros, multiplying them and inverting them is relatively easy, because the zeros cause terms to drop out.↩︎</p></li>
<li id="fn6"><p>This idea of the “most natural basis” is most easily visualized in two dimensions. If you have some data plotted on <img src="https://latex.codecogs.com/png.latex?x"> and <img src="https://latex.codecogs.com/png.latex?y"> axes, determining the line of best fit is one way of finding the most natural basis for describing the data. However, more generally and in more dimensions, principal component analysis (PCA) is the most rigorous way of finding this natural basis, and PCA can be calculated with the <code>eigen()</code> function. Lots more information <a href="https://bryanhanson.github.io/LearnPCA/">here</a>.↩︎</p></li>
<li id="fn7"><p>The <code>drop</code> argument to subsetting/extracting defaults to <code>TRUE</code> which means that if subsetting reduces the necessary number of dimensions, the unneeded dimension attributes are dropped. Under the default, selecting a single column of a matrix leads to a vector, not a one column vector. In this <code>all.equal()</code> expression we need both sides to evaluate to a matrix.↩︎</p></li>
<li id="fn8"><p>One might ask why <code>R</code> does not provide a user-facing version of such a function. I think a good argument can be made that the authors of <code>R</code> passed down a robust and lean set of linear algebra functions, geared toward getting work done, and throwing errors as necessary.↩︎</p></li>
</ol>
</aside><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Hanson, Bryan},
  title = {Notes on {Linear} {Algebra} {Part} 4},
  date = {2022-09-26},
  url = {http://chemospec.org/posts/2022-09-26-Linear-Alg-Notes-Pt4/Linear-Alg-Notes-Pt4.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2022. <span>“Notes on Linear Algebra Part 4.”</span>
September 26, 2022. <a href="http://chemospec.org/posts/2022-09-26-Linear-Alg-Notes-Pt4/Linear-Alg-Notes-Pt4.html">http://chemospec.org/posts/2022-09-26-Linear-Alg-Notes-Pt4/Linear-Alg-Notes-Pt4.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Linear Algebra</category>
  <guid>http://chemospec.org/posts/2022-09-26-Linear-Alg-Notes-Pt4/Linear-Alg-Notes-Pt4.html</guid>
  <pubDate>Mon, 26 Sep 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Notes on Linear Algebra Part 3</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2022-09-10-Linear-Alg-Notes-Pt3/Linear-Alg-Notes-Pt3.html</link>
  <description><![CDATA[ 



<p>Series: <a href="https://chemospec.org/posts/2022-08-14-Linear-Alg-Notes/2022-08-14-Linear-Alg-Notes.html">Part 1</a> <a href="https://chemospec.org/posts/2022-09-01-Linear-Alg-Notes-Pt2/Linear-Alg-Notes-Pt2.html">Part 2</a></p>
<p><em>Update 19 September 2022: in “Use of outer() for Matrix Multiplication”, corrected use of “cross” to be “outer” and added example in <code>R</code>. Also added links to work by Hiranabe.</em></p>
<p>This post is a survey of the linear algebra-related functions from base <code>R</code>. Some of these I’ve disccused in other posts and some I may discuss in the future, but this post is primarily an inventory: these are the key tools we have available. “Notes” in the table are taken from the help files.</p>
<p>Matrices, including row and column vectors, will be shown in bold e.g.&nbsp;<img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> or <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Ba%7D"> while scalars and variables will be shown in script, e.g.&nbsp;<img src="https://latex.codecogs.com/png.latex?n">. <code>R</code> code will appear like <code>x &lt;- y</code>.</p>
<p>In the table, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BR%7D"> or <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BU%7D"> is an upper/right triangular matrix. <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BL%7D"> is a lower/left triangular matrix (triangular matrices are square). <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> is a generic matrix of dimensions <img src="https://latex.codecogs.com/png.latex?m%20%5Ctimes%20n">. <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BM%7D"> is a square matrix of dimensions <img src="https://latex.codecogs.com/png.latex?n%20%5Ctimes%20n">.</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: left;">Function</th>
<th style="text-align: left;">Uses</th>
<th style="text-align: left;">Notes</th>
<th style="text-align: left;"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><strong>operators</strong></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>*</code></td>
<td style="text-align: left;">scalar multiplication</td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>%*%</code></td>
<td style="text-align: left;">matrix multiplication</td>
<td style="text-align: left;">two vectors <img src="https://latex.codecogs.com/png.latex?%5Crightarrow"> the dot product; vector + matrix <img src="https://latex.codecogs.com/png.latex?%5Crightarrow"> cross product (vector will be promoted as needed)<sup>1</sup></td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;"><strong>basic functions</strong></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>t()</code></td>
<td style="text-align: left;">transpose</td>
<td style="text-align: left;">interchange rows and columns</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>crossprod()</code></td>
<td style="text-align: left;">matrix multiplication</td>
<td style="text-align: left;">faster version of <code>t(A) %*% A</code></td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>tcrossprod()</code></td>
<td style="text-align: left;">matrix multiplication</td>
<td style="text-align: left;">faster version of <code>A %*% t(A)</code></td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>outer()</code></td>
<td style="text-align: left;">outer product &amp; more</td>
<td style="text-align: left;">see discussion below</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>det()</code></td>
<td style="text-align: left;">computes determinant</td>
<td style="text-align: left;">uses the LU decomposition; determinant is a volume</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>isSymmetric()</code></td>
<td style="text-align: left;">name says it all</td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>Conj()</code></td>
<td style="text-align: left;">computes complex conjugate</td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;"><strong>decompositions</strong></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>backsolve()</code></td>
<td style="text-align: left;">solves <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BRx%7D%20=%20%5Cmathbf%7Bb%7D"></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>forwardsolve()</code></td>
<td style="text-align: left;">solves <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BLx%7D%20=%20%5Cmathbf%7Bb%7D"></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>solve()</code></td>
<td style="text-align: left;">solves <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BMx%7D%20=%20%5Cmathbf%7Bb%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BM%7D%5E%7B-1%7D"></td>
<td style="text-align: left;">e.g.&nbsp;linear systems; if given only one matrix returns the inverse</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>qr()</code></td>
<td style="text-align: left;">solves <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D%20=%20%5Cmathbf%7BQR%7D"></td>
<td style="text-align: left;"><img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BQ%7D"> is an orthogonal matrix; can be used to solve <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BAx%7D%20=%20%5Cmathbf%7Bb%7D">; see <code>?qr</code> for several <code>qr.*</code> extractor functions</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>chol()</code></td>
<td style="text-align: left;">solves <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BM%7D%20=%20%5Cmathbf%7BL%7D%5Cmathbf%7BL%7D%5E%7B%5Cmathsf%7BT%7D%7D%20=%20%5Cmathbf%7BU%7D%5E%7B%5Cmathsf%7BT%7D%7D%5Cmathbf%7BU%7D"></td>
<td style="text-align: left;">Only applies to positive semi-definite matrices (where <img src="https://latex.codecogs.com/png.latex?%5Clambda%20%5Cge%200">); related to LU decomposition</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>chol2inv()</code></td>
<td style="text-align: left;">computes <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BM%7D%5E%7B-1%7D"> from the results of <code>chol(M)</code></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>svd()</code></td>
<td style="text-align: left;">singular value decomposition</td>
<td style="text-align: left;">input <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D%5E%7B(m%20%5Ctimes%20n)%7D">; can compute PCA; <a href="https://bryanhanson.github.io/LearnPCA/">details</a></td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>eigen()</code></td>
<td style="text-align: left;">eigen decomposition</td>
<td style="text-align: left;">requires <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BM%7D%5E%7B(n%20%5Ctimes%20n)%7D">; can compute PCA; <a href="https://bryanhanson.github.io/LearnPCA/">details</a></td>
<td style="text-align: left;"></td>
</tr>
</tbody>
</table>
<p>One thing to notice is that there is no LU decomposition in base <code>R</code>. It is apparently used “under the hood” in <code>solve()</code> and there are versions available in contributed packages.<sup>2</sup></p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
What is the use of outer()?
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>As seen in <a href="https://chemospec.org/posts/2022-08-14-Linear-Alg-Notes/2022-08-14-Linear-Alg-Notes.html">Part 1</a> calling <code>outer()</code> on two vectors does indeed give the cross product (technically corresponding to <code>tcrossprod()</code>). This works because the defaults carry out multiplication.<sup>3</sup> However, looking through the <code>R</code> source code for uses of <code>outer()</code>, the function should really be thought of in simple terms as creating all possible combinations of the two inputs. In that way it is similar to <code>expand.grid()</code>. Here are two illustrations of the flexibility of <code>outer()</code>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate a grid of x,y values modified by a function</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from ?colorRamp</span></span>
<span id="cb1-3">m <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x,y) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sin</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>y)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(m)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> num [1:20, 1:20] 0.327 0.454 0.546 0.618 0.678 ...</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate all combinations of month and year</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># modified from ?outer; any function accepting 2 args can be used</span></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(month.abb, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2002</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> paste)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>      [,1]       [,2]       [,3]      
 [1,] "Jan 2000" "Jan 2001" "Jan 2002"
 [2,] "Feb 2000" "Feb 2001" "Feb 2002"
 [3,] "Mar 2000" "Mar 2001" "Mar 2002"
 [4,] "Apr 2000" "Apr 2001" "Apr 2002"
 [5,] "May 2000" "May 2001" "May 2002"
 [6,] "Jun 2000" "Jun 2001" "Jun 2002"
 [7,] "Jul 2000" "Jul 2001" "Jul 2002"
 [8,] "Aug 2000" "Aug 2001" "Aug 2002"
 [9,] "Sep 2000" "Sep 2001" "Sep 2002"
[10,] "Oct 2000" "Oct 2001" "Oct 2002"
[11,] "Nov 2000" "Nov 2001" "Nov 2002"
[12,] "Dec 2000" "Dec 2001" "Dec 2002"</code></pre>
</div>
</div>
<p>Bottom line: <code>outer()</code> can be used for linear algebra but its main uses lie elsewhere. You don’t need it for linear algebra!</p>
</div>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Using outer() for matrix multiplication
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>Here’s an interesting connection discussed in this <a href="https://en.wikipedia.org/wiki/Outer_product#Connection_with_the_matrix_product">Wikipedia entry</a>. In Part 1 we demonstrated how the repeated application of the dot product underpins matrix multiplication. The first row of the first matrix is multiplied element-wise by the first column of the second matrix, shown in red, to give the first element of the answer matrix. This process is then repeated so that every row (first matrix) has been multiplied by every column (second matrix).</p>
<p><span id="eq-1"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bmultline%7D%0A%5Cmathbf%7BA%7D%5Cmathbf%7BB%7D%20=%20%5Cmathbf%7BC%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0A%5Ctextcolor%7Bred%7D%7Ba_%7B11%7D%7D%20&amp;%20%5Ctextcolor%7Bred%7D%7Ba_%7B12%7D%7D%20&amp;%20%5Ctextcolor%7Bred%7D%7Ba_%7B13%7D%7D%20%5C%5C%0Aa_%7B21%7D%20&amp;%20a_%7B22%7D%20&amp;%20a_%7B23%7D%20%5C%5C%0A%5Cend%7Bbmatrix%7D%0A%5Cbegin%7Bbmatrix%7D%0A%5Ctextcolor%7Bred%7D%7Bb_%7B11%7D%7D%20&amp;%20b_%7B12%7D%20&amp;%20b_%7B13%7D%20%5C%5C%0A%5Ctextcolor%7Bred%7D%7Bb_%7B21%7D%7D%20&amp;%20b_%7B22%7D%20&amp;%20b_%7B23%7D%20%5C%5C%0A%5Ctextcolor%7Bred%7D%7Bb_%7B31%7D%7D%20&amp;%20b_%7B32%7D%20&amp;%20b_%7B33%7D%20%5C%5C%0A%5Cend%7Bbmatrix%7D%20=%20%5C%5C%0A%5Cbegin%7Bbmatrix%7D%0A%5Ctextcolor%7Bred%7D%7Ba_%7B11%7Db_%7B11%7D%20+%20a_%7B12%7Db_%7B21%7D%20+%20a_%7B13%7Db_%7B31%7D%7D%20&amp;%20a_%7B11%7Db_%7B12%7D%20+%20a_%7B12%7Db_%7B22%7D%20+%20a_%7B13%7Db_%7B32%7D%20&amp;%20a_%7B11%7Db_%7B13%7D%20+%20a_%7B12%7Db_%7B23%7D%20+%20a_%7B13%7Db_%7B33%7D%5C%5C%0Aa_%7B21%7Db_%7B11%7D%20+%20a_%7B22%7Db_%7B21%7D%20+%20a_%7B23%7Db_%7B31%7D%20&amp;%20a_%7B21%7Db_%7B12%7D%20+%20a_%7B22%7Db_%7B22%7D%20+%20a_%7B23%7Db_%7B32%7D%20&amp;%20a_%7B21%7Db_%7B13%7D%20+%20a_%7B22%7Db_%7B23%7D%20+%20a_%7B23%7Db_%7B33%7D%5C%5C%0A%5Cend%7Bbmatrix%7D%0A%5Cend%7Bmultline%7D%0A%5Ctag%7B1%7D"></span></p>
<p>If instead, we treat the first <em>column</em> of the first matrix as a column vector and outer multiply it by the first <em>row</em> of the second matrix as a row vector, we get the following matrix:</p>
<p><span id="eq-2"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bmultline%7D%0A%5Cbegin%7Bbmatrix%7D%0A%5Ctextcolor%7Bred%7D%7Ba_%7B11%7D%7D%20&amp;%20a_%7B12%7D%20&amp;%20a_%7B13%7D%20%5C%5C%0A%5Ctextcolor%7Bred%7D%7Ba_%7B21%7D%7D%20&amp;%20a_%7B22%7D%20&amp;%20a_%7B23%7D%20%5C%5C%0A%5Cend%7Bbmatrix%7D%0A%5Cbegin%7Bbmatrix%7D%0A%5Ctextcolor%7Bred%7D%7Bb_%7B11%7D%7D%20&amp;%20%5Ctextcolor%7Bred%7D%7Bb_%7B12%7D%7D%20&amp;%20%5Ctextcolor%7Bred%7D%7Bb_%7B13%7D%7D%20%5C%5C%0Ab_%7B21%7D%20&amp;%20b_%7B22%7D%20&amp;%20b_%7B23%7D%20%5C%5C%0Ab_%7B31%7D%20&amp;%20b_%7B32%7D%20&amp;%20b_%7B33%7D%20%5C%5C%0A%5Cend%7Bbmatrix%7D%20%5CRightarrow%0A%5Cbegin%7Bbmatrix%7D%0A%5Ctextcolor%7Bred%7D%7Ba_%7B11%7Db_%7B11%7D%7D%20&amp;%20%5Ctextcolor%7Bred%7D%7Ba_%7B11%7Db_%7B12%7D%7D%20&amp;%20%5Ctextcolor%7Bred%7D%7Ba_%7B11%7Db_%7B13%7D%7D%5C%5C%0A%5Ctextcolor%7Bred%7D%7Ba_%7B21%7Db_%7B11%7D%7D%20&amp;%20%5Ctextcolor%7Bred%7D%7Ba_%7B21%7Db_%7B12%7D%7D%20&amp;%20%5Ctextcolor%7Bred%7D%7Ba_%7B21%7Db_%7B13%7D%7D%5C%5C%0A%5Cend%7Bbmatrix%7D%0A%5Cend%7Bmultline%7D%0A%5Ctag%7B2%7D"></span></p>
<p>Now if you repeat this process for the second column of the first matrix and the second row of the second matrix, you get another matrix. And if you do it one more time using the third column/third row, you get a third matrix. If you then add these three matrices together, you get <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BC%7D"> as seen in Equation&nbsp;1. Notice how each element in <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BC%7D"> in Equation&nbsp;1 is a sum of three terms? Each of those terms comes from one of the three matrices just described.</p>
<p>To sum up, one can use the dot product on each row (first matrix) by each column (second matrix) to get the answer, or you can use the outer product on the columns sequentially (first matrix) by rows sequentially (second matrix) to get several matrices, which one then sums to get the answer. It’s pretty clear which option is less work and easier to follow, but I think it’s an interesting connection between operations. The first case corresponds to view “MM1” in <em>The Art of Linear Algebra</em> while the second case is view “MM4”. See this work by <a href="https://github.com/kenjihiranabe/The-Art-of-Linear-Algebra">Kenji Hiranabe</a>.</p>
<p>Here’s a simple proof in <code>R</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">M1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb5-2">M1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2]
[1,]    1    2
[2,]    3    4
[3,]    5    6</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">M2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">byrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb7-2">M2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2]
[1,]    7    8
[2,]    9   10</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1">tst1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> M1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> M2 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># uses dot product</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># next line is sum of sequential outer products:</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1st col M1 by 1st row M2 + 2nd col M1 by 2nd row M2</span></span>
<span id="cb9-4">tst2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(M1[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], M2[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(M1[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], M2[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,])</span>
<span id="cb9-5"></span>
<span id="cb9-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all.equal</span>(tst1, tst2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
</div>
</div>
</div>




<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><aside id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>For details see the discussion in <a href="https://chemospec.org/posts/2022-08-14-Linear-Alg-Notes/2022-08-14-Linear-Alg-Notes.html">Part 1</a>.↩︎</p></li>
<li id="fn2"><p>Discussed in this <a href="https://stackoverflow.com/q/51687808/633251">Stackoverflow question</a>, which also has an implementation.↩︎</p></li>
<li id="fn3"><p>In fact, for the default <code>outer()</code>, <code>FUN = "*"</code>, <code>outer()</code> actually calls <code>tcrossprod()</code>.↩︎</p></li>
</ol>
</aside><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Hanson, Bryan},
  title = {Notes on {Linear} {Algebra} {Part} 3},
  date = {2022-09-10},
  url = {http://chemospec.org/posts/2022-09-10-Linear-Alg-Notes-Pt3/Linear-Alg-Notes-Pt3.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2022. <span>“Notes on Linear Algebra Part 3.”</span>
September 10, 2022. <a href="http://chemospec.org/posts/2022-09-10-Linear-Alg-Notes-Pt3/Linear-Alg-Notes-Pt3.html">http://chemospec.org/posts/2022-09-10-Linear-Alg-Notes-Pt3/Linear-Alg-Notes-Pt3.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Linear Algebra</category>
  <guid>http://chemospec.org/posts/2022-09-10-Linear-Alg-Notes-Pt3/Linear-Alg-Notes-Pt3.html</guid>
  <pubDate>Sat, 10 Sep 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Notes on Linear Algebra Part 2</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2022-09-01-Linear-Alg-Notes-Pt2/Linear-Alg-Notes-Pt2.html</link>
  <description><![CDATA[ 



<section id="tldr" class="level4">
<h4 class="anchored" data-anchor-id="tldr">TL;DR</h4>
<ul>
<li>Linear algebra is complex. We need a way to penetrate the thicket. Here’s one.</li>
<li>Linear systems of equations are at the heart, not surprisingly, of linear algebra.</li>
<li>A key application is linear regression, which has a matrix solution.</li>
<li>Solving the needed equations requires inverting a matrix.</li>
<li>Inverting a matrix is more easily done after decomposing the matrix into upper and lower triangular matrices.</li>
<li>The upper and lower triangular matrices are individually easy to invert, giving access to the inverse of the original matrix.</li>
<li>Changes in notations and symbols as you move between presentations add significantly to the cognitive burden in learning this material.</li>
</ul>
<hr>
<p>For Part 1 of this series, see <a href="https://chemospec.org/posts/2022-08-14-Linear-Alg-Notes/2022-08-14-Linear-Alg-Notes.html">here</a>.</p>
<p>If you open a linear algebra text, it’s quickly apparent how complex the field is. There are so many special types of matrices, so many different decompositions of matrices. Why are all these needed? Should I care about null spaces? What’s really important? What are the threads that tie the different concepts together? As someone who is trying to improve their understanding of the field, especially with regard to its applications in chemometrics, it can be a tough slog.</p>
<p>In this post I’m going to try to demonstrate how some simple chemometric tasks can be solved using linear algebra. Though I cover some math here, the math is secondary right now – the conceptual connections are more important. I’m more interested in finding (and sharing) a path through the thicket of linear algebra. We can return as needed to expand the basic math concepts. The cognitive effort to work through the math details is likely a lot lower if we have a sense of the big picture.</p>
<p>In this post, matrices, including row and column vectors, will be shown in bold e.g.&nbsp;<img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> while scalars and variables will be shown in script, e.g.&nbsp;<img src="https://latex.codecogs.com/png.latex?n">. Variables used in <code>R</code> code will appear like <code>A</code>.</p>
</section>
<section id="systems-of-equations" class="level2">
<h2 class="anchored" data-anchor-id="systems-of-equations">Systems of Equations</h2>
<p>If you’ve had algebra, you have certainly run into “system of equations” such as the following:</p>
<p><span id="eq-1"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bmultline%7D%0Ax%20+%202y%20-3z%20=%203%20%5C%5C%0A2x%20-%20y%20-%20z%20=%2011%20%5C%5C%0A3x%20+%202y%20+%20z%20=%20-5%20%5C%5C%0A%5Cend%7Bmultline%7D%0A%5Ctag%7B1%7D"></span></p>
<p>In algebra, such systems can be solved several ways, for instance by isolating one or more variables and substituting, or geometrically (particularly for 2D systems, by plotting the lines and looking for the intersection). Once there are more than a few variables however, the only manageable way to solve them is with matrix operations, or more explicitly, linear algebra. <em>This sort of problem is the core of linear algebra, and the reason the field is called linear algebra.</em></p>
<p>To solve the system above using linear algebra, we have to write it in the form of matrices and column vectors:</p>
<p><span id="eq-2"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0A1%20&amp;%202%20&amp;%20-3%20%5C%5C%202%20&amp;%20-1%20&amp;%20-1%20%5C%5C%203%20&amp;%202%20&amp;%201%20%5C%5C%0A%5Cend%7Bbmatrix%7D%0A%5Cbegin%7Bbmatrix%7D%0Ax%20%5C%5C%20y%20%5C%5C%20z%0A%5Cend%7Bbmatrix%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0A3%20%5C%5C%2011%20%5C%5C%20-5%0A%5Cend%7Bbmatrix%7D%0A%5Ctag%7B2%7D"></span></p>
<p>or more generally</p>
<p><span id="eq-3"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BA%7D%5Cmathbf%7Bx%7D%20=%20%5Cmathbf%7Bb%7D%0A%5Ctag%7B3%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> is the matrix of coefficients, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D"> is the column vector of variable names<sup>1</sup> and <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bb%7D"> is a column vector of constants. Notice that these matrices are conformable:<sup>2</sup></p>
<p><span id="eq-4"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BA%7D%5E%7B3%20%5Ctimes%203%7D%5Cmathbf%7Bx%7D%5E%7B3%20%5Ctimes%201%7D%20=%20%5Cmathbf%7Bb%7D%5E%7B3%20%5Ctimes%201%7D%0A%5Ctag%7B4%7D"></span></p>
<p>To solve such a system, when we have <img src="https://latex.codecogs.com/png.latex?n"> unknowns, we need <img src="https://latex.codecogs.com/png.latex?n"> equations.<sup>3</sup> <em>This means that <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> has to be a square matrix, and square matrices play a special role in linear algebra.</em> I’m not sure this point is always conveyed clearly when this material is introduced. In fact, it seems like many texts on linear algebra seem to bury the lede.</p>
<p>To find the values of <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D%20=%20x,%20y,%20z"><sup>4</sup>, we can do a little rearranging following the rules of linear algebra and matrix operations. First we pre-multiply both sides by the inverse of <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D">, which then gives us the identity matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BI%7D">, which drops out.<sup>5</sup></p>
<p><span id="eq-5"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BA%7D%5E%7B-1%7D%5Cmathbf%7BA%7D%5Cmathbf%7Bx%7D%20=%20%5Cmathbf%7BI%7D%5Cmathbf%7Bx%7D%20=%20%5Cmathbf%7Bx%7D%20=%20%5Cmathbf%7BA%7D%5E%7B-1%7D%5Cmathbf%7Bb%7D%0A%5Ctag%7B5%7D"></span></p>
<p>So it’s all sounding pretty simple right? Ha. This is actually where things potentially break down. For this to work, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> must be invertible, which is not always the case.<sup>6</sup> If there is no inverse, then the system of equations either has no solution or infinite solutions. <em>So finding the inverse of a matrix, or discovering it doesn’t exist, is essential to solving these systems of linear equations.</em><sup>7</sup> More on this eventually, but for now, <em>we know <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> must be a square matrix and we hope it is invertible.</em></p>
</section>
<section id="a-key-application-linear-regression" class="level2">
<h2 class="anchored" data-anchor-id="a-key-application-linear-regression">A Key Application: Linear Regression</h2>
<p>We learn in algebra that a line takes the form <img src="https://latex.codecogs.com/png.latex?y%20=%20mx%20+%20b">. If one has measurements in the form of <img src="https://latex.codecogs.com/png.latex?x,%20y"> pairs that one expects to fit to a line, we need linear regression. Carrying out a linear regression is arguably one of the most important, and certainly a very common application of the linear systems described above. One can get the values of <img src="https://latex.codecogs.com/png.latex?m"> and <img src="https://latex.codecogs.com/png.latex?b"> by hand using algebra, but any computer will solve the system using a matrix approach.<sup>8</sup> Consider this data:</p>
<p><span id="eq-6"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bmatrix%7D%0Ax%20&amp;%20y%20%5C%5C%0A2.1%20&amp;%2011.8%20%5C%5C%0A0.9%20&amp;%207.2%20%5C%5C%0A3.9%20&amp;%2021.5%20%5C%5C%0A3.2%20&amp;%2017.2%20%5C%5C%0A5.1%20&amp;%2026.8%20%5C%5C%0A%5Cend%7Bmatrix%7D%0A%5Ctag%7B6%7D"></span></p>
<p>To express this in a matrix form, we recast</p>
<p><span id="eq-12"><img src="https://latex.codecogs.com/png.latex?%0Ay%20=%20mx%20+%20b%0A%5Ctag%7B7%7D"></span></p>
<p>into</p>
<p><span id="eq-10"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7By%7D%20=%20%5Cmathbf%7BX%7D%5Cmathbf%7B%5Cbeta%7D%20+%20%5Cmathbf%7B%5Cepsilon%7D%0A%5Ctag%7B8%7D"></span></p>
<p>where:</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7By%7D"> is the column vector of <img src="https://latex.codecogs.com/png.latex?y"> values. That seems sensible.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BX%7D"> is a matrix composed of a column of ones plus a column of the <img src="https://latex.codecogs.com/png.latex?x"> values. This is called a <a href="https://en.wikipedia.org/wiki/Design_matrix#Simple_linear_regression">design matrix</a>. At least here <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BX%7D"> contains only <img src="https://latex.codecogs.com/png.latex?x"> values as variables.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7B%5Cbeta%7D"> is a column vector of coefficients (including, as we will see, the values of <img src="https://latex.codecogs.com/png.latex?m"> and <img src="https://latex.codecogs.com/png.latex?b"> if we are thinking back <img src="https://latex.codecogs.com/png.latex?y%20=%20mx%20+%20b">).</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7B%5Cepsilon%7D"> is new, it is a column vector giving the errors at each point.</li>
</ul>
<p>With our data above, this looks like:</p>
<p><span id="eq-8"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bbmatrix%7D%0A11.8%20%5C%5C%0A7.2%20%5C%5C%0A21.5%20%5C%5C%0A17.2%20%5C%5C%0A26.8%20%5C%5C%0A%5Cend%7Bbmatrix%7D%0A=%0A%5Cbegin%7Bbmatrix%7D%0A1%20&amp;%202.1%20%5C%5C%0A1%20&amp;%200.9%20%5C%5C%0A1%20&amp;%203.9%20%5C%5C%0A1%20&amp;%203.2%20%5C%5C%0A1%20&amp;%205.1%20%5C%5C%0A%5Cend%7Bbmatrix%7D%0A%5Cbegin%7Bbmatrix%7D%0A%5Cbeta_0%20%5C%5C%20%5Cbeta_1%0A%5Cend%7Bbmatrix%7D%0A+%0A%5Cbegin%7Bbmatrix%7D%0A%5Cepsilon_1%20%5C%5C%20%5Cepsilon_2%20%5C%5C%20%5Cepsilon_3%20%5C%5C%20%5Cepsilon_4%20%5C%5C%20%5Cepsilon_5%0A%5Cend%7Bbmatrix%7D%0A%5Ctag%7B9%7D"></span></p>
<p>If we multiply this out, each row works out to be an instance of <img src="https://latex.codecogs.com/png.latex?y_i%20=%20%5Cbeta_1%20x_i%20+%20%5Cbeta_0">. Hopefully you can appreciate that <img src="https://latex.codecogs.com/png.latex?%5Cbeta_1"> corresponds to <img src="https://latex.codecogs.com/png.latex?m"> and <img src="https://latex.codecogs.com/png.latex?%5Cbeta_0"> corresponds to <img src="https://latex.codecogs.com/png.latex?b">.<sup>9</sup></p>
<p>This looks similar to <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D%5Cmathbf%7Bx%7D%20=%20%5Cmathbf%7Bb%7D"> seen in Equation&nbsp;3, if you set <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bb%7D"> to <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7By%7D">, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> to <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BX%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D"> to <img src="https://latex.codecogs.com/png.latex?%5Cbeta">:</p>
<p><span id="eq-11"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Cmathbf%7Bb%7D%20&amp;%5Capprox%20%5Cmathbf%7BA%7D%5Cmathbf%7Bx%7D%20%5C%5C%0A%5Cdownarrow%20&amp;%5Cphantom%7B%5Capprox%7D%20%5C;%20%5Cdownarrow%20%5C;%20%5Cdownarrow%20%5C%5C%0A%5Cmathbf%7By%7D%20&amp;%5Capprox%20%5Cmathbf%7BX%7D%5Cmathbf%7B%5Cbeta%7D%20%5C%5C%0A%5Cend%7Balign%7D%0A%5Ctag%7B10%7D"></span></p>
<p>This contortion of symbols is pretty nasty, but honestly not uncommon when moving about in the world of linear algebra.</p>
<p>As it is composed of real data, presumably with measurement errors, there is not an exact solution to <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D%5Cmathbf%7Bx%7D%20=%20%5Cmathbf%7Bb%7D"> due to the error term. There is however, an approximate solution, which is what is meant when we say we are looking for the line of best fit. This is how linear regression is carried out on a computer. The relevant equation is:</p>
<p><span id="eq-9"><img src="https://latex.codecogs.com/png.latex?%0A%5Chat%7B%5Cbeta%7D%20=%20(%5Cmathbf%7BX%7D%5E%7B%5Cmathsf%7BT%7D%7D%5Cmathbf%7BX%7D)%5E%7B-1%7D%5Cmathbf%7BX%7D%5E%7B%5Cmathsf%7BT%7D%7Dy%0A%5Ctag%7B11%7D"></span></p>
<p>The key point here is that once again we need to invert a matrix to solve this. The details of where Equation&nbsp;11 comes from are covered in a number of places, but I will note here that <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Cbeta%7D"> refers to the best estimate of <img src="https://latex.codecogs.com/png.latex?%5Cbeta">.<sup>10</sup></p>
</section>
<section id="inverting-matrices" class="level2">
<h2 class="anchored" data-anchor-id="inverting-matrices">Inverting Matrices</h2>
<p>We now have two examples where inverting a matrix is a key step: solving a system of linear equations, and approximating the solution to a system of linear equations (the regression case). These cases are not outliers, the ability to invert a matrix is very important. So how do we do this? The LU decomposition can do it, and is widely used so worth spending some time on. A decomposition is the process of breaking a matrix into pieces that are easier to handle, or that give us special insight, or both. If you are a chemometrician you have almost certainly carried out Principal Components Analysis (PCA). Under the hood, PCA requires either a singular value decomposition, or an eigen decomposition (more info <a href="https://bryanhanson.github.io/LearnPCA/">here</a>).</p>
<p>So, about the LU decomposition: it breaks a matrix into two matrices, <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BL%7D">, a “lower triangular matrix”, and <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BU%7D">, an “upper triangular matrix”. These special matrices contain only zeros except along the diagonal and the entries below it (in the lower case), or along the diagonal and the entries above it (in the upper case). The advantage of triangular matrices is that they are very easy to invert (all those zeros make many terms drop out). So the LU decomposition breaks the tough job of inverting <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> into two easier jobs.</p>
<p><span id="eq-12"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Cmathbf%7BA%7D%20&amp;=%20%5Cmathbf%7BL%7D%5Cmathbf%7BU%7D%20%5C%5C%0A%5Cmathbf%7BA%7D%5E%7B-1%7D%20&amp;=%20(%5Cmathbf%7BL%7D%5Cmathbf%7BU%7D)%5E%7B-1%7D%20%5C%5C%0A%5Cmathbf%7BA%7D%5E%7B-1%7D%20&amp;=%20%5Cmathbf%7BU%7D%5E%7B-1%7D%5Cmathbf%7BL%7D%5E%7B-1%7D%20%5C%5C%0A%5Cend%7Balign%7D%0A%5Ctag%7B12%7D"></span></p>
<p>When all is done, we only need to figure out <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BU%7D%5E%7B-1%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BL%7D%5E%7B-1%7D"> which as mentioned is straightforward.<sup>11</sup></p>
<p>To summarize, if we want to solve a system of equations we need to carry out matrix inversion, which is turn is much easier to do if one uses the LU decomposition to get two easy to invert triangular matrices. I hope you are beginning to see how pieces of linear algebra fit together, and why it might be good to learn more.</p>
</section>
<section id="r-functions" class="level2">
<h2 class="anchored" data-anchor-id="r-functions">R Functions</h2>
<section id="inverting-matrices-1" class="level3">
<h3 class="anchored" data-anchor-id="inverting-matrices-1">Inverting Matrices</h3>
<p>Let’s look at how <code>R</code> does these operations, and check our understanding along the way. <code>R</code> makes this really easy. We’ll start with the issue of invertibility. Let’s create a matrix for testing.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1">A1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb1-2">A1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]    3   11   -5
[2,]    5    2    2
[3,]   -1    0    5</code></pre>
</div>
</div>
<p>In the <code>matlib</code> package there is a function <code>inv</code> that inverts matrices. It returns the inverted matrix, which we can verify by multiplying the inverted matrix by the original matrix to give the identity matrix (if inversion was successful). <code>diag(3)</code> creates a 3 x 3 matrix with 1’s on the diagonal, in other words an identity matrix.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"matlib"</span>)</span>
<span id="cb3-2">A1_inv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inv</span>(A1)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all.equal</span>(A1_inv <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> A1, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)) </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Mean relative difference: 8.999999e-08"</code></pre>
</div>
</div>
<p>The difference here is really small, but not zero. Let’s use a different function, <code>solve</code> which is part of base <code>R</code>. If <code>solve</code> is given a single matrix, it returns the inverse of that matrix.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">A1_solve <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solve</span>(A1) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> A1</span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all.equal</span>(A1_solve, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diag</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
<p>That’s a better result. Why are there differences? <code>inv</code> uses a method called Gaussian elimination which is similar to how one would invert a matrix using pencil and paper. On the other hand, <code>solve</code> uses the LU decomposition discussed earlier, and no matrix inversion is necessary. Looks like the LU decomposition gives a somewhat better numerical result.</p>
<p>Now let’s look at a different matrix, created by replacing the third column of <code>A1</code> with different values.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">A2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb7-2">A2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]    3   11    6
[2,]    5    2   10
[3,]   -1    0   -2</code></pre>
</div>
</div>
<p>And let’s compute its inverse using <code>solve</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solve</span>(A2)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>Error in solve.default(A2): system is computationally singular: reciprocal condition number = 6.71337e-19</code></pre>
</div>
</div>
<p>When <code>R</code> reports that <code>A2</code> is computationally singular, it is saying that it cannot be inverted. Why not? If you look at <code>A2</code>, notice that column 3 is a multiple of column 1. Anytime one column is a multiple of another, or one row is a multiple of another, then the matrix cannot be inverted because the rows or columns are not independent.<sup>12</sup> If this was a matrix of coefficients from an experimental measurement of variables, this would mean that some of your variables are not independent, they must be measuring the same underlying phenomenon.</p>
</section>
<section id="solving-systems-of-linear-equations" class="level3">
<h3 class="anchored" data-anchor-id="solving-systems-of-linear-equations">Solving Systems of Linear Equations</h3>
<p>Let’s solve the system from Equation&nbsp;2. It turns out that the <code>solve</code> function also handles this case, if you give it two arguments. Remember, <code>solve</code> is using the LU decomposition behind the scenes, no matrix inversion is required.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">A3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb11-2">A3</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]    1    2   -3
[2,]    2   -1   -1
[3,]    3    2    1</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(A3) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"z"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># naming the columns will label the answer</span></span>
<span id="cb13-2">b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb13-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solve</span>(A3, b)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> x  y  z 
 2 -4 -3 </code></pre>
</div>
</div>
<p>The answer is the values of <img src="https://latex.codecogs.com/png.latex?x,%20y,%20z"> that make the system of equations true.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
How does LU decomposition avoid inversion?
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>While we’ve emphasized the importance and challenges of inverting matrices, we’ve also pointed out that to solve a linear system there are alternatives to looking at the problem from the perspective of Equation&nbsp;5. Here’s an approach using the LU decomposition, starting with substituting <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> with <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BL%7D%5Cmathbf%7BU%7D">:</p>
<p><span id="eq-20"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BA%7D%5Cmathbf%7Bx%7D%20=%20%5Cmathbf%7BL%7D%5Cmathbf%7BU%7D%5Cmathbf%7Bx%7D%20=%20%5Cmathbf%7Bb%7D%0A%5Ctag%7B13%7D"></span></p>
<p>We want to solve for <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D"> the column vector of variables. To do so, define a new vector <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7By%7D%20=%20%5Cmathbf%7BU%7D%5Cmathbf%7Bx%7D"> and substitute it in:</p>
<p><span id="eq-21"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BL%7D%5Cmathbf%7BU%7D%5Cmathbf%7Bx%7D%20=%20%5Cmathbf%7BL%7D%5Cmathbf%7By%7D%20=%20%5Cmathbf%7Bb%7D%0A%5Ctag%7B14%7D"></span></p>
<p>Next we solve for <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7By%7D">. One way we could do this is to pre-multiply both sides by <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BL%7D%5E%7B-1%7D"> but we are looking for a way to avoid using the inverse. Instead, we evaluate <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BL%7D%5Cmathbf%7By%7D"> to give a series of expressions using the dot product (in other words plain matrix multiplication). Because <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BL%7D"> is lower triangular, many of the terms we might have gotten actually disappear because of the zero coefficients. What remains is simple enough that we can algebraically find each element of <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7By%7D"> starting from the first row (this is called forward substitution). Once we have <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7By%7D">, we can find <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D"> by solving <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7By%7D%20=%20%5Cmathbf%7BU%7D%5Cmathbf%7Bx%7D"> using a similar approach, but working from the last row upward (this is backward substitution). This is a good illustration of the utility of triangular matrices: some operations can move from the linear algebra realm to the algebra realm. <a href="https://en.wikipedia.org/wiki/Triangular_matrix#Forward_and_back_substitution">Wikipedia</a> has a good illustration of forward and backward substitution.</p>
</div>
</div>
</div>
</section>
<section id="computing-linear-regression" class="level3">
<h3 class="anchored" data-anchor-id="computing-linear-regression">Computing Linear Regression</h3>
<p>Let’s compute the values for <img src="https://latex.codecogs.com/png.latex?m,%20b"> in our regression data shown in Equation&nbsp;6. First, let’s set up the needed matrices and plot the data since visualizing the data is always a good idea.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb15-1">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">11.8</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">21.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">17.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">26.8</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-2">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># design matrix</span></span>
<span id="cb15-3">X</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2]
[1,]    1  2.1
[2,]    1  0.9
[3,]    1  3.9
[4,]    1  3.2
[5,]    1  5.1</code></pre>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(X[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># column 2 of X has the x values</span></span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2022-09-01-Linear-Alg-Notes-Pt2/Linear-Alg-Notes-Pt2_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The value of <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Cbeta%7D"> can be found via Equation&nbsp;11:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solve</span>((<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(X) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> X)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(X) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> y</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>         [,1]
[1,] 2.399618
[2,] 4.769862</code></pre>
</div>
</div>
<p>The first value is for <img src="https://latex.codecogs.com/png.latex?b"> or <img src="https://latex.codecogs.com/png.latex?%5Cbeta_0"> or intecept, the second value is for <img src="https://latex.codecogs.com/png.latex?m"> or <img src="https://latex.codecogs.com/png.latex?%5Cbeta_1"> or slope.</p>
<p>Let’s compare this answer to <code>R</code>’s built-in <code>lm</code> function (for linear model):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1">fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> X[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb20-2">fit</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = y ~ X[, 2])

Coefficients:
(Intercept)       X[, 2]  
       2.40         4.77  </code></pre>
</div>
</div>
<p>We have good agreement! If you care to learn about the goodness of the fit, the residuals etc, then you can look at the help file <code>?lm</code> and <code>str(fit)</code>. <code>lm</code> returns pretty much all one needs to know about the results, but if you wish to calculate all the interesting values yourself you can do so by manipulating Equation&nbsp;11 and its relatives.</p>
<p>Finally, let’s plot the line of best fit found by <code>lm</code> to make sure everything looks reasonable.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(X[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>)</span>
<span id="cb22-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coef =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(fit), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="http://chemospec.org/posts/2022-09-01-Linear-Alg-Notes-Pt2/Linear-Alg-Notes-Pt2_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<hr>
<p>That’s all for now, and a lot to digest. I hope you are closer to finding your own path through linear algebra. Remember that investing in learning the fundamentals prepares you for tackling the more complex topics. Thanks for reading!</p>
</section>
</section>
<section id="annotated-bibliography" class="level2">
<h2 class="anchored" data-anchor-id="annotated-bibliography">Annotated Bibliography</h2>
<p>These are the main sources I relied on for this post.</p>
<ul>
<li><em>The No Bullshit Guide to Linear Algebra</em> by <a href="https://minireference.com">Ivan Savov</a>.
<ul>
<li>Section 1.15: Solving systems of linear equations.</li>
<li>Section 6.6: LU decomposition.</li>
</ul></li>
<li><em>Linear Algebra: step by step</em> by Kuldeep Singh, Oxford Univerity Press, 2014.
<ul>
<li>Section 1.8.5: Singluar (non-invertible) matrices mean there is no solution or infinite solutions to the linear system. For graphical illustration see sections 1.1.3 and 1.7.2.</li>
<li>Section 1.6.4: Definition of the inverse and conceptual meaning.</li>
<li>Section 1.8.4: Solving linear systems when <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> is invertible.</li>
<li>Section 6.4: LU decomposition.</li>
<li>Section 6.4.3: Solving linear systems without using inversion, via the LU decomposition.</li>
</ul></li>
<li><em>Linear Models with R</em> by Julian J. Faraway, Chapman and Hall/CRC, 2005.
<ul>
<li>Sections 2.1-2.4: Linear regression from the algebraic and matrix perspectives, derivation of Equation&nbsp;11.</li>
</ul></li>
<li>The vignettes of the <code>matlib</code> package are very helpful.</li>
</ul>


</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><aside id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Here we have the slightly unfortunate circumstance where symbol conventions cannot be completely harmonized. We are saying that <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D%20=%20x,%20y,%20z"> which seems a bit silly since vector <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D"> contains <img src="https://latex.codecogs.com/png.latex?y"> and <img src="https://latex.codecogs.com/png.latex?z"> components in addition to <img src="https://latex.codecogs.com/png.latex?x">. I ask you to accept this for two reasons: First, most linear algebra texts use the symbols in Equation&nbsp;3 as the general form for this topic, so if you go to study this further that’s what you’ll find. Second, I feel like using <img src="https://latex.codecogs.com/png.latex?x">, <img src="https://latex.codecogs.com/png.latex?y"> and <img src="https://latex.codecogs.com/png.latex?z"> in Equation&nbsp;1 will be familar to the most people. If you want to get rid of this infelicity, then you have to write Equation&nbsp;1 (in part) as <img src="https://latex.codecogs.com/png.latex?x_1%20+%202x_2%20+%203x_3%20=%203"> which I think clouds the interpretation. Perhaps however you feel my choices are equally bad.↩︎</p></li>
<li id="fn2"><p>Conformable means that the number of columns in the first matrix equals the number of rows in the second matrix. This is necessary because of the dot product definition of matrix multiplication. More details <a href="https://chemospec.org/posts/2022-08-14-Linear-Alg-Notes/2022-08-14-Linear-Alg-Notes.html">here</a>.↩︎</p></li>
<li id="fn3"><p>Remember “story problems” where you had to read closely to express what was given in terms of equations, and find enough equations? “If Sally bought 10 pieces of candy and a drink for $1.50…”↩︎</p></li>
<li id="fn4"><p>We could also write this as <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7Bx%7D%20=%20(x,%20y,%20z)%5E%5Cmathsf%7BT%7D"> to emphasize that it is a column vector. One might prefer this because the only vector one can write in a row of text is a row vector, so if we mean a column vector many people would prefer to write it transposed.↩︎</p></li>
<li id="fn5"><p>The inverse of a matrix is analogous to dividing a variable by itself, since it leads to that variable canceling out and thus simplifying the equation. However, strictly speaking there is no operation that qualifies as division in the matrix world.↩︎</p></li>
<li id="fn6"><p>For a matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> to be invertible, there must exist another matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BB%7D"> such that <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D%5Cmathbf%7BB%7D%20=%20%5Cmathbf%7BB%7D%5Cmathbf%7BA%7D%20=%20%5Cmathbf%7BI%7D">. However, this definition doesn’t offer any clues about how we might find the inverse.↩︎</p></li>
<li id="fn7"><p>In truth, there are other ways to solve <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D%5Cmathbf%7Bx%7D%20=%20%5Cmathbf%7Bb%7D"> that don’t require inversion of a matrix. However, if a matrix <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> isn’t invertible, these other methods will also break down. We’ll demonstrate this later when we talk about the LU decomposition.↩︎</p></li>
<li id="fn8"><p>A very good discussion of the algebraic approach is available <a href="https://en.wikipedia.org/wiki/Simple_linear_regression#Fitting_the_regression_line">here</a>.↩︎</p></li>
<li id="fn9"><p>This is another example of an infelicity of symbol conventions. The typical math/statistics text symbols are not the same as the symbols a student in Physics 101 would likely encounter.↩︎</p></li>
<li id="fn10"><p>The careful reader will note that the data set shown in Equation&nbsp;9 is not square, there are more observations (rows) than variables (columns). This is fine and desireable for a linear regression, we don’t want to use just two data points as that would have no error but not necessarily be accurate. However, only square matrices have inverses, so what’s going on here? In practice, what’s happening is we are using something called a pseudoinverse. The first part of the right side of Equation&nbsp;11 is in fact the pseudoinverse: <img src="https://latex.codecogs.com/png.latex?(%5Cmathbf%7BX%7D%5E%7B%5Cmathsf%7BT%7D%7D%5Cmathbf%7BX%7D)%5E%7B-1%7D%5Cmathbf%7BX%7D%5E%7B%5Cmathsf%7BT%7D%7D">. Perhaps we’ll cover this in a future post.↩︎</p></li>
<li id="fn11"><p>The switch in the order of matrices on the last line of Equation&nbsp;12 is one of the properties of the inverse operator.↩︎</p></li>
<li id="fn12"><p>This means that the rank of the matrix is less than the number of columns. You can get the rank of a matrix by counting the number of non-zero eigenvalues via <code>eigen(A2)$values</code>, which in this case gives 8.9330344, -5.9330344, -3.5953271^{-16}. There are only two non-zero values, so the rank is two. Perhaps in another post we’ll discuss this in more detail.↩︎</p></li>
</ol>
</aside><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Hanson, Bryan},
  title = {Notes on {Linear} {Algebra} {Part} 2},
  date = {2022-09-01},
  url = {http://chemospec.org/posts/2022-09-01-Linear-Alg-Notes-Pt2/Linear-Alg-Notes-Pt2.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2022. <span>“Notes on Linear Algebra Part 2.”</span>
September 1, 2022. <a href="http://chemospec.org/posts/2022-09-01-Linear-Alg-Notes-Pt2/Linear-Alg-Notes-Pt2.html">http://chemospec.org/posts/2022-09-01-Linear-Alg-Notes-Pt2/Linear-Alg-Notes-Pt2.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Linear Algebra</category>
  <guid>http://chemospec.org/posts/2022-09-01-Linear-Alg-Notes-Pt2/Linear-Alg-Notes-Pt2.html</guid>
  <pubDate>Thu, 01 Sep 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Notes on Linear Algebra Part 1</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2022-08-14-Linear-Alg-Notes/2022-08-14-Linear-Alg-Notes.html</link>
  <description><![CDATA[ 



<p>If you are already familiar with much of linear algebra, as well as the relevant functions in <code>R</code>, read no further and do something else!</p>
<p>If you are like me, you’ve had <em>no</em> formal training in linear algebra, which means you learn what you need to when you need to use it. Eventually, you cobble together some hard-won knowledge. That’s good, because almost everything in chemometrics involves linear algebra.</p>
<p>This post is essentially a set of personal notes about the dot product and the cross product, two important manipulations in linear algebra. I’ve tried to harmonize things I learned way back in college physics and math courses, and integrate information I’ve found in various sources I have leaned on more recently. Without a doubt, the greatest impediment to really understanding this material is the use of multiple terminology and notations. I’m going to try really hard to be clear and to the point in my dicussion.</p>
<p>The main sources I’ve relied on are:</p>
<ul>
<li><em>The No Bullshit Guide to Linear Algebra</em> by <a href="https://minireference.com">Ivan Savov</a>. This is by far my favorite treatment of linear algebra. It gets to the point quickly.</li>
<li>The Wikipedia pages on <a href="https://en.wikipedia.org/wiki/Dot_product">dot product</a>, <a href="https://en.wikipedia.org/wiki/Cross_product">cross product</a> and <a href="https://en.wikipedia.org/wiki/Outer_product">outer product</a>.</li>
</ul>
<p>Let’s get started. For sanity and consistency, let’s define two 3D vectors and two matrices to illustrate our examples. Most of the time I’m going to write vectors with an arrow over the name, as a nod to the treatment usually given in a physics course. This reminds us that we are thinking about a quantity with direction and magnitude in some coordinate system, something geometric. Of course in the <code>R</code> language a vector is simply a list of numbers with the same data type; <code>R</code> doesn’t care if a vector is a vector in the geometric sense or a list of states.</p>
<p><span id="eq-def-u"><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bu%7D%20=%20(u_x,%20u_y,%20u_z)%0A%5Ctag%7B1%7D"></span></p>
<p><span id="eq-def-v"><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bv%7D%20=%20(v_x,%20v_y,%20v_z)%0A%5Ctag%7B2%7D"></span></p>
<p><span id="eq-def-A"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BA%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0Aa_%7B11%7D%20&amp;%20a_%7B12%7D%20&amp;%20a_%7B13%7D%20%5C%5C%0Aa_%7B21%7D%20&amp;%20a_%7B22%7D%20&amp;%20a_%7B23%7D%20%5C%5C%0A%5Cend%7Bbmatrix%7D%0A%5Ctag%7B3%7D"></span></p>
<p><span id="eq-def-B"><img src="https://latex.codecogs.com/png.latex?%0A%5Cmathbf%7BB%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0Ab_%7B11%7D%20&amp;%20b_%7B12%7D%20&amp;%20b_%7B13%7D%20%5C%5C%0Ab_%7B21%7D%20&amp;%20b_%7B22%7D%20&amp;%20b_%7B23%7D%20%5C%5C%0Ab_%7B31%7D%20&amp;%20b_%7B32%7D%20&amp;%20b_%7B33%7D%20%5C%5C%0A%5Cend%7Bbmatrix%7D%0A%5Ctag%7B4%7D"></span></p>
<section id="dot-product" class="level2">
<h2 class="anchored" data-anchor-id="dot-product">Dot Product</h2>
<section id="terminology" class="level3">
<h3 class="anchored" data-anchor-id="terminology">Terminology</h3>
<p>The dot product goes by these other names: inner product, scalar product. Typical notations include:<sup>1</sup></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D%20%5Ccdot%20%5Cvec%7Bv%7D"> (the <img src="https://latex.codecogs.com/png.latex?%5Ccdot"> is the origin of the name “dot” product)</li>
<li><img src="https://latex.codecogs.com/png.latex?u%20%5Ccdot%20v"></li>
<li><img src="https://latex.codecogs.com/png.latex?u%5E%5Cmathsf%7BT%7Dv"> (when thinking of the vectors as column vectors)</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Clangle%20u,%20v%20%5Crangle"> (typically used when <img src="https://latex.codecogs.com/png.latex?u,%20v"> are complex)</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Clangle%20u%20%7C%20v%20%5Crangle"></li>
</ul>
</section>
<section id="formulas" class="level3">
<h3 class="anchored" data-anchor-id="formulas">Formulas</h3>
<p>There are two main formulas for the dot product with <em>vectors</em>, the algebraic formula (Equation&nbsp;5) and the geometric formula (Equation&nbsp;6).</p>
<p><span id="eq-dp1"><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bu%7D%20%5Ccdot%20%5Cvec%7Bv%7D%20=%20%5Csum%7Bu_i%20v_i%7D%0A%5Ctag%7B5%7D"></span></p>
<p><span id="eq-dp2"><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bu%7D%20%5Ccdot%20%5Cvec%7Bv%7D%20=%20%5C%7C%20%5Cvec%7Bu%7D%20%5C%7C%20%5C%7C%20%5Cvec%7Bv%7D%20%5C%7C%20cos%20%5Ctheta%0A%5Ctag%7B6%7D"></span></p>
<p><img src="https://latex.codecogs.com/png.latex?%5C%7C%20%5Cvec%7Bx%7D%20%5C%7C"> refers to the <img src="https://latex.codecogs.com/png.latex?L_2"> or Euclidian norm, namely the length of the vector:<sup>2</sup></p>
<p><span id="eq-L2"><img src="https://latex.codecogs.com/png.latex?%0A%5C%7C%20%5Cvec%7Bx%7D%20%5C%7C%20=%20%20%5Csqrt%7Bx%5E%7B2%7D_1%20+%20%5Cldots%20+%20x%5E%7B2%7D_n%7D%0A%5Ctag%7B7%7D"></span></p>
<p>The result of the dot product is a scalar. The dot product is also commutative: <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D%20%5Ccdot%20%5Cvec%7Bv%7D%20=%20%5Cvec%7Bv%7D%20%5Ccdot%20%5Cvec%7Bu%7D">.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Watch out when using row or column vectors
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>From the perspective of <em>matrices</em>, if we think of <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bv%7D"> as <strong>column vectors</strong> with dimensions 3 x 1, then transposing <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D"> gives us conformable matrices and we find the result of matrix multiplication is the dot product (compare to Equation&nbsp;5):</p>
<p><span id="eq-dp3"><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bu%7D%20%5Ccdot%20%5Cvec%7Bv%7D%20=%20%5Cvec%7Bu%7D%5E%5Cmathsf%7BT%7D%20%5C%20%5Cvec%7Bv%7D%20=%20%5Cbegin%7Bbmatrix%7D%20u_x%20&amp;%20u_y%20&amp;%20u_z%5Cend%7Bbmatrix%7D%20%5Cbegin%7Bbmatrix%7D%20v_x%20%5C%5C%20v_y%20%5C%5C%20v_z%20%5Cend%7Bbmatrix%7D%20=%20u_x%20v_x%20+%20u_y%20v_y%20+%20u_z%20v_z%0A%5Ctag%7B8%7D"></span></p>
<p>Even though this is matrix multiplication, the answer is still a scalar.</p>
<p>Now, rather confusingly, if we think of <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bv%7D"> as <strong>row vectors</strong>, and we transpose <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bv%7D">,then we get the dot product:</p>
<p><span id="eq-dp5"><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bu%7D%20%5Ccdot%20%5Cvec%7Bv%7D%20=%20%5Cvec%7Bu%7D%20%5C%20%5Cvec%7Bv%7D%5E%5Cmathsf%7BT%7D%20=%20%5Cbegin%7Bbmatrix%7D%20u_x%20&amp;%20u_y%20&amp;%20u_z%5Cend%7Bbmatrix%7D%20%5Cbegin%7Bbmatrix%7D%20v_x%20%5C%5C%20v_y%20%5C%5C%20v_z%20%5Cend%7Bbmatrix%7D%20=%20u_x%20v_x%20+%20u_y%20v_y%20+%20u_z%20v_z%0A%5Ctag%7B9%7D"></span></p>
<p>Equations Equation&nbsp;8 and Equation&nbsp;9 can be a source of real confusion at first. They give the impression that the dot product can be either <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D%5E%5Cmathsf%7BT%7D%20%5C%20%5Cvec%7Bv%7D"> or <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D%20%5C%20%5Cvec%7Bv%7D%5E%5Cmathsf%7BT%7D">. <em>However, this is only true in the limited contexts defined above.</em> To summarize:</p>
<ul>
<li>Thinking of the vectors as <em>column vectors</em> with dimensions <img src="https://latex.codecogs.com/png.latex?n%20%5Ctimes%201"> then one can use <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D%5E%5Cmathsf%7BT%7D%20%5C%20%5Cvec%7Bv%7D"></li>
<li>Thinking of the vectors as <em>row vectors</em> with dimensions <img src="https://latex.codecogs.com/png.latex?1%20%5Ctimes%20n"> then one can use <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D%20%5C%20%5Cvec%7Bv%7D%5E%5Cmathsf%7BT%7D"></li>
</ul>
<p>Unfortunately I think this distinction is not always clearly made by authors, and is a source of great confusion to linear algebra learners. <strong>Be careful when working with row and column vectors.</strong></p>
</div>
</div>
</div>
</section>
<section id="matrix-multiplication" class="level3">
<h3 class="anchored" data-anchor-id="matrix-multiplication">Matrix Multiplication</h3>
<p>Suppose we wanted to compute <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D%5Cmathbf%7BB%7D%20=%20%5Cmathbf%7BC%7D">.<sup>3</sup> We use the idea of row and column vectors to accomplish this task. In the process, we discover that matrix multiplication is a series of dot products:</p>
<p><span id="eq-dp4"><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bmultline%7D%0A%5Cmathbf%7BA%7D%5Cmathbf%7BB%7D%20=%20%5Cmathbf%7BC%7D%20=%0A%5Cbegin%7Bbmatrix%7D%0A%5Ctextcolor%7Bred%7D%7Ba_%7B11%7D%7D%20&amp;%20%5Ctextcolor%7Bred%7D%7Ba_%7B12%7D%7D%20&amp;%20%5Ctextcolor%7Bred%7D%7Ba_%7B13%7D%7D%20%5C%5C%0Aa_%7B21%7D%20&amp;%20a_%7B22%7D%20&amp;%20a_%7B23%7D%20%5C%5C%0A%5Cend%7Bbmatrix%7D%0A%5Cbegin%7Bbmatrix%7D%0A%5Ctextcolor%7Bred%7D%7Bb_%7B11%7D%7D%20&amp;%20b_%7B12%7D%20&amp;%20b_%7B13%7D%20%5C%5C%0A%5Ctextcolor%7Bred%7D%7Bb_%7B21%7D%7D%20&amp;%20b_%7B22%7D%20&amp;%20b_%7B23%7D%20%5C%5C%0A%5Ctextcolor%7Bred%7D%7Bb_%7B31%7D%7D%20&amp;%20b_%7B32%7D%20&amp;%20b_%7B33%7D%20%5C%5C%0A%5Cend%7Bbmatrix%7D%20=%20%5C%5C%0A%5Cbegin%7Bbmatrix%7D%0A%5Ctextcolor%7Bred%7D%7Ba_%7B11%7Db_%7B11%7D%20+%20a_%7B12%7Db_%7B21%7D%20+%20a_%7B13%7Db_%7B31%7D%7D%20&amp;%20a_%7B11%7Db_%7B12%7D%20+%20a_%7B12%7Db_%7B22%7D%20+%20a_%7B13%7Db_%7B32%7D%20&amp;%20a_%7B11%7Db_%7B13%7D%20+%20a_%7B12%7Db_%7B23%7D%20+%20a_%7B13%7Db_%7B33%7D%5C%5C%0Aa_%7B21%7Db_%7B11%7D%20+%20a_%7B22%7Db_%7B21%7D%20+%20a_%7B23%7Db_%7B31%7D%20&amp;%20a_%7B21%7Db_%7B12%7D%20+%20a_%7B22%7Db_%7B22%7D%20+%20a_%7B23%7Db_%7B32%7D%20&amp;%20a_%7B21%7Db_%7B13%7D%20+%20a_%7B22%7Db_%7B23%7D%20+%20a_%7B23%7Db_%7B33%7D%5C%5C%0A%5Cend%7Bbmatrix%7D%0A%5Cend%7Bmultline%7D%0A%5Ctag%7B10%7D"></span></p>
<p>The red color shows how the dot product of the first row of <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D"> and the first column of <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BB%7D"> gives the first entry in <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BC%7D">. Every entry in <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BC%7D"> results from a dot product. Every entry is a scalar, embedded in a matrix.</p>
</section>
<section id="what-can-we-do-with-the-dot-product" class="level3">
<h3 class="anchored" data-anchor-id="what-can-we-do-with-the-dot-product">What Can We Do With the Dot Product?</h3>
<ul>
<li>Determine the angle between two vectors, as in Equation&nbsp;6.</li>
<li>As such, determine if two vectors intersect at a right angle (at least in 2-3D). More generally, two vectors of any dimension are <em>orthogonal</em> if their dot product is zero.</li>
<li>Matrix multiplication, when applied repeatedly.</li>
<li>Compute the length of a vector, via <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7Bv%20%5Ccdot%20v%7D"></li>
<li>Compute the projection of one vector on another, for instance how much of a force is along the <img src="https://latex.codecogs.com/png.latex?x">-direction? A verbal interpretation of <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D%20%5Ccdot%20%5Cvec%7Bv%7D"> is it gives the amount of <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bv%7D"> in the direction of <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D">.</li>
</ul>
</section>
</section>
<section id="cross-product" class="level2">
<h2 class="anchored" data-anchor-id="cross-product">Cross Product</h2>
<section id="terminology-and-notation" class="level3">
<h3 class="anchored" data-anchor-id="terminology-and-notation">Terminology and Notation</h3>
<p>The cross product goes by these other names: outer product<sup>4</sup>, tensor product, vector product.</p>
</section>
<section id="formulas-1" class="level3">
<h3 class="anchored" data-anchor-id="formulas-1">Formulas</h3>
<p>The cross product of two vectors returns a vector rather than a scalar. Vectors are defined in terms of a <em>basis</em> which is a coordinate system. Earlier, when we defined <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D%20=%20(u_x,%20u_y,%20u_z)"> it was intrinsically defined in terms of the standard basis set <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bi%7D,%20%5Chat%7Bj%7D,%20%5Chat%7Bk%7D"> (in some fields this would be called the unit coordinate system). Thus a fuller definition of <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D"> would be:</p>
<p><span id="eq-cp1"><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bu%7D%20=%20u_x%5Chat%7Bi%7D%20+%20u_y%5Chat%7Bj%7D%20+%20u_z%5Chat%7Bk%7D%0A%5Ctag%7B11%7D"></span></p>
<p>In terms of <em>vectors</em>, the cross product is defined as: <span id="eq-cp2"><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bu%7D%20%5Ctimes%20%5Cvec%7Bv%7D%20=%20(a_%7By%7Db_%7Bz%7D%20-%20a_%7Bz%7Db_%7By%7D)%5Chat%7Bi%7D%20+%20(a_%7Bz%7Db_%7Bx%7D%20-%20a_%7Bx%7Db_%7Bz%7D)%5Chat%7Bj%7D%20+%20(a_%7Bx%7Db_%7By%7D%20-a_%7By%7Db_%7Bx%7D)%5Chat%7Bk%7D%0A%5Ctag%7B12%7D"></span></p>
<p>In my opinion, this is not exactly intuitive, but there is a pattern to it: notice that the terms for <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bi%7D"> don’t involve the <img src="https://latex.codecogs.com/png.latex?x"> component. The details of how this result is computed relies on some properties of the basis set; this <a href="https://en.wikipedia.org/wiki/Cross_product#Coordinate_notation">Wikipedia</a> article has a nice explanation. We need not dwell on it however.</p>
<p>There is also a geometric formula for the cross product:</p>
<p><span id="eq-cp4"><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bu%7D%20%5Ctimes%20%5Cvec%7Bv%7D%20=%20%5C%7C%20%5Cvec%7Bu%7D%20%5C%7C%20%5C%7C%20%5Cvec%7Bv%7D%20%5C%7C%20sin%20%5Ctheta%20%5Chat%7Bn%7D%0A%5Ctag%7B13%7D"></span></p>
<p>where <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bn%7D"> is the unit vector perpendicular to the plane defined by <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bv%7D">. The direction of <img src="https://latex.codecogs.com/png.latex?%5Chat%7Bn%7D"> is defined by the <a href="https://en.wikipedia.org/wiki/Right-hand_rule">right-hand rule</a>. Because of this, the cross product is not commutative, i.e.&nbsp;<img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D%20%5Ctimes%20%5Cvec%7Bv%7D%20%5Cne%20%5Cvec%7Bv%7D%20%5Ctimes%20%5Cvec%7Bu%7D">. The cross product is however anti-commutative: <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D%20%5Ctimes%20%5Cvec%7Bv%7D%20=%20-%20(%5Cvec%7Bv%7D%20%5Ctimes%20%5Cvec%7Bu%7D)"></p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-2-contents" aria-controls="callout-2" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Cross product using column vectors
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-2" class="callout-2-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<p>As we did for the dot product, we can look at the cross product from the perspective of column vectors. Instead of transposing the first matrix as we did for the dot product, we transpose the second one: <span id="eq-cp3"><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bu%7D%20%5Ctimes%20%5Cvec%7Bv%7D%20=%20%5Cvec%7Bu%7D%20%5C%20%5Cvec%7Bv%7D%5E%5Cmathsf%7BT%7D%20=%20%5Cbegin%7Bbmatrix%7D%20u_x%20%5C%5C%20u_y%20%5C%5C%20u_z%5Cend%7Bbmatrix%7D%20%5Cbegin%7Bbmatrix%7D%20v_x%20&amp;%20v_y%20&amp;%20v_z%20%5Cend%7Bbmatrix%7D%20=%20%5Cbegin%7Bbmatrix%7D%20u_%7Bx%7Dv_%7Bx%7D%20&amp;%20u_%7Bx%7Dv_%7By%7D%20&amp;%20u_%7Bx%7Dv_%7Bz%7D%20%5C%5C%20u_%7By%7Dv_%7Bx%7D%20&amp;%20u_%7By%7Dv_%7By%7D%20&amp;%20u_%7By%7Dv_%7Bz%7D%20%5C%5C%20u_%7Bz%7Dv_%7Bx%7D%20&amp;%20u_%7Bz%7Dv_%7By%7D%20&amp;%20u_%7Bz%7Dv_%7Bz%7D%5C%5C%20%5Cend%7Bbmatrix%7D%0A%5Ctag%7B14%7D"></span></p>
<p>Interestingly, we are using the dot product to compute the cross product.</p>
<p>The case where we treat <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bv%7D"> as row vectors is left to the reader.<sup>5</sup></p>
</div>
</div>
</div>
<p>Finally, there is a matrix definition of the cross product as well. Evaluation of the following <a href="https://en.wikipedia.org/wiki/Determinant">determinant</a> gives the cross product:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cvec%7Bu%7D%20%5Ctimes%20%5Cvec%7Bv%7D%20=%20%5Cbegin%7Bvmatrix%7D%20%5Chat%7Bi%7D%20&amp;%20%5Chat%7Bj%7D%20&amp;%20%5Chat%7Bk%7D%5C%5C%20u_%7Bx%7D%20&amp;%20u_%7By%7D%20&amp;%20u_%7Bz%7D%20%5C%5C%20v_%7Bx%7D%20&amp;%20v_%7By%7D%20&amp;%20v_%7Bz%7D%5C%5C%5Cend%7Bvmatrix%7D%0A"></p>
</section>
<section id="what-can-we-do-with-the-cross-product" class="level3">
<h3 class="anchored" data-anchor-id="what-can-we-do-with-the-cross-product">What Can We Do With the Cross Product?</h3>
<ul>
<li>In 3D, the result of the cross product is perpendicular or normal to the plane defined by the two input vectors.</li>
<li>If however, the two vectors are parallel or anti-parallel, the cross product is zero.</li>
<li>The length of the cross product is the area of the parallelogram defined by the two input vectors: <img src="https://latex.codecogs.com/png.latex?%5C%7C%20%5Cvec%7Bu%7D%20%5Ctimes%20%5Cvec%7Bv%7D%20%5C%7C"></li>
</ul>
</section>
</section>
<section id="r-functions" class="level2">
<h2 class="anchored" data-anchor-id="r-functions">R Functions</h2>
<section id="section" class="level3">
<h3 class="anchored" data-anchor-id="section"><code>%*%</code></h3>
<p>The workhorse for matrix multiplication in <code>R</code> is the <code>%*%</code> function. This function will accept any combination of vectors and matrices as inputs, so it is flexible. It is also smart: given a vector and a matrix, the vector will be treated as row or column matrix as needed to ensure conformity, if possible. Let’s look at some examples:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Some data for examples</span></span>
<span id="cb1-2">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb1-3">q <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb1-4">M <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-5">M</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3] [,4] [,5]
[1,]    1    4    7   10   13
[2,]    2    5    8   11   14
[3,]    3    6    9   12   15</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A vector times a vector</span></span>
<span id="cb3-2">p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> q</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1]
[1,]  130</code></pre>
</div>
</div>
<p>Notice that <code>R</code> returns a data type of matrix, but it is a <img src="https://latex.codecogs.com/png.latex?1%20%5Ctimes%201"> matrix, and thus a scalar value. That means we just computed the dot product, a descision <code>R</code> made internally. We can verify this by noting that <code>q %*% p</code> gives the same answer. Thus, <code>R</code> handled these vectors as column vectors and computed <img src="https://latex.codecogs.com/png.latex?p%5E%7B%5Cintercal%7Dq">.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A vector times a matrix</span></span>
<span id="cb5-2">M <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> p</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1]
[1,]  135
[2,]  150
[3,]  165</code></pre>
</div>
</div>
<p>As <code>M</code> had dimensions <img src="https://latex.codecogs.com/png.latex?3%20%5Ctimes%205">, <code>R</code> treated <code>p</code> as a <img src="https://latex.codecogs.com/png.latex?5%20%5Ctimes%201"> column vector in order to be conformable. The result is a <img src="https://latex.codecogs.com/png.latex?3%20%5Ctimes%201"> vector, so this is the cross product.</p>
<p>If we try to compute <code>p %*% M</code> we get an error, because there is nothing <code>R</code> can do to <code>p</code> which will make it conformable to <code>M</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> M</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>Error in p %*% M: non-conformable arguments</code></pre>
</div>
</div>
<p>What about multiplying matrices?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1">M <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> M</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>Error in M %*% M: non-conformable arguments</code></pre>
</div>
</div>
<p>As you can see, when dealing with matrices, <code>%*%</code> will not change a thing, and if your matrices are non-conformable then it’s an error. Of course, if we transpose either instance of <code>M</code> we do have conformable matrices, but the answers are different, and this is neither the dot product or the cross product, just matrix multiplication.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(M) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> M</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3] [,4] [,5]
[1,]   14   32   50   68   86
[2,]   32   77  122  167  212
[3,]   50  122  194  266  338
[4,]   68  167  266  365  464
[5,]   86  212  338  464  590</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1">M <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(M)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]  335  370  405
[2,]  370  410  450
[3,]  405  450  495</code></pre>
</div>
</div>
<p>What can we take from these examples?</p>
<ul>
<li><code>R</code> will give you the <strong>dot product</strong> if you give it two vectors. Note that this is a design decision, as it could have returned the cross product (see Equation&nbsp;14).</li>
<li><code>R</code> will promote a vector to a row or column vector if it can to make it conformable with a matrix you provide. If it cannot, <code>R</code> will give you an error. If it can, the <strong>cross product</strong> is returned.</li>
<li>When it comes to two matrices, <code>R</code> will give an error when they are not conformable.</li>
<li>One function, <code>%*%</code>, does it all: dot product, cross product, or matrix multiplication, but you need to pay attention.</li>
<li>The documentation says as much, but more tersely: “Multiplies two matrices, if they are conformable. If one argument is a vector, it will be promoted to either a row or column matrix to make the two arguments conformable. If both are vectors of the same length, it will return the inner product (as a matrix)”</li>
</ul>
</section>
<section id="other-functions" class="level3">
<h3 class="anchored" data-anchor-id="other-functions">Other Functions</h3>
<p>There are other <code>R</code> functions that do some of the same work:</p>
<ul>
<li><code>crossprod</code> equivalent to <code>t(M) %*% M</code> but faster.</li>
<li><code>tcrossprod</code> equivalent to <code>M %*% t(M)</code> but faster.</li>
<li><code>outer</code> or <code>%o%</code></li>
</ul>
<p>The first two functions will accept combinations of vectors and matrices, as does <code>%*%</code>. Let’s try it with two vectors:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crossprod</span>(p, q)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1]
[1,]  130</code></pre>
</div>
</div>
<p>Huh. <code>crossprod</code> is returning the <em>dot product</em>! So this is the case where “the cross product is not the cross product.” From a clarity perspective, this is not ideal. Let’s try the other function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tcrossprod</span>(p, q)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3] [,4] [,5]
[1,]    6    7    8    9   10
[2,]   12   14   16   18   20
[3,]   18   21   24   27   30
[4,]   24   28   32   36   40
[5,]   30   35   40   45   50</code></pre>
</div>
</div>
<p>There’s the cross product!</p>
<p>What about <code>outer</code>? Remember that another name for the cross product is the outer product. So is <code>outer</code> the same as <code>tcrossprod</code>? In the case of two vectors, it is:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(p, q), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tcrossprod</span>(p, q))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
<p>What about a vector with a matrix?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb21-1">tst <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outer</span>(p, M)</span>
<span id="cb21-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(tst)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5 3 5</code></pre>
</div>
</div>
<p>Alright, that clearly is not a cross product. The result is an array with dimensions <img src="https://latex.codecogs.com/png.latex?5%20%5Ctimes%203%20%5Ctimes%205">, not a matrix (which would have only two dimensions). <code>outer</code> <em>does</em> correspond to the cross product in the case of two vectors, but anything with higher dimensions gives a different beast. So perhaps using “outer” as a synonym for cross product is not a good idea.</p>
</section>
</section>
<section id="advice" class="level2">
<h2 class="anchored" data-anchor-id="advice">Advice</h2>
<p>Given what we’ve seen above, make your life simple and stick to <code>%*%</code>, and pay close attention to the dimensions of the arguments, especially if row or column vectors are in use. In my experience, thinking about the units and dimensions of whatever it is you are calculating is very helpful. Later, if speed is really important in your work, you can use one of the faster alternatives.</p>


</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><aside id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>An extensive dicussion of notations can be found <a href="https://mathoverflow.net/q/366070">here</a>.↩︎</p></li>
<li id="fn2"><p>And curiously, the <img src="https://latex.codecogs.com/png.latex?L_2"> norm works out to be equal to the square root of the dot product of a vector with itself: <img src="https://latex.codecogs.com/png.latex?%5C%7C%20v%20%5C%7C%20=%20%5Csqrt%7Bv%20%5Ccdot%20v%7D">↩︎</p></li>
<li id="fn3"><p>To be multiplied, matrices must be <em>conformable</em>, namely the number of columns of the first matrix must match the number of rows of the second matrix. The reason is so that the dot product terms will match. In the present case we have <img src="https://latex.codecogs.com/png.latex?%5Cmathbf%7BA%7D%5E%7B2%5Ctimes3%7D%5Cmathbf%7BB%7D%5E%7B3%5Ctimes3%7D%20=%20%5Cmathbf%7BC%7D%5E%7B2%5Ctimes3%7D">.↩︎</p></li>
<li id="fn4"><p>Be careful, it turns out that “outer” may not be a great synonym for cross product, as explained later.↩︎</p></li>
<li id="fn5"><p>OK fine, here is the answer when treating <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D"> and <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bv%7D"> as row vectors: <img src="https://latex.codecogs.com/png.latex?%5Cvec%7Bu%7D%20%5Ctimes%20%5Cvec%7Bv%7D%20=%20%5Cvec%7Bu%7D%5E%5Cmathsf%7BT%7D%20%5C%20%5Cvec%7Bv%7D"> which expands exactly as the right-hand side of Equation&nbsp;14.↩︎</p></li>
</ol>
</aside><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Hanson, Bryan},
  title = {Notes on {Linear} {Algebra} {Part} 1},
  date = {2022-08-14},
  url = {http://chemospec.org/posts/2022-08-14-Linear-Alg-Notes/2022-08-14-Linear-Alg-Notes.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2022. <span>“Notes on Linear Algebra Part 1.”</span>
August 14, 2022. <a href="http://chemospec.org/posts/2022-08-14-Linear-Alg-Notes/2022-08-14-Linear-Alg-Notes.html">http://chemospec.org/posts/2022-08-14-Linear-Alg-Notes/2022-08-14-Linear-Alg-Notes.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Linear Algebra</category>
  <guid>http://chemospec.org/posts/2022-08-14-Linear-Alg-Notes/2022-08-14-Linear-Alg-Notes.html</guid>
  <pubDate>Sun, 14 Aug 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>FOSS4Spectroscopy: R vs Python</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2022-07-06-F4S-Update/2022-07-06-F4S-Update.html</link>
  <description><![CDATA[ 



<p>If you aren’t familiar with it, the <a href="https://bryanhanson.github.io/FOSS4Spectroscopy/">FOSS for Spectroscopy web site</a> lists Free and Open Source Software for spectroscopic applications. The collection is of course never really complete, and your package suggestions are most welcome (<a href="https://github.com/bryanhanson/FOSS4Spectroscopy">how to contribute</a>). My methods for finding packages are improving and at this point the major repositories have been searched reasonably well.</p>
<p>A few days ago I pushed a major update, and <strong>at this point <code>Python</code> packages outnumber <code>R</code> packages more than two to one</strong>. The update was made possible because I recently had time to figure out how to search the <a href="https://pypi.org/">PyPi.org</a> site automatically.</p>
<p>In a previous <a href="https://chemospec.org/posts/2021-04-19-Search-GH-Topics/2021-04-19-Search-GH-Topics.html">post</a> I explained the methods I used to find packages related to spectroscopy. These have been updated considerably and the rest of this post will cover the updated methods.</p>
<section id="repos-topics" class="level2">
<h2 class="anchored" data-anchor-id="repos-topics">Repos &amp; Topics</h2>
<p>There are four places I search for packages related to spectroscopy.<sup>1</sup></p>
<ul>
<li><a href="https://cran.r-project.org/">CRAN</a>, searched manually using the <a href="https://cran.r-project.org/web/packages/packagefinder/index.html"><code>packagefinder</code></a> package.<sup>2</sup></li>
<li>Github, searched using custom functions and scripts, detailed below.</li>
<li><a href="https://pypi.org/">PyPi.org</a>, searched as for Github.</li>
<li><a href="https://juliapackages.com/">juliapackages.org</a>, searched manually.</li>
</ul>
<p>The topics I search are as follows:</p>
<ul>
<li>NMR</li>
<li>EPR</li>
<li>ESR</li>
<li>UV</li>
<li>VIS</li>
<li>spectrophotometry</li>
<li>NIR (IR search terms overlap a lot, and also generate many false positives dealing with IR communications, e.g.&nbsp;TV remotes)</li>
<li>FT-IR</li>
<li>FTIR</li>
<li>Raman</li>
<li>XRF</li>
<li>XAS</li>
<li>LIBS (on PyPi.org one must use “laser induced breakdown spectroscopy” because LIBS is the name of a popular software and generates hundreds of false positives)</li>
</ul>
</section>
<section id="searching-cran" class="level2">
<h2 class="anchored" data-anchor-id="searching-cran">Searching CRAN</h2>
<p>I search CRAN using <code>packagefinder</code>; the process is quite straightforward and won’t be covered here. However, it is not an automated process (I should probably work on that).</p>
</section>
<section id="searching-github" class="level2">
<h2 class="anchored" data-anchor-id="searching-github">Searching Github</h2>
<p>The broad approach used to search Github is the same as described in the original <a href="https://chemospec.org/posts/2021-04-19-Search-GH-Topics/2021-04-19-Search-GH-Topics.html">post</a>. However, the scripts have been refined and updated, and now exist as functions in a new package I created called <code>webu</code> (for “webutilities”, but that name is taken on CRAN). The repo is <a href="https://github.com/bryanhanson/webu">here</a>. <code>webu</code> is not on CRAN and I don’t currently intend to put it there, but you can install from the repo of course if you wish to try it out.</p>
<p>Searching Github is now carried out by a supervising script called <code>/utilities/run_searches.R</code> (in the <code>FOSS4Spectroscopy</code> <a href="https://github.com/bryanhanson/FOSS4Spectroscopy">repo</a>). The script contains some notes about finicky details, but is pretty simple overall and should be easy enough to follow.</p>
</section>
<section id="searching-pypi.org" class="level2">
<h2 class="anchored" data-anchor-id="searching-pypi.org">Searching PyPi.org</h2>
<p>Unlike Github, it is not necessary to authenticate to use the PyPi.org API. That makes things simpler than the Github case. The needed functions are in <code>webu</code> and include some deliberate delays so as to not overload their servers. As for Github, searches are supervised by <code>/utilities/run_searches.R</code>.</p>
<p>One thing I observed at PyPi.org is that authors do not always fill out all the fields that PyPi.org can accept, which means some fields are <code>NULL</code> and we have to trap for that possibility. Package information is accessed via a JSON record, for instance the entry for <code>nmrglue</code> can be seen <a href="https://pypi.org/pypi/nmrglue/json">here</a>. This package is pretty typical in that the <code>author_email</code> field is filled out, but the <code>maintainer_email</code> field is not (they are presumably the same). If one considers these JSON files to be analogous to DESCRIPTION in <code>R</code> packages, it looks like there is less oversight on PyPi.org compared to CRAN.</p>
</section>
<section id="searching-julia" class="level2">
<h2 class="anchored" data-anchor-id="searching-julia">Searching Julia</h2>
<p>Julia packages are readily searched manually at <a href="https://juliapackages.com/">juliapackages.org</a>.</p>
</section>
<section id="cleaning-final-vetting" class="level2">
<h2 class="anchored" data-anchor-id="cleaning-final-vetting">Cleaning &amp; Final Vetting</h2>
<p>The raw results from the searches described above still need a lot of inspection and cleaning to be usable. The PyPi.org and Github results are saved in an Excel worksheet with the relevant URLs. These links can be followed to determine the suitability of each package. In the <code>/Utilities</code> folder there are additional scripts to remove entries that are already in the main database (FOSS4Spec.xlsx), as well as to check the names of the packages: Python authors and/or policies seem to lead to cases where different packages can have names differing by case, but also authors are sometimes sloppy when referring to their own packages, sometimes using <code>mypkg</code> and at other times <code>myPkg</code> to refer to the same package.</p>


</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><aside id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Once in a while users submit their own package to the repo, and I also find interesting packages in my literature reading.↩︎</p></li>
<li id="fn2"><p><code>packagefinder</code> has recently been archived, but hopefully will be back soon.↩︎</p></li>
</ol>
</aside><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Hanson, Bryan},
  title = {FOSS4Spectroscopy: {R} Vs {Python}},
  date = {2022-07-06},
  url = {http://chemospec.org/posts/2022-07-06-F4S-Update/2022-07-06-F4S-Update.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2022. <span>“FOSS4Spectroscopy: R Vs Python.”</span> July
6, 2022. <a href="http://chemospec.org/posts/2022-07-06-F4S-Update/2022-07-06-F4S-Update.html">http://chemospec.org/posts/2022-07-06-F4S-Update/2022-07-06-F4S-Update.html</a>.
</div></div></section></div> ]]></description>
  <category>FOSS</category>
  <category>R</category>
  <category>Python</category>
  <category>Julia</category>
  <category>Github</category>
  <category>PyPi</category>
  <guid>http://chemospec.org/posts/2022-07-06-F4S-Update/2022-07-06-F4S-Update.html</guid>
  <pubDate>Wed, 06 Jul 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Introducing LearnPCA</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2022-05-03-LearnPCA-Intro/2022-05-03-LearnPCA-Intro.html</link>
  <description><![CDATA[ 



<p>PCA, or principal components analysis, is one of the most wide-spread statistical methods in use. It shows up in many disciplines, from political science and psychology, to chemistry and biology. PCA is also really challenging to understand.</p>
<p>I’m pleased to announce that my colleague David Harvey and I have recently released <code>LearnPCA</code>, an <code>R</code> package to help people with understanding PCA. In <code>LearnPCA</code> we’ve tried to integrate our years of experience teaching the topic, along with the best insights we can find in books, tutorials and the nooks and crannies of the internet. Though our experience is in a chemometrics context, we use examples from different disciplines so that the package will be broadly helpful.</p>
<p>The package contains seven vignettes that proceed from the conceptual basics to advanced topics. As of version 0.2.0, there is also a Shiny app to help visualize the process of finding the principal component axes. The current vignettes are:</p>
<ul>
<li>A Guide to the LearnPCA Package</li>
<li>A Conceptual Introduction to PCA</li>
<li>Step-by-Step PCA</li>
<li>Understanding Scores and Loadings</li>
<li>Visualizing PCA in 3D</li>
<li>The Math Behind PCA</li>
<li>A Comparison of Functions for PCA</li>
</ul>
<p>You can access the vignettes at the <a href="https://bryanhanson.github.io/LearnPCA/">Github Site</a>, you don’t even have to install the package. For the Shiny app, do the following:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LearnPCA"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># you'll need version 0.2.0</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LearnPCA"</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PCsearch</span>()</span></code></pre></div>
</div>
<p>We would really appreciate your feedback on this package. You can do so in the comments below, or open an <a href="https://github.com/bryanhanson/LearnPCA/issues">issue</a>. 
<script type="application/shiny-prerendered" data-context="server-extras">
ojs_define <- function(..., .session = shiny::getDefaultReactiveDomain()) {
  quos <- rlang::enquos(...)
  vars <- rlang::list2(...)
  nm <- names(vars)
  if (is.null(nm)) {
    nm <- rep_len("", length(vars))
  }
  mapply(function(q, nm, val) {
    # Infer name, if possible
    if (nm == "") {
      tryCatch({
        nm <- rlang::as_name(q)
      }, error = function(e) {
        code <- paste(collapse = "\n", deparse(rlang::f_rhs(q)))
        stop("ojs_define() could not create a name for the argument: ", code)
      })
    }
    .session$output[[nm]] <- val
    outputOptions(.session$output, nm, suspendWhenHidden = FALSE)
    .session$sendCustomMessage("ojs-export", list(name = nm))
    NULL
  }, quos, nm, vars, SIMPLIFY = FALSE, USE.NAMES = FALSE)
  invisible()
}
</script>
</p>
<!--html_preserve-->
<script type="application/shiny-prerendered" data-context="dependencies">
{"type":"list","attributes":{},"value":[]}
</script>
<!--/html_preserve-->
<!--html_preserve-->
<script type="application/shiny-prerendered" data-context="execution_dependencies">
{"type":"list","attributes":{"names":{"type":"character","attributes":{},"value":["packages"]}},"value":[{"type":"list","attributes":{"names":{"type":"character","attributes":{},"value":["packages","version"]},"class":{"type":"character","attributes":{},"value":["data.frame"]},"row.names":{"type":"integer","attributes":{},"value":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34]}},"value":[{"type":"character","attributes":{},"value":["base","cli","compiler","datasets","digest","ellipsis","evaluate","fastmap","graphics","grDevices","htmltools","htmlwidgets","httpuv","jsonlite","knitr","later","lifecycle","magrittr","methods","mime","promises","R6","Rcpp","rlang","rmarkdown","shiny","stats","stringi","stringr","tools","utils","xfun","xtable","yaml"]},{"type":"character","attributes":{},"value":["4.2.0","3.3.0","4.2.0","4.2.0","0.6.29","0.3.2","0.15","1.1.0","4.2.0","4.2.0","0.5.2","1.5.4","1.6.5","1.8.0","1.39","1.3.0","1.0.1","2.0.3","4.2.0","0.12","1.2.0.1","2.5.1","1.0.8.3","1.0.2","2.14","1.7.1","4.2.0","1.7.6","1.4.0","4.2.0","4.2.0","0.30","1.8-4","2.3.5"]}]}]}
</script>
<!--/html_preserve-->



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Hanson, Bryan},
  title = {Introducing {LearnPCA}},
  date = {2022-05-03},
  url = {http://chemospec.org/posts/2022-05-03-LearnPCA-Intro/2022-05-03-LearnPCA-Intro.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2022. <span>“Introducing LearnPCA.”</span> May 3, 2022.
<a href="http://chemospec.org/posts/2022-05-03-LearnPCA-Intro/2022-05-03-LearnPCA-Intro.html">http://chemospec.org/posts/2022-05-03-LearnPCA-Intro/2022-05-03-LearnPCA-Intro.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>PCA</category>
  <guid>http://chemospec.org/posts/2022-05-03-LearnPCA-Intro/2022-05-03-LearnPCA-Intro.html</guid>
  <pubDate>Tue, 03 May 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Metabolic Phenotyping Protocol Part 3</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2022-05-01-Protocol-Pt3/2022-05-01-Protocol-Pt3.html</link>
  <description><![CDATA[ 



<ul>
<li>Part 1 of this series is <a href="https://chemospec.org/posts/2022-02-01-Protocol-Pt1/">here</a>.</li>
<li>Part 2 of this series is <a href="https://chemospec.org/posts/2022-03-24-Protocol-Pt2/">here</a>.</li>
</ul>
<p>If you aren’t familiar with <code>ChemoSpec</code>, you might wish to look at the introductory <a href="https://bryanhanson.github.io/ChemoSpec/articles/ChemoSpec.html">vignette</a> first.</p>
<p><em>In this series of posts we are following the protocol as described in the printed publication closely <span class="citation" data-cites="Blaise2021">(Blaise et al. 2021)</span>. The authors have also provided a <a href="https://github.com/Gscorreia89/chemometrics-tutorials">Jupyter notebook</a>. This is well worth your time, even if Python is not your preferred language, as there are additional examples and discussion for study.</em></p>
<section id="read-in-the-data" class="level1">
<h1>Read in the Data</h1>
<p>Load the <code>Spectra</code> object we created in Part 2 so we can summarize it.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ChemoSpec"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Worms2.RData"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># restores the 'Worms2' Spectra object</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sumSpectra</span>(Worms2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
 C. elegans metabolic phenotyping study (Blaise 2007) 

    There are 133 spectra in this set.
    The y-axis unit is intensity.

    The frequency scale runs from
    8.9995 to 5e-04 ppm
    There are 8600 frequency values.
    The frequency resolution is
    0.001 ppm/point.

    This data set is not continuous
    along the frequency axis.
    Here are the data chunks:

  beg.freq end.freq   size beg.indx end.indx
1   8.9995   5.0005 -3.999        1     4000
2   4.5995   0.0005 -4.599     4001     8600

    The spectra are divided into 4 groups: 

   group no.     color symbol alt.sym
1 Mut_L2  28 #FB0D16FF      0      m2
2 Mut_L4  33 #FFC0CBFF     15      m4
3  WT_L2  32 #511CFCFF      1      w2
4  WT_L4  40 #2E94E9FF     16      w4


*** Note: this is an S3 object
of class 'Spectra'</code></pre>
</div>
</div>
</section>
<section id="exploratory-data-analysis-cont." class="level1">
<h1>Exploratory Data Analysis, Con’t.</h1>
<p>If you recall in Part 2 we removed five samples. Let’s re-run PCA without these samples and show the key plots. We will simply report these here without much discussion; they are pretty much as expected.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">c_pca <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c_pcaSpectra</span>(Worms2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choice =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"autoscale"</span>)</span></code></pre></div>
</div>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotScree</span>(c_pca)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-screeAlt" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-05-01-Protocol-Pt3/2022-05-01-Protocol-Pt3_files/figure-html/fig-screeAlt-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;1: Scree plot (recommended style).</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotScores</span>(Worms2, c_pca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pcs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ellipse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rob"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tol =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>)</span>
<span id="cb5-2">p</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-scores12" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-05-01-Protocol-Pt3/2022-05-01-Protocol-Pt3_files/figure-html/fig-scores12-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;2: Score plot for PCs 1 and 2. Compare to protocol figure 7d.</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotScores</span>(Worms2, c_pca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pcs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ellipse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rob"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">leg.loc =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottomleft"</span>,</span>
<span id="cb6-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tol =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>)</span>
<span id="cb6-3">p</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-scores23" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-05-01-Protocol-Pt3/2022-05-01-Protocol-Pt3_files/figure-html/fig-scores23-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;3: Score plot for PCS 2 and 3.</figcaption>
</figure>
</div>
</div>
</div>
<p>One thing the published protocol does not explicitly discuss is an inspection of the loadings, but it is covered in the <a href="https://github.com/Gscorreia89/chemometrics-tutorials">Jupyter notebook</a>. The loadings are useful in order to see if any particular frequencies are driving the separation of the samples in the score plot. Let’s plot the loadings (Figure&nbsp;4). Remember that these data were autoscaled, and hence all frequencies, including noisy frequencies, will contribute to the separation. If we had not scaled the data, these plots would look dramatically different.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotLoadings</span>(Worms2, c_pca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">loads =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb7-2">p</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-loadings" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-05-01-Protocol-Pt3/2022-05-01-Protocol-Pt3_files/figure-html/fig-loadings-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;4: Loadings for PC1 and PC2.</figcaption>
</figure>
</div>
</div>
</div>
<p>The s-plot is another very useful way to find peaks that are important in separating the samples (Figure&nbsp;5); we can see that the peaks around <img src="https://latex.codecogs.com/png.latex?%5Cdelta"> 1.30-1.32, 1.47-1.48, and 3.03-3.07 are important drivers of the separation in the score plot. Having discovered this, one can investigate the source of those peaks.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb8-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sPlotSpectra</span>(Worms2, c_pca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tol =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>)</span>
<span id="cb8-2">p</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-splot" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-05-01-Protocol-Pt3/2022-05-01-Protocol-Pt3_files/figure-html/fig-splot-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;5: s-Plot for PC1.</figcaption>
</figure>
</div>
</div>
</div>
<section id="supervised-analysis-with-pls-da" class="level2">
<h2 class="anchored" data-anchor-id="supervised-analysis-with-pls-da">Supervised Analysis with PLS-DA</h2>
<p><code>ChemoSpec</code> carries out exploratory data analysis, which is an unsupervised process. The next step in the protocol is PLS-DA (partial least squares - discriminant analysis). I have written about <code>ChemoSpec</code> + PLS <a href="https://chemospec.org/posts/2021-02-08-PLS/2021-02-08-PLS.html">here</a> if you would like more background on plain PLS. However, PLS-DA is a technique that combines data reduction/variable selection along with classification. We’ll need the <code>mixOmics</code> package (<span class="citation" data-cites="mixOmics">F et al. (2017)</span>) package for this analysis; note that loading it replaces the <code>plotLoadings</code> function from <code>ChemoSpec</code>.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mixOmics"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Loading required package: MASS</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Loading required package: lattice</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>
Loaded mixOmics 6.20.0
Thank you for using mixOmics!
Tutorials: http://mixomics.org
Bookdown vignette: https://mixomicsteam.github.io/Bookdown
Questions, issues: Follow the prompts at http://mixomics.org/contact-us
Cite us:  citation('mixOmics')</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'mixOmics'</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>The following object is masked from 'package:ChemoSpec':

    plotLoadings</code></pre>
</div>
</div>
<p>Figure&nbsp;6 shows the score plot; the results suggest that classification and modeling may be successful. The <code>splsda</code> function carries out a single <em>sparse</em> computation. One computation should not be considered the ideal answer; a better approach is to use cross-validation, for instance the <code>bootsPLS</code> function in the <code>bootsPLS</code> package (<span class="citation" data-cites="bootsPLS">Rohart, Le Cao, and Wells (2018)</span> which uses <code>splsda</code> under the hood). However, that computation is too time-consuming to demonstrate here.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb15-1">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Worms2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>data</span>
<span id="cb15-2">Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Worms2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>groups</span>
<span id="cb15-3">splsda <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">splsda</span>(X, Y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncomp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span></code></pre></div>
</div>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotIndiv</span>(splsda,</span>
<span id="cb16-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.per.group =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FB0D16FF"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FFC0CBFF"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#511CFCFF"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#2E94E9FF"</span>),</span>
<span id="cb16-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sPLS-DA Score Plot"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ellipse =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-plsda-indiv" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-05-01-Protocol-Pt3/2022-05-01-Protocol-Pt3_files/figure-html/fig-plsda-indiv-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;6: sPLS-DA plot showing classification.</figcaption>
</figure>
</div>
</div>
</div>
<p>To estimate the number of components needed, the <code>perf</code> function can be used. The results are in Figure&nbsp;7 and suggest that five components are sufficient to describe the data.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb17-1">perf.splsda <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">perf</span>(splsda, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">folds =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrepeat =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(perf.splsda)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-plsda-perf" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-05-01-Protocol-Pt3/2022-05-01-Protocol-Pt3_files/figure-html/fig-plsda-perf-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;7: Evaluation of the PLS-DA performance.</figcaption>
</figure>
</div>
</div>
</div>
<p>At this point, we have several ideas of how to proceed. Going forward, one might choose to focus on accurate classification, or on determining which frequencies should be included in a predictive model. Any model will need to refined and more details extracted. The reader is referred to the case study from the <a href="http://mixomics.org/case-studies/splsda-srbct/">mixOmics</a> folks which covers these tasks and explains the process.</p>
<hr>
<p>This post was created using <code>ChemoSpec</code> version 6.1.3 and <code>ChemoSpecUtils</code> version 1.0.0.</p>



</section>
</section>

<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Blaise2021" class="csl-entry">
Blaise, Benjamin J., Gonçalo D. S. Correia, Gordon A. Haggart, Izabella Surowiec, Caroline Sands, Matthew R. Lewis, Jake T. M. Pearce, et al. 2021. <span>“Statistical Analysis in Metabolic Phenotyping.”</span> <em>Nature Protocols</em> 16: 4299–4326. <a href="https://doi.org/10.1038/s41596-021-00579-1">https://doi.org/10.1038/s41596-021-00579-1</a>.
</div>
<div id="ref-mixOmics" class="csl-entry">
F, Rohart, Gautier B, Singh A, and Le Cao K-A. 2017. <span>“mixOmics: An r Package for ’Omics Feature Selection and Multiple Data Integration.”</span> <em>PLoS Computational Biology</em> 13 (11): e1005752. <a href="http://www.mixOmics.org">http://www.mixOmics.org</a>.
</div>
<div id="ref-bootsPLS" class="csl-entry">
Rohart, Florian, Kim-Anh Le Cao, and Christine Wells. 2018. <em>bootsPLS: Bootstrap Subsamplings of Sparse Partial Least Squares - Discriminant Analysis for Classification and Signature Identification</em>. <a href="https://CRAN.R-project.org/package=bootsPLS">https://CRAN.R-project.org/package=bootsPLS</a>.
</div>
</div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Hanson, Bryan},
  title = {Metabolic {Phenotyping} {Protocol} {Part} 3},
  date = {2022-05-01},
  url = {http://chemospec.org/posts/2022-05-01-Protocol-Pt3/2022-05-01-Protocol-Pt3.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2022. <span>“Metabolic Phenotyping Protocol Part
3.”</span> May 1, 2022. <a href="http://chemospec.org/posts/2022-05-01-Protocol-Pt3/2022-05-01-Protocol-Pt3.html">http://chemospec.org/posts/2022-05-01-Protocol-Pt3/2022-05-01-Protocol-Pt3.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpec</category>
  <category>Metabolomics</category>
  <category>PLS</category>
  <category>PLS-DA</category>
  <guid>http://chemospec.org/posts/2022-05-01-Protocol-Pt3/2022-05-01-Protocol-Pt3.html</guid>
  <pubDate>Sun, 01 May 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Metabolic Phenotyping Protocol Part 2</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2.html</link>
  <description><![CDATA[ 



<p>Part 1 of this series is <a href="https://chemospec.org/posts/2022-02-01-Protocol-Pt1/">here</a>.</p>
<p>If you aren’t familiar with <code>ChemoSpec</code>, you might wish to look at the introductory <a href="https://bryanhanson.github.io/ChemoSpec/articles/ChemoSpec.html">vignette</a> first.</p>
<p><em>In this series of posts we are following the protocol as described in the printed publication closely <span class="citation" data-cites="Blaise2021">(Blaise et al. 2021)</span>. The authors have also provided a <a href="https://github.com/Gscorreia89/chemometrics-tutorials">Jupyter notebook</a>. This is well worth your time, even if Python is not your preferred lanaguage, as there are additional examples and discussion for study.</em></p>
<section id="read-in-the-data" class="level1">
<h1>Read in the Data</h1>
<p>I saved the <code>Spectra</code> object we created in Part 1 so we can read it and remind ourselves of what’s in it. Due to the compression in R’s <code>save</code> function the data takes up 4.9 Mb on disk. The original csv files total about 62 Mb.</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/getData_5c76d8f7c10699917b5f7feda26b160b">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ChemoSpec"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Worms.Rdata"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># restores the 'Worms' Spectra object</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sumSpectra</span>(Worms)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
 C. elegans metabolic phenotyping study (Blaise 2007) 

    There are 139 spectra in this set.
    The y-axis unit is intensity.

    The frequency scale runs from
    8.9995 to 5e-04 ppm
    There are 8600 frequency values.
    The frequency resolution is
    0.001 ppm/point.

    This data set is not continuous
    along the frequency axis.
    Here are the data chunks:

  beg.freq end.freq   size beg.indx end.indx
1   8.9995   5.0005 -3.999        1     4000
2   4.5995   0.0005 -4.599     4001     8600

    The spectra are divided into 4 groups: 

   group no.     color symbol alt.sym
1 Mut_L2  32 #FB0D16FF      0      m2
2 Mut_L4  33 #FFC0CBFF     15      m4
3  WT_L2  34 #511CFCFF      1      w2
4  WT_L4  40 #2E94E9FF     16      w4


*** Note: this is an S3 object
of class 'Spectra'</code></pre>
</div>
</div>
</section>
<section id="exploratory-data-analysis" class="level1">
<h1>Exploratory Data Analysis</h1>
<p>We will follow the steps described in the published protocol closely.</p>
<section id="normalization-scaling" class="level2">
<h2 class="anchored" data-anchor-id="normalization-scaling">Normalization &amp; Scaling</h2>
<p>Apply PQN normalization; scaling in <code>ChemoSpec</code> is applied at the PCA stage (next).</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/norm_56aa7b023a689faf5f4672ad1706bd85">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">Worms <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normSpectra</span>(Worms)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PQN is the default</span></span></code></pre></div>
</div>
</section>
<section id="pca" class="level2">
<h2 class="anchored" data-anchor-id="pca">PCA</h2>
<p>Conduct classical PCA using autoscaling.<sup>1</sup> Note that <code>ChemoSpec</code> includes several different variants of PCA, each with scaling options. See the introductory vignette for more details. For more about what PCA is and how it works, please see the <a href="https://bryanhanson.github.io/LearnPCA/">LearnPCA</a> package.</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/pca_1a1da64fbdebcc58e9e3bb45e7af0a25">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1">c_pca <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c_pcaSpectra</span>(Worms, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choice =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"autoscale"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># no scaling is the default</span></span></code></pre></div>
</div>
<section id="components-to-retain" class="level3">
<h3 class="anchored" data-anchor-id="components-to-retain">Components to Retain</h3>
<p>A key question at this stage is how many components are needed to describe the data set. Keep in mind that this depends on the choice of scaling. Figure&nbsp;1 and Figure&nbsp;2 are two different types of scree plots, which show the residual variance. This is the R<sup>2</sup><sub>x</sub> value in the protocol (see protocol Figure 7a). Another approach to answering this question is to do a cross-validated PCA.<sup>2</sup> The results are shown in Figure&nbsp;3. These are the Q<sup>2</sup><sub>x</sub> values in protocol Figure 7a. All of these ways of looking at the variance explained suggest that retaining three or possibly four PCs is adequate.</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/fig-screeAlt_1abc3fdd975a4c23fc680b69270a7f28">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotScree</span>(c_pca)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-screeAlt" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/fig-screeAlt-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;1: Scree plot (recommended style).</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/fig-screeTrad_83fd39cd7b0de03daf6f9d256e79bf15">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotScree</span>(c_pca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trad"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-screeTrad" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/fig-screeTrad-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;2: Scree plot (traditional style).</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/fig-cv-pca_ce8857bd5320503e2da81e49461bb359">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cv_pcaSpectra</span>(Worms, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">choice =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"autoscale"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pcs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-cv-pca" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/fig-cv-pca-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;3: Scree plot using cross validation.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="score-plots" class="level3">
<h3 class="anchored" data-anchor-id="score-plots">Score Plots</h3>
<p>Next, examine the score plots (Figure&nbsp;4, Figure&nbsp;5). In these plots, each data point is colored by its group membership (keep in mind this is completely independent of the PCA calculation). In addition, robust confidence ellipses are shown for each group. Inspection of these plots is one way to identify potential outliers. The other use is of course to see if the sample classes separate, and by how much.</p>
<p>Examination of these plots shows that separation by classes has not really been achieved using autoscaling. In Figure&nbsp;4 we see four clear outlier candidates (samples 37, 101, 107, and 118). In Figure&nbsp;5 we see some of these samples and should probably add sample 114 for a total of five candidates.</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/fig-scores12_ac627f961d8e9ce3c512c07b3a2f1ca1">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb8-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotScores</span>(Worms, c_pca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pcs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ellipse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rob"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tol =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>)</span>
<span id="cb8-2">p</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-scores12" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/fig-scores12-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;4: Score plot for PCs 1 and 2. Compare to protocol figure 7a.</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/fig-scores23_7c8c513b910ae960f3efa4286710f901">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotScores</span>(Worms, c_pca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pcs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ellipse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rob"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">leg.loc =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tol =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>)</span>
<span id="cb9-2">p</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-scores23" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/fig-scores23-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;5: Score plot for PCS 2 and 3.</figcaption>
</figure>
</div>
</div>
</div>
<p>To label more sample points, you can increase the value of the argument <code>tol</code>.</p>
</section>
<section id="outliers" class="level3">
<h3 class="anchored" data-anchor-id="outliers">Outliers</h3>
<p>The protocol recommends plotting Hotelling’s <em>T</em><sup>2</sup> ellipse for the entire data set; this is not implemented in <code>ChemoSpec</code> but we can easily do it if we are using <code>ggplot2</code> plots (which is the default in <code>ChemoSpec</code>). We need the <code>ellipseCoord</code> function from the <code>HotellingsEllipse</code> package.<sup>3</sup></p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/fig-hotelling1_eadb3ae98074dc823883c80a04b1c9a4">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ellipseCoord.R"</span>)</span>
<span id="cb10-2">xy_coord <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ellipseCoord</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(c_pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pcx =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pcy =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.limit =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>,</span>
<span id="cb10-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pts =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span>
<span id="cb10-4">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotScores</span>(Worms, c_pca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">which =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ellipse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tol =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>)</span>
<span id="cb10-5">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_path</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> xy_coord, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span>
<span id="cb10-6">p</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-hotelling1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/fig-hotelling1-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;6: Score plot for PCs 1 and 2 with Hotelling’s <em>T</em><sup>2</sup> ellipse. Compare to protocol figure 7a.</figcaption>
</figure>
</div>
</div>
</div>
<p>We can see many of the same outliers by this approach as we saw in Figure&nbsp;4 and Figure&nbsp;5.</p>
<p>Another way to identify outliers is to use the approach described in <span class="citation" data-cites="Filzmoser2009">Varmuza and Filzmoser (2009)</span> section 3.7.3. Figure&nbsp;7 and Figure&nbsp;8 give the plots. Please see Filzmoser for the details, but any samples that are above the plotted threshold line are candidate outliers, and any samples above the threshold in <em>both</em> plots should be looked at very carefully. Though we are using classical PCA, Filzmoser recommends using these plots with robust PCA. These plots are a better approach than “eye balling it” on the score plots.</p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/fig-diagOD_ef9c479ac399ac49334d26d78c1eb1f4">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pcaDiag</span>(Worms, c_pca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OD"</span>)</span>
<span id="cb11-2">p</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-diagOD" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/fig-diagOD-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;7: Orthogonal distance plot based on the first three PCs.</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/fig-diagSD_ad3694ee8233f729b195eff1fae86129">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb12-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pcaDiag</span>(Worms, c_pca, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SD"</span>)</span>
<span id="cb12-2">p</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-diagSD" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2_files/figure-html/fig-diagSD-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;8: Score distance plot based on the first three PCs.</figcaption>
</figure>
</div>
</div>
</div>
<p>Comparison of these plots suggest that samples 37, 101, 107, 114 and 118 are likely outliers. These spectra should be examined to see if the reason for their outlyingness can be deduced. If good reason can be found, they can be removed as follows.<sup>4</sup></p>
<div class="cell" data-layout-align="center" data-hash="2022-03-24-Protocol-Pt2_cache/html/removeOutliers_7e075fd15a434d1645e31807799fe6c2">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1">Worms2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">removeSample</span>(Worms, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rem.sam =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"37_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"101_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"107_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"114_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"118_"</span>))</span></code></pre></div>
</div>
<p>At this point one should repeat the PCA, score plots and diagnostic plots to get a good look at how removing these samples affected the results. Those tasks are left to the reader.</p>
<!-- One thing the protocol does not explicitly discuss is an inspection of the loadings.  This is useful in order to see if any particular frequencies are driving the separation of the samples in the score plot. For the sake of completeness, we'll go ahead and plot the loadings. See @fig-loadings. From this plot it is clear that the peaks above $\delta$ 5.0 are not contributing much to differentiating the samples.  One could consider removing these peaks from the analysis, but we'll leave them for now. -->
<p>We will continue in the next post with a discussion of loadings.</p>
<hr>
<p>This post was created using <code>ChemoSpec</code> version 6.1.3 and <code>ChemoSpecUtils</code> version 1.0.0.</p>



</section>
</section>
</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Blaise2021" class="csl-entry">
Blaise, Benjamin J., Gonçalo D. S. Correia, Gordon A. Haggart, Izabella Surowiec, Caroline Sands, Matthew R. Lewis, Jake T. M. Pearce, et al. 2021. <span>“Statistical Analysis in Metabolic Phenotyping.”</span> <em>Nature Protocols</em> 16: 4299–4326. <a href="https://doi.org/10.1038/s41596-021-00579-1">https://doi.org/10.1038/s41596-021-00579-1</a>.
</div>
<div id="ref-Filzmoser2009" class="csl-entry">
Varmuza, K., and P. Filzmoser. 2009. <em>Introduction to Multivariate Statistical Analysis in Chemometrics</em>. CRC Press.
</div>
</div></section><aside id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Without scaling, the largest peaks will drive the separation in the scores plot.↩︎</p></li>
<li id="fn2"><p>Be sure you have <code>ChemoSpec</code> 6.1.3 or higher, as <code>cv_pcaSpectra</code> had a bug in it! One benefit of writing these posts is finding lame bugs…↩︎</p></li>
<li id="fn3"><p>We are sourcing in a corrected version of the function, as the CRAN version has a small <a href="https://github.com/ChristianGoueguel/HotellingEllipse/issues/2">error</a> in it.↩︎</p></li>
<li id="fn4"><p>The <a href="https://github.com/Gscorreia89/chemometrics-tutorials">Jupyter notebook</a> has details about this.↩︎</p></li>
</ol>
</aside><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Hanson, Bryan},
  title = {Metabolic {Phenotyping} {Protocol} {Part} 2},
  date = {2022-03-24},
  url = {http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2022. <span>“Metabolic Phenotyping Protocol Part
2.”</span> March 24, 2022. <a href="http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2.html">http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpec</category>
  <category>Metabolomics</category>
  <guid>http://chemospec.org/posts/2022-03-24-Protocol-Pt2/2022-03-24-Protocol-Pt2.html</guid>
  <pubDate>Thu, 24 Mar 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Chemometrics in Spectroscopy: Key References</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2022-02-18-Key-References/2022-02-18-Key-References.html</link>
  <description><![CDATA[ 



<p>Jerome Workman Jr.&nbsp;and Howard Mark have published a very useful series of articles in <a href="https://www.spectroscopyonline.com">Spectroscopy Online</a>, summarizing common chemometric methods in spectroscopy, and giving the key publications on each. These are a great resource if one is learning about a technique, or if one wants to check out the fundamentals of a method you think you already know. Posting here for convenience!</p>
<p><em>Protip: These pages load slowly in some browsers. I had the best luck with Chrome. Try the reader view for a user-friendly version that prints well (if you are in to that).</em></p>
<ul>
<li><a href="https://www.spectroscopyonline.com/view/a-survey-of-chemometric-methods-used-in-spectroscopy">Survey of Chemometric Methods in Spectroscopy</a></li>
<li><a href="https://www.spectroscopyonline.com/view/survey-of-key-descriptive-references-for-chemometric-methods-used-for-spectroscopy-part-i">Key References Part 1</a></li>
<li><a href="https://www.spectroscopyonline.com/view/survey-of-key-descriptive-references-for-chemometric-methods-used-for-spectroscopy-part-ii">Key References Part 2</a></li>
</ul>



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Hanson, Bryan},
  title = {Chemometrics in {Spectroscopy:} {Key} {References}},
  date = {2022-02-18},
  url = {http://chemospec.org/posts/2022-02-18-Key-References/2022-02-18-Key-References.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2022. <span>“Chemometrics in Spectroscopy: Key
References.”</span> February 18, 2022. <a href="http://chemospec.org/posts/2022-02-18-Key-References/2022-02-18-Key-References.html">http://chemospec.org/posts/2022-02-18-Key-References/2022-02-18-Key-References.html</a>.
</div></div></section></div> ]]></description>
  <category>Literature</category>
  <guid>http://chemospec.org/posts/2022-02-18-Key-References/2022-02-18-Key-References.html</guid>
  <pubDate>Fri, 18 Feb 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Do You have Stale Imports or Suggests?</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2022-02-09-Imports-Suggests/2022-02-09-Imports-Suggests.html</link>
  <description><![CDATA[ 



<p>I’ve been developing packages in <code>R</code> for over a decade now. When adding new features to a package, I often import functions from another package, and of course that package goes in the <code>Imports:</code> field of the <code>DESCRIPTION</code> file. Later, I might change my approach entirely and no longer need that package. Do I remember to remove it from <code>DESCRIPTION</code>? Generally not. The same thing happens when writing a new vignette, and it can happen with the <code>Suggests:</code> field as well. It can also happen when one splits a packages into several smaller packages. If one forgets to delete a package from the <code>DESCRIPTION</code> file, the dependencies become bloated, because all the imported and suggested packages have to be available to install the package. This adds overhead to the project, and increases the possibility of a namespace conflict.</p>
<p>In fact this just happened to me <em>again!</em> The author of a package I had in <code>Suggests:</code> wrote to me and let me know their package would be archived. It was an easy enough fix for me, as it was a “stale” package in that I was no longer using it. I had added it for a vignette which I later deleted, as I decided a series of blog posts was a better approach.</p>
<p>So I decided to write a little function to check for such stale <code>Suggests:</code> and <code>Import:</code> entries. This post is about that function. As far as I can tell there is no built-in function for this purpose, and CRAN does not check for stale entries. So it was worth my time to automate the process.<sup>1</sup></p>
<p>The first step is to read in the <code>DESCRIPTION</code> file for the package (so we want our working directory to be the top level of the package). There is a built in function for this. We’ll use the <code>DESCRIPTION</code> file from the <code>ChemoSpec</code> package as a demonstration.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setwd("...") # set to the top level of the package</span></span>
<span id="cb1-2">desc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.dcf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DESCRIPTION"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">all =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</div>
<p>The argument <code>all = TRUE</code> is a bit odd in that it has a particular purpose (see <code>?read.dcf</code>) which isn’t really important here, but has the side effect of returning a data frame, which makes our job simpler. Let’s look at what is returned.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(desc)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>'data.frame':   1 obs. of  18 variables:
 $ Package         : chr "ChemoSpec"
 $ Type            : chr "Package"
 $ Title           : chr "Exploratory Chemometrics for Spectroscopy"
 $ Version         : chr "6.1.2"
 $ Date            : chr "2022-02-08"
 $ Authors@R       : chr "c(\nperson(\"Bryan A.\", \"Hanson\",\nrole = c(\"aut\", \"cre\"), email =\n\"hanson@depauw.edu\",\ncomment = c("| __truncated__
 $ Description     : chr "A collection of functions for top-down exploratory data analysis\nof spectral data including nuclear magnetic r"| __truncated__
 $ License         : chr "GPL-3"
 $ Depends         : chr "R (&gt;= 3.5),\nChemoSpecUtils (&gt;= 1.0)"
 $ Imports         : chr "plyr,\nstats,\nutils,\ngrDevices,\nreshape2,\nreadJDX (&gt;= 0.6),\npatchwork,\nggplot2,\nplotly,\nmagrittr"
 $ Suggests        : chr "IDPmisc,\nknitr,\njs,\nNbClust,\nlattice,\nbaseline,\nmclust,\npls,\nclusterCrit,\nR.utils,\nRColorBrewer,\nser"| __truncated__
 $ URL             : chr "https://bryanhanson.github.io/ChemoSpec/"
 $ BugReports      : chr "https://github.com/bryanhanson/ChemoSpec/issues"
 $ ByteCompile     : chr "TRUE"
 $ VignetteBuilder : chr "knitr"
 $ Encoding        : chr "UTF-8"
 $ RoxygenNote     : chr "7.1.2"
 $ NeedsCompilation: chr "no"</code></pre>
</div>
</div>
<p>We are interested in the <code>Imports</code> and <code>Suggests</code> elements. Let’s look more closely.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(desc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Imports)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "plyr,\nstats,\nutils,\ngrDevices,\nreshape2,\nreadJDX (&gt;= 0.6),\npatchwork,\nggplot2,\nplotly,\nmagrittr"</code></pre>
</div>
</div>
<p>You can see there are a bunch of newlines in there (<code>\n</code>), along with some version specifications, in parentheses. We need to clean this up so we have a simple list of the packages as a vector. For clean up we’ll use the following helper function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1">clean_up <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(string) {</span>
<span id="cb6-2">  string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, string) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove newlines</span></span>
<span id="cb6-3">  string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(.+</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, string) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove parens &amp; anything within them</span></span>
<span id="cb6-4">  string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strsplit</span>(string, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># split the long string into pieces</span></span>
<span id="cb6-5">  string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trimws</span>(string) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove any white space around words</span></span>
<span id="cb6-6">}</span></code></pre></div>
</div>
<p>After we apply this to the raw results, we have what we are after, a clean list of imported packages.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">imp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_up</span>(desc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Imports)</span>
<span id="cb7-2">imp</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] "plyr"      "stats"     "utils"     "grDevices" "reshape2"  "readJDX"  
 [7] "patchwork" "ggplot2"   "plotly"    "magrittr" </code></pre>
</div>
</div>
<p>Next, we can search the entire package looking for these package names to see if they are used in the package. They might appear in import statements, vignettes, code and so forth, so it’s not sufficient to just look at code. This is a job for <code>grep</code>, but we’ll call <code>grep</code> from within <code>R</code> so that we don’t have to use the command line and transfer the results to <code>R</code>, that gets messy and is error-prone.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(imp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) { <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Note 1</span></span>
<span id="cb9-2">  imp_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FALSE"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(imp)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Boolean to keep track of whether we found a package or not</span></span>
<span id="cb9-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(imp)) {</span>
<span id="cb9-4">    args <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-r -e '"</span>, imp[i], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"' *"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assemble arguments for grep</span></span>
<span id="cb9-5">    g_imp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system2</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grep"</span>, args, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stdout =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb9-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(g_imp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>L) imp_res[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Note 2</span></span>
<span id="cb9-7">  }</span>
<span id="cb9-8">}</span></code></pre></div>
</div>
<ul>
<li>Note 1: We ought to check if there are any imports at all. It would be a bit unusual, but it’s possible to have zero imports.</li>
<li>Note 2: <code>g_imp</code> contains the results of the grep process. If there <em>are</em> imports in the package, each imported package name will be found by grep in the <code>DESCRIPTION</code> file. That’s not so interesting, so we don’t count it. For a package to be stale, it will be found in <code>DESCRIPTION</code> <em>but no where else</em>.</li>
</ul>
<p>We can do the same process for the <code>Suggests:</code> field of <code>DESCRIPTION</code>. And then it would be nice to present the results in a more useable form. At this point we can put it all togther in an easy-to-use function.<sup>2</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run from the package top level</span></span>
<span id="cb10-2">check_stale_imports_suggests <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>() {</span>
<span id="cb10-3"></span>
<span id="cb10-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># helper function: removes extra characters</span></span>
<span id="cb10-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from strings read by read.dcf</span></span>
<span id="cb10-6">  clean_up <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(string) {</span>
<span id="cb10-7">    string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, string)</span>
<span id="cb10-8">    string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(.+</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, string)</span>
<span id="cb10-9">    string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strsplit</span>(string, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>))</span>
<span id="cb10-10">    string <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trimws</span>(string)</span>
<span id="cb10-11">  }</span>
<span id="cb10-12"></span>
<span id="cb10-13">  desc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.dcf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DESCRIPTION"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">all =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb10-14"></span>
<span id="cb10-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># look for use of imported packages</span></span>
<span id="cb10-16">  imp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_up</span>(desc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Imports)</span>
<span id="cb10-17">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(imp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>L) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No Imports: entries found"</span>)</span>
<span id="cb10-18">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(imp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb10-19">    imp_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FALSE"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(imp))</span>
<span id="cb10-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(imp)) {</span>
<span id="cb10-21">      args <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-r -e '"</span>, imp[i], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"' *"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb10-22">      g_imp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system2</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grep"</span>, args, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stdout =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb10-23">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># always found once in DESCRIPTION, hence &gt; 1</span></span>
<span id="cb10-24">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(g_imp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>L) imp_res[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb10-25">    }</span>
<span id="cb10-26">  }</span>
<span id="cb10-27"></span>
<span id="cb10-28">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># look for use of suggested packages</span></span>
<span id="cb10-29">  sug <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_up</span>(desc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Suggests)</span>
<span id="cb10-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sug) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>L) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No Suggests: entries found"</span>)</span>
<span id="cb10-31">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sug) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb10-32">    sug_res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FALSE"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sug))</span>
<span id="cb10-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sug)) {</span>
<span id="cb10-34">      args <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-r -e '"</span>, sug[i], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"' *"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb10-35">      g_sug <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system2</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grep"</span>, args, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stdout =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb10-36">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># always found once in DESCRIPTION, hence &gt; 1</span></span>
<span id="cb10-37">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(g_sug) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>L) sug_res[i] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb10-38">    }</span>
<span id="cb10-39">  }</span>
<span id="cb10-40"></span>
<span id="cb10-41">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># arrange output in easy to read format</span></span>
<span id="cb10-42">  role <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Imports"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(imp)), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Suggests"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(sug)))</span>
<span id="cb10-43"></span>
<span id="cb10-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb10-45">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pkg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(imp, sug),</span>
<span id="cb10-46">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">role =</span> role,</span>
<span id="cb10-47">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">found =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(imp_res, sug_res)))</span>
<span id="cb10-48">}</span></code></pre></div>
</div>
<p>Applying this function to my <code>ChemoSpec2D</code> package (as of the date of this post), we see the following output. You can see a bunch of packages are imported but never used, so I have some work to do. This was the result of copying the <code>DESCRIPTION</code> file from <code>ChemoSpec</code> when I started <code>ChemoSpec2D</code> and obviously I never went back and cleaned things up.</p>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">            pkg     role found</span>
<span id="cb11-2"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>          plyr  Imports  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-3"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>         stats  Imports  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-4"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>         utils  Imports  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-5"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>     grDevices  Imports  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-6"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>      reshape2  Imports  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-7"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>       readJDX  Imports  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-8"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>     patchwork  Imports  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-9"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>       ggplot2  Imports  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-10"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>        plotly  Imports  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-11"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>     magrittr  Imports  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-12"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>      IDPmisc Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-13"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>        knitr Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-14"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>           js Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-15"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>      NbClust Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-16"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>      lattice Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-17"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>     baseline Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-18"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>       mclust Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-19"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>          pls Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-20"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">19</span>  clusterCrit Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-21"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>      R.utils Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-22"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span> RColorBrewer Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-23"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>    seriation Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-24"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">23</span>         MASS Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-25"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>   robustbase Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-26"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>         grid Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-27"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">26</span>        pcaPP Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-28"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27</span>     jsonlite Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-29"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>       gsubfn Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-30"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">29</span>       signal Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-31"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>        speaq Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-32"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span>     tinytest Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-33"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>   elasticnet Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-34"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>        irlba Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-35"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>         amap Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-36"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>    rmarkdown Suggests  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb11-37"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span>     bookdown Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-38"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">37</span> chemometrics Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb11-39"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>    hyperSpec Suggests <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span></code></pre></div>




<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><aside id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>As you will see in a moment, during testing I found a bunch of stale entries I need to remove from several packages!↩︎</p></li>
<li id="fn2"><p>In easy to use form as a <a href="https://gist.github.com/bryanhanson/4c8ac99903df65af9c7e11a972447bc5">Gist</a>.↩︎</p></li>
</ol>
</aside><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Hanson, Bryan},
  title = {Do {You} Have {Stale} {Imports} or {Suggests?}},
  date = {2022-02-09},
  url = {http://chemospec.org/posts/2022-02-09-Imports-Suggests/2022-02-09-Imports-Suggests.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2022. <span>“Do You Have Stale Imports or
Suggests?”</span> February 9, 2022. <a href="http://chemospec.org/posts/2022-02-09-Imports-Suggests/2022-02-09-Imports-Suggests.html">http://chemospec.org/posts/2022-02-09-Imports-Suggests/2022-02-09-Imports-Suggests.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Utilities</category>
  <category>Developers</category>
  <guid>http://chemospec.org/posts/2022-02-09-Imports-Suggests/2022-02-09-Imports-Suggests.html</guid>
  <pubDate>Wed, 09 Feb 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Metabolic Phenotyping Protocol Part 1</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2022-02-01-Protocol-Pt1/2022-02-01-Protocol-Pt1.html</link>
  <description><![CDATA[ 



<p>If you aren’t familiar with <code>ChemoSpec</code>, you might wish to look at the introductory <a href="https://bryanhanson.github.io/ChemoSpec/articles/ChemoSpec.html">vignette</a> first.</p>
<section id="background" class="level1">
<h1>Background</h1>
<p><span class="citation" data-cites="Blaise2021">Blaise et al. (2021)</span> have published a detailed protocol for metabolomic phenotyping. They illustrate the protocol using a data set composed of 139 <sup>1</sup>H HR-MAS SS-NMR spectra <span class="citation" data-cites="Blaise2007">(Blaise et al. 2007)</span> of the model organism <em>Caenorhabditis elegans</em>. There are two genotypes, wild type and a mutant, and worms from two life stages.</p>
<p><em>This series of posts follows the published protocol closely in order to illustrate how to implement the protocol using <code>ChemoSpec</code>. As in any chemometric analysis, there are decisions to be made about how to process the data. In these posts we are interested in which functions to use, and how to examine the results. We are not exploring all possible data processing choices, and argument choices are not necessarily optimized.</em></p>
</section>
<section id="import-the-data" class="level1">
<h1>Import the Data</h1>
<p>The data set is large, over 30 Mb, so we will grab it directly from the Github repo where it is stored. We will use a custom function to grab the data (you can see the function in the source for this document if interested). The URLs given below point to the frequency scale, the raw data matrix and the variables that describe the sample classification by genotype and life stage (L2 are gravid adults, L4 are larvae).</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1">urls <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/Gscorreia89/chemometrics-tutorials/master/data/ppm.csv"</span>,</span>
<span id="cb1-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/Gscorreia89/chemometrics-tutorials/master/data/X_spectra.csv"</span>,</span>
<span id="cb1-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/Gscorreia89/chemometrics-tutorials/master/data/worm_yvars.csv"</span>)</span>
<span id="cb1-4">raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_csvs_from_github</span>(urls, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a list of data sets</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(raw)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "ppm.csv"        "X_spectra.csv"  "worm_yvars.csv"</code></pre>
</div>
</div>
</section>
<section id="construct-the-spectra-object" class="level1">
<h1>Construct the Spectra Object</h1>
<p>The format of the data as provided in Github is not really suited to using either of the built-in import functions in <code>ChemoSpec</code>. Therefore we will construct the <code>Spectra</code> object by hand, a useful exercise in its own right. The requirements for a <code>Spectra</code> object are described in <code>?Spectra</code>.</p>
<section id="process-the-raw-data" class="level2">
<h2 class="anchored" data-anchor-id="process-the-raw-data">Process the Raw Data</h2>
<p>First, we’ll take the results in <code>raw</code> and convert them to the proper form. Each element of <code>raw</code> is a data frame.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># frequencies are in the 1st list element</span></span>
<span id="cb3-2">freq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(raw[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># intensities are in the 2nd list element</span></span>
<span id="cb3-5">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(raw[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dimnames</span>(data) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove the default data frame col names</span></span>
<span id="cb3-7">ns <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(data)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ns = number of samples - used later</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get genotype &amp; lifestage, recode into something more readible</span></span>
<span id="cb3-10">yvars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> raw[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]</span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(yvars) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genotype"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stage"</span>)</span>
<span id="cb3-12">yvars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>genotype <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(yvars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>genotype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>L, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WT"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mut"</span>)</span>
<span id="cb3-13">yvars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>stage <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(yvars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>stage <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>L, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"L4"</span>)</span>
<span id="cb3-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(yvars)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># quick look at how many in each group</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>        stage
genotype L2 L4
     Mut 32 33
     WT  34 40</code></pre>
</div>
</div>
</section>
<section id="assemble-the-spectra-object-by-hand" class="level2">
<h2 class="anchored" data-anchor-id="assemble-the-spectra-object-by-hand">Assemble the Spectra Object by Hand</h2>
<p>Next we’ll construct some useful sample names, create the groups vector, assign the colors and symbols, and finally put it all together into a <code>Spectra</code> object.</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># build up sample names to include the group membership</span></span>
<span id="cb5-2">sample_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>ns)</span>
<span id="cb5-3">sample_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(sample_names, yvars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>genotype, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)</span>
<span id="cb5-4">sample_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(sample_names, yvars<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>stage, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)</span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(sample_names)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "1_WT_L4"  "2_Mut_L4" "3_Mut_L4" "4_WT_L4"  "5_Mut_L4" "6_WT_L4" </code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use the sample names to create the groups vector</span></span>
<span id="cb7-2">grp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[0-9]+_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, sample_names)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove 1_ etc, leaving WT_L2 etc</span></span>
<span id="cb7-3">groups <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(grp)</span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(groups)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Mut_L2" "Mut_L4" "WT_L2"  "WT_L4" </code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set up the colors based on group membership</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(Col12)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># see ?colorSymbol for a swatch</span></span>
<span id="cb9-3">colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> grp</span>
<span id="cb9-4">colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(colors <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WT_L2"</span>, Col12[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], colors)</span>
<span id="cb9-5">colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(colors <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WT_L4"</span>, Col12[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], colors)</span>
<span id="cb9-6">colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(colors <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mut_L2"</span>, Col12[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], colors)</span>
<span id="cb9-7">colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(colors <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mut_L4"</span>, Col12[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>], colors)</span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set up the symbols based on group membership</span></span>
<span id="cb9-10">sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> grp  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># see ?points for the symbol codes</span></span>
<span id="cb9-11">sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(sym <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WT_L2"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, sym)</span>
<span id="cb9-12">sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(sym <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WT_L4"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, sym)</span>
<span id="cb9-13">sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(sym <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mut_L2"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, sym)</span>
<span id="cb9-14">sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(sym <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mut_L4"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, sym)</span>
<span id="cb9-15">sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(sym)</span>
<span id="cb9-16"></span>
<span id="cb9-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set up the alt symbols based on group membership</span></span>
<span id="cb9-18">alt.sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> grp</span>
<span id="cb9-19">alt.sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(alt.sym <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WT_L2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w2"</span>, alt.sym)</span>
<span id="cb9-20">alt.sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(alt.sym <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WT_L4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w4"</span>, alt.sym)</span>
<span id="cb9-21">alt.sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(alt.sym <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mut_L2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m2"</span>, alt.sym)</span>
<span id="cb9-22">alt.sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(alt.sym <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mut_L4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m4"</span>, alt.sym)</span>
<span id="cb9-23"></span>
<span id="cb9-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># put it all together; see ?Spectra for requirements</span></span>
<span id="cb9-25">Worms <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb9-26">Worms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>freq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> freq</span>
<span id="cb9-27">Worms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data</span>
<span id="cb9-28">Worms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sample_names</span>
<span id="cb9-29">Worms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>groups <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> groups</span>
<span id="cb9-30">Worms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> colors</span>
<span id="cb9-31">Worms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sym</span>
<span id="cb9-32">Worms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>alt.sym <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> alt.sym</span>
<span id="cb9-33">Worms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>unit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ppm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"intensity"</span>)</span>
<span id="cb9-34">Worms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>desc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C. elegans metabolic phenotyping study (Blaise 2007)"</span></span>
<span id="cb9-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(Worms) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spectra"</span></span>
<span id="cb9-36"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chkSpectra</span>(Worms)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># verify we have everything correct</span></span>
<span id="cb9-37"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sumSpectra</span>(Worms)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
 C. elegans metabolic phenotyping study (Blaise 2007) 

    There are 139 spectra in this set.
    The y-axis unit is intensity.

    The frequency scale runs from
    8.9995 to 5e-04 ppm
    There are 8600 frequency values.
    The frequency resolution is
    0.001 ppm/point.

    This data set is not continuous
    along the frequency axis.
    Here are the data chunks:

  beg.freq end.freq   size beg.indx end.indx
1   8.9995   5.0005 -3.999        1     4000
2   4.5995   0.0005 -4.599     4001     8600

    The spectra are divided into 4 groups: 

   group no.     color symbol alt.sym
1 Mut_L2  32 #FB0D16FF      0      m2
2 Mut_L4  33 #FFC0CBFF     15      m4
3  WT_L2  34 #511CFCFF      1      w2
4  WT_L4  40 #2E94E9FF     16      w4


*** Note: this is an S3 object
of class 'Spectra'</code></pre>
</div>
</div>
</section>
<section id="plot-it-to-check-it" class="level2">
<h2 class="anchored" data-anchor-id="plot-it-to-check-it">Plot it to check it</h2>
<p>Let’s look at one sample from each group to make sure everything looks reasonable (Figure Figure&nbsp;1). At least these four spectra look good. Note that we are using the latest <code>ChemoSpec</code> that uses <code>ggplot2</code> graphics by default (announced <a href="https://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/">here</a>).</p>
<div class="cell" data-layout-align="center">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotSpectra</span>(Worms, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">which =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lab.pos =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">offset =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.008</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">amplify =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>,</span>
<span id="cb11-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yrange =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>))</span>
<span id="cb11-3">p</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-samplePlot" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="http://chemospec.org/posts/2022-02-01-Protocol-Pt1/2022-02-01-Protocol-Pt1_files/figure-html/fig-samplePlot-1.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">Figure&nbsp;1: Sample spectra from each group.</figcaption>
</figure>
</div>
</div>
</div>
<p>In the next post we’ll continue with some basic exploratory data analysis.</p>
<hr>
<p>This post was created using <code>ChemoSpec</code> version 6.1.3 and <code>ChemoSpecUtils</code> version 1.0.0.</p>



</section>
</section>

<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-Blaise2021" class="csl-entry">
Blaise, Benjamin J., Gonçalo D. S. Correia, Gordon A. Haggart, Izabella Surowiec, Caroline Sands, Matthew R. Lewis, Jake T. M. Pearce, et al. 2021. <span>“Statistical Analysis in Metabolic Phenotyping.”</span> <em>Nature Protocols</em> 16: 4299–4326. <a href="https://doi.org/10.1038/s41596-021-00579-1">https://doi.org/10.1038/s41596-021-00579-1</a>.
</div>
<div id="ref-Blaise2007" class="csl-entry">
Blaise, Benjamin J., Jean Giacomotto, Bénédicte Elena, Marc-Emmanuel Dumas, Pierre Toulhoat, Laurent Ségalat, and Lyndon Emsley. 2007. <span>“Metabotyping of Caenorhabditis Elegans Reveals Latent Phenotypes.”</span> <em>Proceedings of the National Academy of Sciences</em> 104 (50): 19808–12. <a href="https://doi.org/10.1073/pnas.0707393104">https://doi.org/10.1073/pnas.0707393104</a>.
</div>
</div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2022,
  author = {Hanson, Bryan},
  title = {Metabolic {Phenotyping} {Protocol} {Part} 1},
  date = {2022-02-01},
  url = {http://chemospec.org/posts/2022-02-01-Protocol-Pt1/2022-02-01-Protocol-Pt1.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2022" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2022. <span>“Metabolic Phenotyping Protocol Part
1.”</span> February 1, 2022. <a href="http://chemospec.org/posts/2022-02-01-Protocol-Pt1/2022-02-01-Protocol-Pt1.html">http://chemospec.org/posts/2022-02-01-Protocol-Pt1/2022-02-01-Protocol-Pt1.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpec</category>
  <category>Metabolomics</category>
  <guid>http://chemospec.org/posts/2022-02-01-Protocol-Pt1/2022-02-01-Protocol-Pt1.html</guid>
  <pubDate>Tue, 01 Feb 2022 07:00:00 GMT</pubDate>
</item>
<item>
  <title>GSOC 2021: New Graphics for ChemoSpec</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/2021-10-13-GSOC-CS-Graphics.html</link>
  <description><![CDATA[ 



<table>
<tbody><tr>
<td>
<img src="http://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/og-image.png" alt="GSOC_logo" style="width:100px;">
</td>
<td>
It’s been quiet around this blog because supervising two students for <a href="https://summerofcode.withgoogle.com/">Google Summer of Code</a> has kept me pretty busy! But we have some news…
</td>
</tr>
</tbody></table>
<p>Thanks to Mr.&nbsp;Tejasvi Gupta and the support of GSOC, <a href="https://bryanhanson.github.io/ChemoSpec/"><code>ChemoSpec</code></a> and <a href="https://bryanhanson.github.io/ChemoSpec2D/"><code>ChemoSpec2D</code></a> were extended to produce <code>ggplot2</code> graphics and <code>plotly</code> graphics! <code>ggplot2</code> is now the default output, and the <code>ggplot2</code> object is returned, so if one doesn’t like the choice of theme or any other aspect, one can customize the object to one’s desire. The <code>ggplot2</code> graphics output are generally similar in layout and spirit to the <code>base</code> graphics output, but significant improvements have been made in labeling data points using the <code>ggrepel</code> package. The original <code>base</code> graphics are still available as well. Much of this work required changes in <code>ChemoSpecUtils</code> which supports the common needs of both packages.</p>
<p>Tejasvi did a really great job with this project, and I think users of these packages will really like the results. We have greatly expanded the pre-release testing of the graphics, and as far as we can see every thing works as intended. Of course, please file an issue if you see any problems or unexpected behavior.</p>
<p>To see more about how the new graphics options work, take a look at <a href="https://rdrr.io/cran/ChemoSpecUtils/man/GraphicsOptions.html">GraphicsOptions</a>. Here are the functions that were updated:</p>
<ul>
<li><code>plotSpectra</code></li>
<li><code>surveySpectra</code></li>
<li><code>surveySpectra2</code></li>
<li><code>reviewAllSpectra</code> (formerly <code>loopThruSpectra</code>)</li>
<li><code>plotScree</code> (resides in <code>ChemoSpecUtils</code>)</li>
<li><code>plotScores</code> (resides in <code>ChemoSpecUtils</code>)</li>
<li><code>plotLoadings</code> (uses <code>patchwork</code> and hence <code>plotly</code> isn’t available)</li>
<li><code>plot2Loadings</code></li>
<li><code>sPlotSpectra</code></li>
<li><code>pcaDiag</code></li>
<li><code>plotSampleDist</code></li>
<li><code>aovPCAscores</code></li>
<li><code>aovPCAloadings</code> (uses <code>patchwork</code> and hence <code>plotly</code> isn’t available)</li>
</ul>
<p>Tejasvi and I are looking forward to your feedback. There are many other smaller changes that we’ll let users discover as they work. And there’s more work to be done, but other projects need attention and I need a little rest!</p>



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2021,
  author = {Hanson, Bryan},
  title = {GSOC 2021: {New} {Graphics} for {ChemoSpec}},
  date = {2021-10-13},
  url = {http://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/2021-10-13-GSOC-CS-Graphics.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2021" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2021. <span>“GSOC 2021: New Graphics for
ChemoSpec.”</span> October 13, 2021. <a href="http://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/2021-10-13-GSOC-CS-Graphics.html">http://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/2021-10-13-GSOC-CS-Graphics.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>ChemoSpec</category>
  <category>ChemoSpecUtils</category>
  <category>ChemoSpec2D</category>
  <category>GSOC</category>
  <guid>http://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/2021-10-13-GSOC-CS-Graphics.html</guid>
  <pubDate>Wed, 13 Oct 2021 07:00:00 GMT</pubDate>
</item>
<item>
  <title>GSOC 2021: hyperSpec and ChemoSpec!</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2021-05-22-GSOC-hyperSpec-ChemoSpec/2021-05-22-GSOC-hyperSpec-ChemoSpec.html</link>
  <description><![CDATA[ 



<p>I’m really happy to announce that this summer I’ll be a co-mentor on two <a href="https://summerofcode.withgoogle.com/">Google Summer of Code</a> spectroscopy projects:</p>
<ul>
<li>Once again, I’ll co-mentor with Claudia and Vilmantas to continue the work Erick started last summer on <a href="https://cran.r-project.org/web/packages/hyperSpec/index.html"><code>hyperSpec</code></a> (see <a href="https://chemospec.org/posts/2020-09-08-GSOC-hyperSpec/">here</a> for Erick’s wrap up blog post at the end of last year). <a href="https://github.com/sangttruong">Sang Truong</a> is the very talented student who will be joining us. Sang’s project is described <a href="https://github.com/rstats-gsoc/gsoc2021/wiki/hyperSpec">here</a>.</li>
<li>New this year: <a href="https://bryanhanson.github.io/ChemoSpec/"><code>ChemoSpec</code></a> will be upgraded to use <code>ggplot2</code> graphics along with interactive graphics for many of the plots that are currently rendered in <a href="https://github.com/rstats-gsoc/gsoc2021/wiki/Interactive-Graphics-for-ChemoSpec">base graphics</a>. Erick, who was the student working on <code>hyperSpec</code> last summer, will be my co-mentor on this project. We are looking forward to having <a href="https://github.com/Tejasvigupta">Tejasvi Gupta</a> as the student on this project.</li>
</ul>



<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2021,
  author = {Hanson, Bryan},
  title = {GSOC 2021: {hyperSpec} and {ChemoSpec!}},
  date = {2021-05-22},
  url = {http://chemospec.org/posts/2021-05-22-GSOC-hyperSpec-ChemoSpec/2021-05-22-GSOC-hyperSpec-ChemoSpec.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2021" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2021. <span>“GSOC 2021: hyperSpec and ChemoSpec!”</span>
May 22, 2021. <a href="http://chemospec.org/posts/2021-05-22-GSOC-hyperSpec-ChemoSpec/2021-05-22-GSOC-hyperSpec-ChemoSpec.html">http://chemospec.org/posts/2021-05-22-GSOC-hyperSpec-ChemoSpec/2021-05-22-GSOC-hyperSpec-ChemoSpec.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>hyperSpec</category>
  <category>ChemoSpec</category>
  <category>GSOC</category>
  <guid>http://chemospec.org/posts/2021-05-22-GSOC-hyperSpec-ChemoSpec/2021-05-22-GSOC-hyperSpec-ChemoSpec.html</guid>
  <pubDate>Sat, 22 May 2021 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Automatically Searching Github Repos by Topic</title>
  <dc:creator>Bryan Hanson</dc:creator>
  <link>http://chemospec.org/posts/2021-04-19-Search-GH-Topics/2021-04-19-Search-GH-Topics.html</link>
  <description><![CDATA[ 



<p>One of the projects I maintain is the <a href="https://bryanhanson.github.io/FOSS4Spectroscopy/">FOSS for Spectroscopy web site</a>. The table at that site lists various software for use in spectroscopy. Historically, I have used the Github or Python Package Index search engines to manually search by topic such as “NMR” to find repositories of interest. Recently, I decided to try to automate at least some of this process. In this post I’ll present the code and steps I developed to search Github by topics. Fortunately, I wasn’t starting from scratch, as I had learned some basic web-scraping techniques when I wrote the functions that get the date of the most recent repository update. All the code for this website and project can be viewed <a href="https://github.com/bryanhanson/FOSS4Spectroscopy">here</a>. The steps reported here are current as of the publication of this post, but are subject to change in the future.<sup>1</sup></p>
<p>First off, did you know Github allows repository owners to tag their repositories using topical keywords? I didn’t know this for a long time. So add topics to your repositories if you don’t have them already. By the way, <em>the Achilles heel of this project is that good pieces of software may not have any topical tags at all</em>. If you run into this, perhaps you would consider creating an issue to ask the owner to add tags.</p>
<section id="the-overall-approach" class="level2">
<h2 class="anchored" data-anchor-id="the-overall-approach">The Overall Approach</h2>
<p>If you look at the <code>Utilities</code> directory of the project, you’ll see the scripts and functions that power this search process.</p>
<ul>
<li><code>Search Repos for Topics Script.R</code> supervises the whole process. It sources:</li>
<li><code>searchRepos.R</code> (a function)</li>
<li><code>searchTopic.R</code> (a function)</li>
</ul>
<p>First let’s look at the supervising script. First, the necessary preliminaries:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"jsonlite"</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"httr"</span>)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stringr"</span>)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"readxl"</span>)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WriteXLS"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Utilities/searchTopic.R"</span>)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Utilities/searchRepos.R"</span>)</span></code></pre></div>
</div>
<p>Note that this assumes one has the top level directory, <code>FOSS4Spectroscopy</code>, as the working directory (this is a bit easier than constantly jumping around).</p>
<p>Next, we pull in the Excel spreadsheet that contains all the basic data about the repositories that we already know about, so we can eventually remove those from the search results.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1">known <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_xlsx</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOSS4Spec.xlsx"</span>))</span>
<span id="cb2-2">known <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> known<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>name</span></code></pre></div>
</div>
<p>Now we define some topics and run the search (more on the search functions in a moment):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">topics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NMR"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EPR"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ESR"</span>)</span>
<span id="cb3-2">res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">searchRepos</span>(topics, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"github_token"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">known.repos =</span> known)</span></code></pre></div>
</div>
<p>We’ll also talk about that <code>github_token</code> in a moment. With the search results in hand, we have a few steps to make a useful file name and save it in the <code>Searches</code> folder for future use.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1">file_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(topics, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)</span>
<span id="cb4-2">file_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Search"</span>, file_name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)</span>
<span id="cb4-3">file_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(file_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xlsx"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>)</span>
<span id="cb4-4">file_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Searches"</span>, file_name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>)</span>
<span id="cb4-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WriteXLS</span>(res, file_name,</span>
<span id="cb4-6">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NA"</span>)</span></code></pre></div>
</div>
<p>At this point, one can open the spreadsheet in Excel and check each URL (the links are live in the spreadsheet). After vetting each site,<sup>2</sup> one can append the new results to the existing <code>FOSS4Spec.xlsx</code> data base and refresh the entire site so the table is updated.</p>
<p>To make this job easier, I like to have the search results spreadsheet open and then open all the URLs using the as follows. Then I can quickly clean up the spreadsheet (it helps to have two monitors for this process).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">found <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_xlsx</span>(file_name))</span>
<span id="cb5-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(found)) {</span>
<span id="cb5-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^https?://"</span>, found<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>url[i], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ignore.case =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BROWSE</span>(found<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>url[i])</span>
<span id="cb5-4">}</span></code></pre></div>
</div>
</section>
<section id="authentificating" class="level2">
<h2 class="anchored" data-anchor-id="authentificating">Authentificating</h2>
<p>In order to use the Github API, you have to authenticate. Otherwise you will be severely <a href="https://docs.github.com/en/rest/reference/rate-limit">rate-limited</a>. If you are authenticated, you can make up to 5,000 API queries per hour.</p>
<p>To authenticate, you need to first establish some credentials with Github, by setting up a “key” and a “secret”. You can set these up <a href="https://github.com/settings/developers">here</a> by choosing the “Oauth Apps” tab. Record these items in a secure way, and be certain you don’t actually publish them by pushing.</p>
<p>Now you are ready to authenticate your <code>R</code> instance using <a href="https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow">“Web Application Flow”</a>.<sup>3</sup></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1">myapp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">oauth_app</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOSS"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"put_your_key_here"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">secret =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"put_your_secret_here"</span>)</span>
<span id="cb6-2">github_token <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">oauth2.0_token</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">oauth_endpoints</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"github"</span>), myapp)</span></code></pre></div>
</div>
<p>If successful, this will open a web page which you can immediately close. In the <code>R</code> console, you’ll need to choose whether to do a one-time authentification, or leave a hidden file behind with authentification details. I use the one-time option, as I don’t want to accidently publish the secrets in the hidden file (since they are easy to overlook, being hidden and all).</p>
</section>
<section id="searchtopic" class="level2">
<h2 class="anchored" data-anchor-id="searchtopic"><code>searchTopic</code></h2>
<p><code>searchTopic</code> is a function that accesses the Github API to search for a single topic.<sup>4</sup> This function is “pretty simple” in that it is short, but there are six helper functions defined in the same file. So, “short not short”. This function does all the heavy lifting; the major steps are:</p>
<ol type="1">
<li><p>Carry out an authenticated query of the topics associated with all Github repositories. This first “hit” returns up to 30 results, and also a header than tells how many more pages of results are out there.</p></li>
<li><p>Process that first set of results by converting the response to a JSON structure, because nice people have already built functions to handle such things (I’m looking at you <a href="https://httr.r-lib.org/"><code>httr</code></a>).</p>
<ol type="i">
<li><p>Check that structure for a message that will tell us if we got stopped by Github access issues (and if so, report access stats).</p></li>
<li><p>Extract only the name, description and repository URL from the huge volume of information captured.</p></li>
</ol></li>
<li><p>Inspect the first response to see how many more pages there are, then loop over page two (we already have page 1) to the number of pages, basically repeating step 2.</p></li>
</ol>
<p>Along the way, all the results are stored in a data.frame.</p>
</section>
<section id="searchrepos" class="level2">
<h2 class="anchored" data-anchor-id="searchrepos"><code>searchRepos</code></h2>
<p><code>searchRepos</code> does two simple things:</p>
<ul>
<li>Loops over all topics, since <code>searchTopic</code> only handles one topic at a time.</li>
<li>Optionally, dereplicates the results by excluding any repositories that we already know about.</li>
</ul>
</section>
<section id="other-stuff-to-make-life-easier" class="level2">
<h2 class="anchored" data-anchor-id="other-stuff-to-make-life-easier">Other Stuff to Make Life Easier</h2>
<p>There are two other scripts in the <code>Utilities</code> folder that streamline maintenance of the project.</p>
<ul>
<li><code>mergeSearches.R</code> which will merge several search results into one, removing duplicates along the way.</li>
<li><code>mergeMaintainers.R</code> which will query CRAN for the maintainers of all packages in <code>FOSS4Spec.xlsx</code>, and add this info to the file.<sup>5</sup> Maintainers are not currently displayed on the main website. However, I hope to eventually e-mail all maintainers so they can fine-tune the information about their entries.</li>
</ul>
</section>
<section id="future-work-contributing" class="level2">
<h2 class="anchored" data-anchor-id="future-work-contributing">Future Work / Contributing</h2>
<p>Clearly it would be good for someone who knows <code>Python</code> to step in and write the analogous search code for PyPi.org. Depending upon time contraints, I may use this as an opportunity to learn more <code>Python</code>, but really, if you want to help that would be quicker!</p>
<p>And that folks, is how the sausage is made.</p>


</section>


<script data-goatcounter="https://chemospec.goatcounter.com/count" async="" src="//gc.zgo.at/count.js"></script><div id="quarto-appendix" class="default"><aside id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>This code has been tested on a number of searches and I’ve captured every exception I’ve encountered. If you have problems using this code, please file an issue. It’s nearly impossible that it is perfect at this point!↩︎</p></li>
<li id="fn2"><p>Some search terms produce quite a few false positives. I also review each repository to make sure the project is actually FOSS, is not a student project etc (more details on the main web site).↩︎</p></li>
<li id="fn3"><p>While I link to the documentation for completeness, the steps described next do all the work.↩︎</p></li>
<li id="fn4"><p>See notes in the file: I have not been able to get the Github API to work with multiple terms, so we search each one individually.↩︎</p></li>
<li id="fn5"><p>Want to contribute? If you know the workings of the PyPi.org API it would be nice to automatically pull the maintainer’s contact info.↩︎</p></li>
</ol>
</aside><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div id="quarto-reuse" class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{hanson2021,
  author = {Hanson, Bryan},
  title = {Automatically {Searching} {Github} {Repos} by {Topic}},
  date = {2021-04-19},
  url = {http://chemospec.org/posts/2021-04-19-Search-GH-Topics/2021-04-19-Search-GH-Topics.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-hanson2021" class="csl-entry quarto-appendix-citeas">
Hanson, Bryan. 2021. <span>“Automatically Searching Github Repos by
Topic.”</span> April 19, 2021. <a href="http://chemospec.org/posts/2021-04-19-Search-GH-Topics/2021-04-19-Search-GH-Topics.html">http://chemospec.org/posts/2021-04-19-Search-GH-Topics/2021-04-19-Search-GH-Topics.html</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Github</category>
  <category>FOSS</category>
  <category>httr</category>
  <guid>http://chemospec.org/posts/2021-04-19-Search-GH-Topics/2021-04-19-Search-GH-Topics.html</guid>
  <pubDate>Mon, 19 Apr 2021 07:00:00 GMT</pubDate>
</item>
</channel>
</rss>
