{
  "hash": "2567172b264986bb779aa37bf0148cc4",
  "result": {
    "markdown": "---\ntitle: \"Introducing LearnPCA\"\ndescription: \"Improve your understanding of PCA\"\ndate: \"2022-05-03\"\ncategories: [R, PCA]\nserver: shiny\n---\n\nPCA, or principal components analysis, is one of the most wide-spread statistical methods in use.  It shows up in many disciplines, from political science and psychology, to chemistry and biology.  PCA is also really challenging to understand.\n\nI'm pleased to announce that my colleague David Harvey and I have recently released `LearnPCA`, an `R` package to help people with understanding PCA.  In `LearnPCA` we've tried to integrate our years of experience teaching the topic, along with the best insights we can find in books, tutorials and the nooks and crannies of the internet.  Though our experience is in a chemometrics context, we use examples from different disciplines so that the package will be broadly helpful.\n\nThe package contains seven vignettes that proceed from the conceptual basics to advanced topics.  As of version 0.2.0, there is also a Shiny app to help visualize the process of finding the principal component axes. The current vignettes are:\n\n* A Guide to the LearnPCA Package\n* A Conceptual Introduction to PCA\n* Step-by-Step PCA\n* Understanding Scores and Loadings\n* Visualizing PCA in 3D\n* The Math Behind PCA\n* A Comparison of Functions for PCA\n\nYou can access the vignettes at the [Github Site](https://bryanhanson.github.io/LearnPCA/), you don't even have to install the package.  For the Shiny app, do the following:\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"LearnPCA\") # you'll need version 0.2.0\nlibrary(\"LearnPCA\")\nPCsearch()\n```\n:::\n\nWe would really appreciate your feedback on this package.  You can do so in the comments below, or open an [issue](https://github.com/bryanhanson/LearnPCA/issues).\npreserve09b37685d61d0d86\n\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"dependencies\">\n{\"type\":\"list\",\"attributes\":{},\"value\":[]}\n</script>\n<!--/html_preserve-->\n<!--html_preserve-->\n<script type=\"application/shiny-prerendered\" data-context=\"execution_dependencies\">\n{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"packages\",\"version\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"data.frame\"]},\"row.names\":{\"type\":\"integer\",\"attributes\":{},\"value\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"base\",\"cli\",\"compiler\",\"datasets\",\"digest\",\"ellipsis\",\"evaluate\",\"fastmap\",\"graphics\",\"grDevices\",\"htmltools\",\"htmlwidgets\",\"httpuv\",\"jsonlite\",\"knitr\",\"later\",\"lifecycle\",\"magrittr\",\"methods\",\"mime\",\"promises\",\"R6\",\"Rcpp\",\"rlang\",\"rmarkdown\",\"shiny\",\"stats\",\"stringi\",\"stringr\",\"tools\",\"utils\",\"xfun\",\"xtable\",\"yaml\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"4.2.0\",\"3.3.0\",\"4.2.0\",\"4.2.0\",\"0.6.29\",\"0.3.2\",\"0.15\",\"1.1.0\",\"4.2.0\",\"4.2.0\",\"0.5.2\",\"1.5.4\",\"1.6.5\",\"1.8.0\",\"1.39\",\"1.3.0\",\"1.0.1\",\"2.0.3\",\"4.2.0\",\"0.12\",\"1.2.0.1\",\"2.5.1\",\"1.0.8.3\",\"1.0.2\",\"2.14\",\"1.7.1\",\"4.2.0\",\"1.7.6\",\"1.4.0\",\"4.2.0\",\"4.2.0\",\"0.30\",\"1.8-4\",\"2.3.5\"]}]}]}\n</script>\n<!--/html_preserve-->",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {
      "preserve09b37685d61d0d86": "\n<script type=\"application/shiny-prerendered\" data-context=\"server-extras\">\nojs_define <- function(..., .session = shiny::getDefaultReactiveDomain()) {\n  quos <- rlang::enquos(...)\n  vars <- rlang::list2(...)\n  nm <- names(vars)\n  if (is.null(nm)) {\n    nm <- rep_len(\"\", length(vars))\n  }\n  mapply(function(q, nm, val) {\n    # Infer name, if possible\n    if (nm == \"\") {\n      tryCatch({\n        nm <- rlang::as_name(q)\n      }, error = function(e) {\n        code <- paste(collapse = \"\\n\", deparse(rlang::f_rhs(q)))\n        stop(\"ojs_define() could not create a name for the argument: \", code)\n      })\n    }\n    .session$output[[nm]] <- val\n    outputOptions(.session$output, nm, suspendWhenHidden = FALSE)\n    .session$sendCustomMessage(\"ojs-export\", list(name = nm))\n    NULL\n  }, quos, nm, vars, SIMPLIFY = FALSE, USE.NAMES = FALSE)\n  invisible()\n}\n</script>\n"
    },
    "postProcess": true
  }
}