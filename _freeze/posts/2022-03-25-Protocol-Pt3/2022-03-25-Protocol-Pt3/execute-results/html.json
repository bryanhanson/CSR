{
  "hash": "0267e04a6887cb49710f9f0b694125c0",
  "result": {
    "markdown": "---\ntitle: \"Metabolic Phenotyping Protocol Part 3\"\ndescription: \"Implementing the Statistical Analysis in Metabolic Phenotyping Protocol of Blaise *et al.*\"\ndate: \"2022-03-25\"\ncategories: [R, ChemoSpec, Metabolomics]\nbibliography: REFS.bib\ndraft: true\n---\n\n::: {.cell}\n\n:::\n\n* Part 1 of this series is [here](https://chemospec.org/posts/2022-02-01-Protocol-Pt1/).\n* Part 2 of this series is [here](https://chemospec.org/posts/2022-03-24-Protocol-Pt2/).\n\nIf you aren't familiar with `ChemoSpec`, you might wish to look at the introductory [vignette](https://bryanhanson.github.io/ChemoSpec/articles/ChemoSpec.html) first.\n\n**In this series of posts we are following the protocol as described in the printed publication closely [@Blaise2021].  The authors have also provided a [Jupyter notebook](https://github.com/Gscorreia89/chemometrics-tutorials).  This is well worth your time, even if Python is not your preferred lanaguage, as there are additional examples and discussion for study.**\n\n# Read in the Data\n\nLoad the `Spectra` object we created in Part 2 so we can summarize it.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(\"ChemoSpec\")\nload(\"Worms2.RData\")  # restores the 'Worms2' Spectra object\nsumSpectra(Worms2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n C. elegans metabolic phenotyping study (Blaise 2007) \n\n\tThere are 133 spectra in this set.\n\tThe y-axis unit is intensity.\n\n\tThe frequency scale runs from\n\t8.9995 to 5e-04 ppm\n\tThere are 8600 frequency values.\n\tThe frequency resolution is\n\t0.001 ppm/point.\n\n\tThis data set is not continuous\n\talong the frequency axis.\n\tHere are the data chunks:\n\n  beg.freq end.freq   size beg.indx end.indx\n1   8.9995   5.0005 -3.999        1     4000\n2   4.5995   0.0005 -4.599     4001     8600\n\n\tThe spectra are divided into 4 groups: \n\n   group no.     color symbol alt.sym\n1 Mut_L2  28 #FB0D16FF      0      m2\n2 Mut_L4  33 #FFC0CBFF     15      m4\n3  WT_L2  32 #511CFCFF      1      w2\n4  WT_L4  40 #2E94E9FF     16      w4\n\n\n*** Note: this is an S3 object\nof class 'Spectra'\n```\n:::\n:::\n\n# Exploratory Data Analysis, Con't.\n\nIf you recall in Part 2 we removed five samples.  Let's re-run PCA without these samples and show the key plots.  We will simply report these here without much discussion; they are pretty much as expected.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nc_pca <- c_pcaSpectra(Worms2, choice = \"autoscale\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplotScree(c_pca)\n```\n\n::: {.cell-output-display}\n![Scree plot (recommended style).](2022-03-25-Protocol-Pt3_files/figure-html/fig-screeAlt-1.png){#fig-screeAlt fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np <- plotScores(Worms2, c_pca, pcs = 1:2, ellipse = \"rob\", tol = 0.02)\np\n```\n\n::: {.cell-output-display}\n![Score plot for PCs 1 and 2. Compare to protocol figure 7d.](2022-03-25-Protocol-Pt3_files/figure-html/fig-scores12-1.png){#fig-scores12 fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np <- plotScores(Worms2, c_pca, pcs = 2:3, ellipse = \"rob\", leg.loc = \"topright\",\n    tol = 0.02)\np\n```\n\n::: {.cell-output-display}\n![Score plot for PCS 2 and 3.](2022-03-25-Protocol-Pt3_files/figure-html/fig-scores23-1.png){#fig-scores23 fig-align='center' width=80%}\n:::\n:::\n\nOne thing the published protocol does not explicitly discuss is an inspection of the loadings, but it is covered in the [Jupyter notebook](https://github.com/Gscorreia89/chemometrics-tutorials).  This is useful in order to see if any particular frequencies are driving the separation of the samples in the score plot. Let's plot the loadings (@fig-loadings). Remember that these data were autoscaled, and hence all frequencies, including noisy frequencies, will contribute to the separation.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np <- plotLoadings(Worms2, c_pca, loads = 1:2)\np\n```\n\n::: {.cell-output-display}\n![Loadings for PC1 and PC2.](2022-03-25-Protocol-Pt3_files/figure-html/fig-loadings-1.png){#fig-loadings fig-align='center' width=80%}\n:::\n:::\n\n\nFrom @fig-splot we can see that the peaks around $\\delta$ 1.30 - 1.32, 1.47-1.48, and 3.03 - 3.07 are important drivers of the separation in the score plot.  As an illustration, let's look at the loadings around $\\delta$ 1.3 a bit more closely (@fig-loadingsDetail).\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np <- sPlotSpectra(Worms2, c_pca, tol = 0.001)\np\n```\n\n::: {.cell-output-display}\n![s-Plot for PC1.](2022-03-25-Protocol-Pt3_files/figure-html/fig-splot-1.png){#fig-splot fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np <- plotLoadings(Worms2, c_pca, loads = 1)\np <- p & coord_cartesian(xlim = c(1.29, 1.33))  # plotLoadings needs & not +\np\n```\n\n::: {.cell-output-display}\n![Loadings for PC1 and PC2.](2022-03-25-Protocol-Pt3_files/figure-html/fig-loadingsDetail-1.png){#fig-loadingsDetail fig-align='center' width=80%}\n:::\n:::\n\n\n---\n\nThis post was created using `ChemoSpec` version 6.1.3 and `ChemoSpecUtils` version 1.0.0.",
    "supporting": [
      "2022-03-25-Protocol-Pt3_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}