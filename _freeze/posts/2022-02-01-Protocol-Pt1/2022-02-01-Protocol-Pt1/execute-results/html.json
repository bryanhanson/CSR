{
  "hash": "f390fa245f2c2a2b4f9ef852f32c1d15",
  "result": {
    "markdown": "---\ntitle: \"Metabolic Phenotyping Protocol Part 1\"\ndescription: Implementing the Statistical Analysis in Metabolic Phenotyping Protocol of Blaise *et al.*\nauthor: \"Bryan Hanson\"\ndate: 2022-02-01\ncategories:\n  - R\n  - ChemoSpec\noutput:\n  distill::distill_article:\n    self_contained: false\nbibliography: REFS.bib\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\nIf you aren't familiar with `ChemoSpec`, you might wish to look at the introductory [vignette](https://bryanhanson.github.io/ChemoSpec/articles/ChemoSpec.html) first.\n\n# Background\n\n@Blaise2021 have published a detailed protocol for metabolomic phenotyping.  They illustrate the protocol using a data set composed of 139 ^1^H HR-MAS SS-NMR spectra [@Blaise2007] of the model organism *Caenorhabditis elegans*.  There are two genotypes, wild type and a mutant, and worms from two life stages.\n\n**This series of posts follows the published protocol closely in order to illustrate how to implement the protocol using `ChemoSpec`. As in any chemometric analysis, there are decisions to be made about how to process the data. In these posts we are interested in which functions to use, and how to examine the results.  We are not exploring all possible data processing choices, and argument choices are not necessarily optimized. **\n\n# Import the Data\n\nThe data set is large, over 30 Mb, so we will grab it directly from the Github repo where it is stored.  We will use a custom function to grab the data (you can see the function in the source for this document if interested).  The URLs given below point to the frequency scale, the raw data matrix and the variables that describe the sample classification by genotype and life stage (L2 are gravid adults, L4 are larvae).\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nurls <- c(\"https://raw.githubusercontent.com/Gscorreia89/chemometrics-tutorials/master/data/ppm.csv\",\n    \"https://raw.githubusercontent.com/Gscorreia89/chemometrics-tutorials/master/data/X_spectra.csv\",\n    \"https://raw.githubusercontent.com/Gscorreia89/chemometrics-tutorials/master/data/worm_yvars.csv\")\nraw <- get_csvs_from_github(urls, sep = \",\")  # a list of data sets\nnames(raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"ppm.csv\"        \"X_spectra.csv\"  \"worm_yvars.csv\"\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n# Construct the Spectra Object\n\nThe format of the data as provided in Github is not really suited to using either of the built-in import functions in `ChemoSpec`.  Therefore we will construct the `Spectra` object by hand, a useful exercise in its own right.  The requirements for a `Spectra` object are described in `?Spectra`.\n\n## Process the Raw Data\n\nFirst, we'll take the results in `raw` and convert them to the proper form.  Each element of `raw` is a data frame.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# frequencies are in the 1st list element\nfreq <- unlist(raw[[1]], use.names = FALSE)\n\n# intensities are in the 2nd list element\ndata <- as.matrix(raw[[2]])\ndimnames(data) <- NULL  # remove the default data frame col names\nns <- nrow(data)  # ns = number of samples - used later\n\n# get genotype & lifestage, recode into something more readible\nyvars <- raw[[3]]\nnames(yvars) <- c(\"genotype\", \"stage\")\nyvars$genotype <- ifelse(yvars$genotype == 1L, \"WT\", \"Mut\")\nyvars$stage <- ifelse(yvars$stage == 1L, \"L2\", \"L4\")\ntable(yvars)  # quick look at how many in each group\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        stage\ngenotype L2 L4\n     Mut 32 33\n     WT  34 40\n```\n:::\n:::\n\n## Assemble the Spectra Object by Hand\n\nNext we'll construct some useful sample names, create the groups vector, assign the colors and symbols, and finally put it all together into a `Spectra` object.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# build up sample names to include the group membership\nsample_names <- as.character(1:ns)\nsample_names <- paste(sample_names, yvars$genotype, sep = \"_\")\nsample_names <- paste(sample_names, yvars$stage, sep = \"_\")\nhead(sample_names)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"1_WT_L4\"  \"2_Mut_L4\" \"3_Mut_L4\" \"4_WT_L4\"  \"5_Mut_L4\" \"6_WT_L4\" \n```\n:::\n\n```{.r .cell-code}\n# use the sample names to create the groups vector\ngrp <- gsub(\"[0-9]+_\", \"\", sample_names)  # remove 1_ etc, leaving WT_L2 etc\ngroups <- as.factor(grp)\nlevels(groups)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Mut_L2\" \"Mut_L4\" \"WT_L2\"  \"WT_L4\" \n```\n:::\n\n```{.r .cell-code}\n# set up the colors based on group membership\ndata(Col12)  # see ?colorSymbol for a swatch\ncolors <- grp\ncolors <- ifelse(colors == \"WT_L2\", Col12[1], colors)\ncolors <- ifelse(colors == \"WT_L4\", Col12[2], colors)\ncolors <- ifelse(colors == \"Mut_L2\", Col12[3], colors)\ncolors <- ifelse(colors == \"Mut_L4\", Col12[4], colors)\n\n# set up the symbols based on group membership\nsym <- grp  # see ?points for the symbol codes\nsym <- ifelse(sym == \"WT_L2\", 1, sym)\nsym <- ifelse(sym == \"WT_L4\", 16, sym)\nsym <- ifelse(sym == \"Mut_L2\", 0, sym)\nsym <- ifelse(sym == \"Mut_L4\", 15, sym)\nsym <- as.integer(sym)\n\n# set up the alt symbols based on group membership\nalt.sym <- grp\nalt.sym <- ifelse(alt.sym == \"WT_L2\", \"w2\", alt.sym)\nalt.sym <- ifelse(alt.sym == \"WT_L4\", \"w4\", alt.sym)\nalt.sym <- ifelse(alt.sym == \"Mut_L2\", \"m2\", alt.sym)\nalt.sym <- ifelse(alt.sym == \"Mut_L4\", \"m4\", alt.sym)\n\n# put it all together; see ?Spectra for requirements\nWorms <- list()\nWorms$freq <- freq\nWorms$data <- data\nWorms$names <- sample_names\nWorms$groups <- groups\nWorms$colors <- colors\nWorms$sym <- sym\nWorms$alt.sym <- alt.sym\nWorms$unit <- c(\"ppm\", \"intensity\")\nWorms$desc <- \"C. elegans metabolic phenotyping study (Blaise 2007)\"\nclass(Worms) <- \"Spectra\"\nchkSpectra(Worms)  # verify we have everything correct\nsumSpectra(Worms)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n C. elegans metabolic phenotyping study (Blaise 2007) \n\n\tThere are 139 spectra in this set.\n\tThe y-axis unit is intensity.\n\n\tThe frequency scale runs from\n\t8.9995 to 5e-04 ppm\n\tThere are 8600 frequency values.\n\tThe frequency resolution is\n\t0.001 ppm/point.\n\n\tThis data set is not continuous\n\talong the frequency axis.\n\tHere are the data chunks:\n\n  beg.freq end.freq   size beg.indx end.indx\n1   8.9995   5.0005 -3.999        1     4000\n2   4.5995   0.0005 -4.599     4001     8600\n\n\tThe spectra are divided into 4 groups: \n\n   group no.     color symbol alt.sym\n1 Mut_L2  32 #FB0D16FF      0      m2\n2 Mut_L4  33 #FFC0CBFF     15      m4\n3  WT_L2  34 #511CFCFF      1      w2\n4  WT_L4  40 #2E94E9FF     16      w4\n\n\n*** Note: this is an S3 object\nof class 'Spectra'\n```\n:::\n:::\n\n## Plot it to check it\n\nLet's look at one sample from each group to make sure everything looks reasonable (Figure \\@ref(fig:samplePlot)).  At least these four spectra look good. Note that we are using the latest `ChemoSpec` that uses `ggplot2` graphics by default (announced [here](https://chemospec.org/posts/2021-10-13-GSOC-CS-Graphics/)).\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np <- plotSpectra(Worms, which = c(35, 1, 34, 2), lab.pos = 7.5, offset = 0.008, amplify = 35,\n    yrange = c(-0.05, 1.1))\np\n```\n\n::: {.cell-output-display}\n![Sample spectra from each group.](2022-02-01-Protocol-Pt1_files/figure-html/samplePlot-1.png){fig-align='center' width=80%}\n:::\n:::\n\nIn the next post we'll continue with some basic exploratory data analysis.\n\n---\n\nThis post was created using `ChemoSpec` version 6.1.3 and `ChemoSpecUtils` version 1.0.0.",
    "supporting": [
      "2022-02-01-Protocol-Pt1_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}